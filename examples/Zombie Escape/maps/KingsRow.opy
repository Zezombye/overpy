
@Rule "kings row"
@Event global
if mapId == 17:
    sectionData = []
    sectionData.append(vect(0, 6, 15))
    sectionData.append(vect(1, 6, 20))
    sectionData.append(vect(7, 5, 20))
    sectionData.append(vect(12, 6, 20))
    sectionData.append(vect(18, 5, 15))
    sectionData.append(vect(23, 2, 20))
    sectionData.append(vect(25, 0, 10))
    lateTps = []
    lateTps.append(vect(62.73, 5.86, -55.22))
    lateTps.append(vect(32.71, 7.46, -31.96))
    lateTps.append(vect(-10.513, 0.937, 41.313))
    lateTps.append(vect(24.319, 5.35, -4.521))
    lateTps.append(vect(-25.564, 1.336, -34.058))
    lateTps.append(vect(-92.891, 2.859, -28.7))
    lateTps.append(vect(-156.65, 1.479, 48.01))
    H = vect(21.27, 0.58, -48.48)
    deathplaneY = -15
    sectionRadiuses = []
    sectionRadiuses.append(21)
    sectionRadiuses.append(16)
    sectionRadiuses.append(17)
    sectionRadiuses.append(20)
    sectionRadiuses.append(25)
    sectionRadiuses.append(35)
    sectionRadiuses.append(10)
    triggers = []
    triggers.append(vect(30.029, 7.399, -15.74))
    triggers.append(vect(-17.2, 0.55, 42.439))
    triggers.append(vect(9.729, 9.35, -8.53))
    triggers.append(vect(-22.48, 2.35, -16.36))
    triggers.append(vect(-95.54, -1.141, -46.36))
    triggers.append(vect(-168.86, 1.16, 35.54))
    triggers.append(vect(-178.84, 1.54, 37.25))
    walls = []
    walls.append(vect(30.77, 5.96, -8))
    X = 1
    walls.append(vect(27.6, 5.859, -39.78))
    walls.append(vect(31.81, 0.24, -63.221))
    walls.append(vect(25, 5.96, -10.971))
    walls.append(vect(25.359, 5.859, -51.5))
    walls.append(vect(24.88, 5.96, -16.25))
    walls.append(vect(19.22, 4, -6.98))
    X = 2
    walls.append(vect(10.5, 7.35, -16.181))
    walls.append(vect(-8.021, 1.24, 3.88))
    walls.append(vect(1.109, 1.42, 4.25))
    walls.append(vect(-1.59, 1.24, -12.7))
    walls.append(vect(4.67, 7, -13.62))
    X = 3
    walls.append(vect(-11.931, 1.41, -15.03))
    walls.append(vect(-2.94, 1.41, -38.69))
    walls.append(vect(-19.63, 2.35, -54.021))
    walls.append(vect(-15.25, 1.229, -27.73))
    walls.append(vect(-15.471, 1.22, -31.96))
    walls.append(vect(-17.3, 1.22, -37))
    X = 4
    walls.append(vect(-62.45, 6.3, -17.04))
    walls.append(vect(-66.01, 6.37, -12.891))
    walls.append(vect(-52.851, 1.2, -36.07))
    walls.append(vect(-55.46, 0.95, -32.54))
    walls.append(vect(-72.33, 1.16, -12.42))
    X = 5
    walls.append(vect(-170.521, 1.479, 39.27))
    walls.append(vect(-171.641, 1.479, 32.51))
    tpStarts = []
    tpStarts.append(vect(0, -30, 0))
    tpStarts.append(vect(42.16, 0.67, 31.96))
    tpStarts.append(vect(-20.25, 1.26, 27.649))
    tpStarts.append(vect(0, -30, 0))
    tpStarts.append(vect(-19.271, 2.35, -16.34))
    tpStarts.append(vect(-97.971, -1.141, -47.771))
    tpStarts.append(vect(0, -30, 0))
    tpDests = []
    tpDests.append(vect(62.729, 5.859, -55.221))
    tpDests.append(vect(3.63, 3.55, 52.29))
    tpDests.append(vect(7.409, 1.488, 13.761))
    tpDests.append(vect(11.27, 7.35, -2.21))
    tpDests.append(vect(-29.23, 10.35, -12.99))
    tpDests.append(vect(-102.94, 2.24, -8.07))
    tpDests.append(vect(-102.94, 2.24, -8.07))
