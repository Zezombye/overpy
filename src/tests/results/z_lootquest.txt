settings
{
	main
	{
		Description: "Loot Quest - Regular Maps - v7.5.1.8 (by Delwion#2667) Share Code 4QV99: Hunt enemies for a chance to obtain epic loot and save your progress with the help of a 40-digit save code! Enemy levels: 1-60. Loot Quest news, game mode manual, and forums on: https://lootquest.shivtr.com"
		Mode Name: "Loot Quest - Regular Maps"
	}
	lobby
	{
		Map Rotation: After A Game
		Max Spectators: 0
		Max Team 1 Players: 0
		Max Team 2 Players: 6
		Return To Lobby: Never
		Swap Teams After Match: No
	}
	modes
	{
		Skirmish
		{
			enabled maps
			{
				Blizzard World
				Blizzard World Winter
				Dorado
				Eichenwalde
				Eichenwalde Halloween
				Hanamura
				Hanamura Winter
				Havana
				Hollywood
				Hollywood Halloween
				Horizon Lunar Colony
				Junkertown
				King's Row
				King's Row Winter
				Numbani
				Paris
				Rialto
				Route 66
				Temple of Anubis
				Volskaya Industries
				Watchpoint: Gibraltar
			}
		}
		General
		{
			Allow Hero Switching: Off
			Game Mode Start: Immediately
			Hero Limit: Off
			Kill Cam: Off
			Kill Feed: Off
			Spawn Health Packs: Disabled
		}
	}
	heroes
	{
		Team 2
		{
			enabled heroes
			{
				Tracer
			}
		}
	}
}
variables {
    global:
        0: llIIIllIllIlllIlllIIIlllll
        1: lIlIlIIlIIIIlIllIIllllllll
        2: IlllllIIlIIllIlIlIIIlIlIlI
        3: IllIIlIllllIIIllIlllIIlIIl
        4: IIIlIlllIllllIlllllllIIlII
        5: IIIIlIIllIlllIllIIIlIlIlll
        6: lIllIIlIlIIIIIlIIIlIlIlllI
        7: IlllIIIIlIIIlIllIIlIlIlllI
        8: IIIllIIlllIlllllllllIlIllI
        9: lllIlIIIIIIlIlIIllIlIllllI
        10: lllllIIlIlllIIllIIlIIlllII
        11: IIllIllIllllIIlIlIlIIIIlIl
        12: lIIlIlIlllllIllIIllIlllIIl
        13: IllIllllIIIIllIIIIIIIlIIIl
        14: lIlIllIlIIlllIIllIIIIllIlI
        15: IIlIllIIlIIllIlIlIIllIIIIl
        16: IIIllIIIlIIllIIIIlIllllllI
        17: IIlIlllIlIIIIllIIlIlIlIlll
        18: llIlIIIlllIlIllllllllllIII
        19: IIlllIIIIIllIlIllIlIlllIII
        20: IIIlIIIlIIllIIlllIlIIllIll
        21: IIlIllIIllIIlIllIIIIIIIIlI
        22: lIIlIIIIllIIIIIlIlIIIlIIll
        23: IIIlllllIIIllllllIIllIlIIl
        24: IlIllIIlIIIIlIIlIlIIIlIIlI
        25: lllllIIIlIlIlllllIlllIlllI
        26: IlIIlIIIlllIIlIllIIIIIllIl
        27: IlIllllIllllllIIlIIlIllIII
        28: llIlIlIllIIllIlIlllIIlllIl
        29: lIIlIllllllIlllIlIIlIIllll
        30: lllIIllllIlIIlllIlIIIIlIIl
        31: IlllllIlllIIIllIIllllIlllI
        32: IlllIlllllIIllIlIlIIlIllll
        33: llIllIlIIIIlIIlllIllIlllIl
        34: IlllIllIIIlIIlIIIIlIlIIIIl
        35: IllIlIIllIIIIllllIllIIIIlI
        36: IIIIlllIIIIlIIIlIIIIllllIl
        37: IIIlIlllIlIllIIllllllIIIIl
        38: IllIIIlIllllllIllIlllIlIll
        39: lllIIIIllIIlIIllIlIIllllII
        40: lllllIlIIlllIIIlIlllllllIl
        41: lIIlllIllllIlIIIIlIllIIIlI
        42: IlIlIIIlIIllllIllIlllllIll
        43: IlIIIIllIllIllllIlIlIllllI
        44: llIIlllllIIlllllllllIIlIII
        45: IlIllIIIlIIIIIIllIIIIIIIIl
        46: IlIIIIIlllIlIlIIlllIIlllll
        47: IlllllIIllIlIIIllIIIllIIIl
        48: llIIllllIIIlIIIIIllIlIIIll
        49: IIlIllllllllIlIIIlllIlllIl
        50: IIIIlIIIIIlIIIIlIIIIllIlII
        51: IIllIIIlIllIlIlllIlllIlllI
        52: IlIllIIIIIIIIllIIlIIllllII
        53: llllIIlIlllIIlllllIIIlIlll
        54: llIIIllIlIlIIIIllIlllllIIl
        55: IIIlIlIIIIllIlllllIIIIllIl
        56: llIlIllIIIlllIlllIIlIIIIII
        57: llllIIllIIlIIIlIlIlIlIlIlI
        58: lllIllIlIlllIIIIlIIlIIllII
        59: lllllIIIllIIIllIlIIllIllII
        60: IllIlIllIllIllIIlIIIIllIIl
        61: llllIIIIllIIlIlIIllIIllIll
        62: IllIIlIllIlIIIllIIlIIlllIl
        63: llIlIIlIlIlIllIllllIllIllI
        64: lIllllllIlIIlllIlllllIllll
        65: IIIIllIlIIlIIIlIIllIllIIlI
        66: lIlIIIlIlIIllIIIIllIlIlIlI
        67: IIllllIlIIlIIIllIllIIIIlII
        68: IIlIlIIlllIlIIllllIIlIlIIl
        69: IlIllllIIIIIIIIlllIIllIIII
        70: llIIIllIIIIlIlllIlIIIllIll
        71: lIlIIlIIlIlIIlIlllllIlIIII
        72: lIllIllIIllIllllIIlllIIlIl
        73: IlIIlIlIIIlIIlIIlllllIlllI
        74: lIIllIllIllIlIIIlllIlllIIl
        75: IllIlIIIlIlIIIlIlllIIIllII
        76: IIIllIIIlllIllIIlIIIllllII
        77: lIIIIIllllIlIIIIlIIIlIIIll
        78: IIIlIIlIIIIIlIlIIIlIllIlII
    player:
        0: IIIIIlIlIlIllIlllllIIllIll
        1: IlllIlIIIIIlIlllIIIIlIllll
        2: llllllIlIIlIIllIIlllIlIIII
        3: lIlllllllIlIlIlIIIIIlllIII
        4: llllllIlIIIIllIllIlIIIllII
        5: lllIIIIIIIlllIIlIIIlllIIIl
        6: lIllIIIIlIIlllIllIllIIIlII
        7: IIllIIlIIllIIlIIlIlllIIllI
        8: IIllIlllIllIIIllIIIlllIIII
        9: lIIIIllIIIIIlIIIIllllIlIlI
        10: lIlIlIIlIIIllIIIlIIlIllIIl
        11: lIlllllllllIllllIIIIlllIlI
        12: IIlIllllllIIlIIIllllIIllII
        13: lIIllIlllIllIlIIIlIllIIIlI
        14: llllIIlIlllllllIIllIlIllII
        15: llIlIIllIIIIIIIIlIlIlIIlII
        16: IlIlIlIIIlIIlIIlIlIlIIllll
        17: IllIlIIIllIlIlIIIlIIlIlIII
        18: IlIIlllllIIlIIllIIlllIIIll
        19: IllIlIllIlllIlIlIIIIIlllll
        20: IIllIIlllllllIlIIllIIIIIll
        21: IIlIIIIllllIllIIlIIIIlIlll
        22: lllIlIIllIIllIIIIlllIIllII
        23: IlIllIIlllllllllIIIIllllll
        24: IIlIIIIIIllIIlIlIIIlllllIl
        25: lIlIIlIIlIllIIIIIlIlIIIIll
        26: IlllIIlilllIilIIIIIIlIlIil
        27: llIIlllIllIIIllIllIIIIIIll
        28: llIllIlIllIIlIlIIlIIlIIIll
        29: IlIIIIIlllIlIIlIlIlllIlllI
        30: llIIllIlIlIlIIlllIllllIIIl
        31: IIIIlIIlIIlIlIIllIIlIIIIII
        32: IllIlIllIIIIlIIllIllIllIlI
        33: lIIlIIIIIIIlIIlIIlIIIlllIl
        34: lIlIlllIIlIlllIIIIllIIlIlI
        35: lIIlIlllIIlllIIlIlIlIIllll
        36: lIlIlllIllIlIIIllllIllIlll
        37: IllIIIIlIlIIlIIllIllIIIlll
        38: llllIlIIllIlllIlIllIIIllll
        39: llllIIlIIIllIIIllllIIllllI
        40: lllIIlllIIlIIlllIIIIlllIlI
        41: lIlIIIIIIlIIlIlIlIIlIIIIlI
        42: IIlllllIIIIlllIIIlllIllIlI
        43: llllIIlIIllIllIIlllllIllll
        44: lIIIIIlIlIllIlIIIIIlIlIIlI
        45: IlIlIIIlIIllIIIIllIlIIllll
        46: lIlIIlIlIlIIIlIlllllIlIIII
        47: lIIIllIIllIIIllIlIIllIlIll
        48: IIIllIIllIIIIllIlIlIIIIIII
        49: IlIllIlIlIlllIIlIllllllllI
        50: lIIIIlIlIIlIIlIllllllIIllI
        51: lIllIIlIllllIlIIIllIIllIlI
        52: IllIlIIlIIlIlIlIllIllllllI
        53: llIIllllIIlIIIIIIIlIlIlllI
        54: llllllIllIIlllllIlIIlIIllI
        55: llIIIIIIllIIlIIlIlIIIIllII
        56: IIIlIlIllIIIlIIllllIIllIII
        57: IIIlIlIIlIIlIIIlllllIIIlIl
        58: IlllIIlllIlllIIlIlIIIIllIl
        59: IIIIIIlIlIllIIIllllIllIlll
        60: llIIlllIIIIllIIllIIIIIllII
        61: lIlIlIIIIllIlllIIIIIlIlIll
        62: IIllIIllIllllllllIIlIIIIll
        63: IlIIllIlllllIlIIlIlIlllllI
        64: IIIllIIIlIlIlIlIlIllIIIlIl
        65: IIIlIlIllIlllIllllIlIllIll
        66: lIIllIlIlllIIllIlIIllllIIl
        67: IIlIllllIllIIllIlIIlIIlIll
        68: IllIlIlIIlIIIIIIIIlIlIlIlI
        69: IIIlIlIIlllIIlIIlllIIIIlII
        70: IlIIIlIIlIIIIlIlIlIlIIlIll
        71: lllIlllIIllIlIIIlllIIlIllI
        72: lIIIIIllIlIIlIlIIIlIlIIlII
        73: IlIlIlIlIIIlIIllIIlllllIIl
        74: lIIlIllIIIIllIlIIIlIIlIIII
        75: llllllIIIlllIlIlIlIIIIIlll
        76: lIIIIIIlIIllllIllIlIIllIlI
        77: lIIIlIlIIIIIIllllIlIlIlllI
        78: IlllIllIlIlllIlIlIIlIllIlI
        79: IIlllIlIIIlIlIlIlIIIIIllII
        80: IIIIlllIllIIIllIllIlIlIlll
        81: llIllIIIlIllllIIlIlIIIlllI
        82: llIIIIIIIlIIIIlIlIIIIlIllI
        83: IIIlIllIlIIllIlIlllllIlIll
        84: IllIlllllIIIlIllIllllllIII
        85: lIlIIIIlIIlIIlIIlIIIllllII
        86: IIlIIllIIIllIllllIIIIlIIll
        87: lIIIlIIIlllllIIllIllIIIIll
        88: IIIIIIlllllllIlIIIIIlllIlI
        89: IlIIIllIIlIIllllIlIIllllIl
        90: llIIlIIIIlIllIIIIIlIIlIIll
        91: IIIIIIIIlIIlIIIIIIIllIIIII
        92: lllIlIlIlIIIIlIIllIIlIIIIl
        93: IllllllllIlIlllIIlllIlIlII
        94: lIlIIlllIIIlIllllIllIIlIlI
        95: IIIIllIIlIllIlIlIllIlIIIIl
        96: IIllIIllIIIIIlIlIIllIllllI
        97: llllllIIIlIIIIIlIIllIlllll
        98: lIllIlIIlllIllIlIlllllIIII
        99: IlIIlIIlIIlIIIIlIlIllllllI
        100: IllIIIlIlllIllIlIIllIllIII
        101: llIlIlIllIIllIlllIlIIlIllI
        102: lIllIlllIlllIIlIIlllllIllI
        103: IlIIlIIIIIllIlIlIlIIIlIIIl
        104: IIIlIIIIlIlllllIllIlIIlllI
        105: llIIIlllIIIlllllIIllIIIIIl
        106: IIIIIlllIIIlllIIIIIIIIIIII
        107: lIIIlIIllIIIlllllIIIIllIlI
        108: lIIllIIIlIlIlIllIIIlIllIII
        109: llIlIIIlIlIIlIIIllllIlllII
        110: lllIlllIllIIIlIIIIlllllIIl
        111: IlIIIIIlIIIllllIllIlIIIlll
        112: lIIlIIlIllIIllIIlIllIllIIl
        113: IIlIlIlIIlIIIllIllIlIIllll
        114: lIlIlIIIlllIIIIlIIlIlllllI
        115: lIlIIllIlllIIlIIlIlIIlIlIl
        116: IIIllIlIIIIlIlllIlllIlIIlI
        117: IIlllllIIlIIlIIIIIIIIlIlII
        118: IllllIIlllllIIllIIllIlIlIl
        119: lllllIIlllIlllllIIlIIlllII
        120: lIIllllIlIIIllIIllllIIIlll
        121: IlIIllllIlllIllIIIllIlIlll
        122: IIIIlIIIIllllIlllIIIlllIIl
        123: IIllIlIIIIIIllIIIllIlIllII
        124: IIIllIIlIlIIIlllllllIIIlIl
}
subroutines {
    0: IllIlIlIllIlIlIllIlllIlIIl
    1: lIlIlIIIIllllIlIIIIIIlllIl
    2: lIllIlllIIIlIllIIIlIlIlIlI
    3: IIlllIIlllIllllllIIIIIIlII
    4: IlllIlIIIIIllllIlllllIlllI
    5: lIIllIllllIlIIIlllIIllIllI
    6: lIIlllIlllIIllIllllllIllII
    7: llIllIlIIIllIIlIlIlllIIllI
    8: IlllllIlIllllIIlllIllllllI
    9: llllIlIllIlllIllllIllIIllI
    10: IlllIlIlIlllIIlIllIlllllll
    11: lllllIIIllIlIIIlIlIllllllI
    12: IIllllIlIIIllllllIlIIIlllI
    13: IllllIIllIllllIIIIIIllIlII
    14: IIllllIlIllIllIlIlIIlIllII
    15: lIIlllIlIIlIIIllIllllIlllI
    16: lIIIlllIlIIllIlllllllIlllI
    17: lllllllIIIIIIIllIIllllIIlI
    18: lIIllllIIIlIlIIIIllIIIIIll
    19: IIlIllIIllIlIIIIlIIIIllIll
    20: IllIIIIllIlIIIIIlIlIlIlIll
    21: lIIIIlIllllIIIlIIllllIllll
    22: lllIIIlIlIllIIIlIIIIIlIIIl
    23: IIIlIlllIlIIIlIlllIllIIllI
    24: llIIlIIIIIIIllIlllIIIIlIII
    25: llIlIIllIIllIIllllIlIIlIlI
    26: llIlIlllIIIIIlIIllIlIIIIlI
    27: lIIlIIIllllllIlIIllIlIlllI
    28: IlllIIlIllIlIIIIIlIIIllIII
    29: llIlIIlIlIllIIIIlllIIIlIlI
    30: IllIIIIIllIlllllIlIllIlllI
    31: IIllIIllllIIIlIlIIllIIlIII
    32: lIllIIlIIIlIllllIlIlIIIlIl
    33: lIlIllllllllIIIIllIlIlIIlI
    34: llIIlIllIllIlIIIIlIlIIIlII
    35: IIIlIlllIIIIIllIlIllIIlIII
    36: lIlIIIIlIIlIlIlIlllIllllIl
    37: llllIllIlIIIIIllIlIIIIIIIl
    38: llIIIllllIlIllIlIIIlIlIIIl
    39: IIIIlIIlIllIlllIIIIlIlllII
    40: IIIlIIIIllllIllllIlIIlIlll
    41: lIlIIlIllllllIIllllllIIIIl
    42: IIIlIlllllIlIlllIIIllIIllI
    43: lllIIlllllIlllIllllIllIIll
    44: IIlIIllIlIllIIIlllIlllllll
    45: IIIIlllllIIIlllIIlllIllllI
    46: IIlIIIlllIIIllIlllIllllIII
    47: IlllIlIIlIllllIlllIIlIlllI
    48: llIlllIllIIllllIIIIIllIlII
    49: llIllIIIIlIIIIlIlIlIIllIll
    50: IlIIlllIllIIllIIIIlIlIllll
    51: IlIlIlIIIIIlllllllllIlllIl
    52: lIlIlllllIIIlllllIIIllIIII
    53: IllllIIIlllIlIIlIlIlllIllI
    54: lIlIllllIllllIIIllllIIIIlI
    55: IlIllIllIllIlIlIIlIIIlllIl
    56: lllIlllIIIlIllllIIIIIIlIlI
    57: lIIlllIIlIlllIlIIIIIIIIIII
    58: IlllllllIIlllllllllllIlIlI
    59: llIIIIlllIIIIIllllllIllllI
    60: IllllIlIlIllIIllIIIllllllI
    61: IlIllIIIlIIIIIlIIlIlIIlIIl
    62: IlllllIIlIIIlIlIIIlllIllII
    63: IlllIIlIllIlllllIlIIllIlIl
    64: IIlllllIllIIlIIIIIlllIlIIl
    65: llllIlIIlIIIIlIllIlIlIIlll
    66: lIIlIIlIlllIIlllIlIllIllIl
    67: IlIllIIIlllIIIllIIlllllllI
    68: IIIllIlIIllIllllIIIlllIlIl
    69: lIIlIlIIlIlIIllIllIIlIIIlI
    70: lIIlIllllIIlIlIIIIIIlIIlII
    71: llIIlIIlIllIIlIllIIlIlIIII
    72: lIIlllIIlIIlIlIIllIllIIIIl
    73: llIllIllIllIIIlIlIlIIlIlII
    74: IIIIlIIlIIlIlllIIlIlIlIIIl
    75: IllIIllIIIIIllIIIIllIIIlII
    76: lllIIllIIIlIIllIIllIlllIlI
    77: IIlIIIIlIIlIlIllllIIlIlllI
    78: llIIlllllIlIIIIIIIllIIIlII
    79: lIIIllIIIlllllIllIIlllIIll
    80: lIllIIIIIIllllIIlllIllllIl
    81: lIlIlIIllIIlllIlllllllllll
    82: IllIlIlIIIlIIIlIlIlIlIlIll
    83: llllIlIllIIIlIIIlllIIlIIIl
    84: IIIlIllIIIIllIIlllIIlIlIll
    85: lIIIIlIllIIIIlIIIIllIIlIlI
    86: llIIlIIllllllIIlIIIIIIlIll
    87: IlllIIIIlIIlIIIIllllllllIl
    88: IIlIIlllIIIIIlIIIIllIIIIIl
    89: IlIlllllIlIIIlIlllIlIlIIll
    90: IIlIIIIIllIIlIIIIlIlIlllII
    91: llIlIlIlIllIlIIIlIlllllIII
    92: IlIIIIIlIllIIllIlIIlIlIIII
    93: IIlIIIIIIllIlIlllIllIIIlll
    94: llIlIIIlIIlIIIIIllIlIIllIl
    95: IllIIIlIIIIlllIllIlIlIlllI
    96: lIIIllIlIlIIllIlIIlIlIIlIl
    97: lllIlllIlIlIllIlIllIIlllIl
    98: lIlllIlIIIllllIIllIlIlIIIl
    99: IllllllIlIlIIIlIlIIIlIIlII
    100: llIIIlIIIIllIlIllIIllllIlI
    101: IlIlIllIIlIlIlllIIIIIIIlII
    102: llIIlIlIIIIIllIIlIllIIIlII
    103: IlIllIIIIIlIlIIllIIIlllIll
    104: llIlIIIlllllIllIlIIIlllIIl
    105: IIIlIIlIIIlIIllIlllIlIllII
    106: lIIIIllIIlIllIlllllIlllIII
    107: lIllIlIlIllIIIIIlIlllIllIl
    108: IIIlIIllllIlIlIlIlIlIlIIlI
    109: lIIlllIIlllllIIlIIlIIIIIlI
    110: IIIIIIlIIIlIIIIIIIIlIIIlIl
    111: llIIlIllIllIIIIlIlllIlIlll
    112: IIIIlIllIlIIIlIlllllIIIllI
    113: IllIIIIllIIllIIllIlIlIIlll
    114: lIIIIIIllIIllIlIIIlIlIlIll
    115: lllIllllIllIIlIllIIIIIIllI
    116: lllIlllllIlIIIllIlIlIIIlIl
    117: lllIllIlIIllllIlIlIlllllll
    118: lllIIIIIIllIlIIlIIlIIIIIII
}
rule ("lIIlllllIlIlllIllIIIlIIlll") {
    event {
        Ongoing - Global;
    }
    actions {
        Disable Inspector Recording;
        Disable Built-In Game Mode Completion;
        Call Subroutine(IIIIlIIlIIlIlllIIlIlIlIIIl);
        Modify Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Append To Array, Global.IlIlIIIlIIllllIllIlllllIll);
        Set Global Variable(llIIIllIllIlllIlllIIIlllll, Array(1, 0.4, 0.067, 0.045));
        If(Not(Global.lIllllllIlIIlllIlllllIllll));
            Set Global Variable(lIllllllIlIIlllIlllllIllll, First Of(Global.lIIllIllIllIlIIIlllIlllIIl));
        End;
        If(Not(Global.IIlIllIIllIIlIllIIIIIIIIlI));
            Set Global Variable(IIlIllIIllIIlIllIIIIIIIIlI, Direction Towards(Value In Array(Global.lIIllIllIllIlIIIlllIlllIIl, 4), Value In Array(Global.lIIllIllIllIlIIIlllIlllIIl, 3)));
        End;
        Set Global Variable(llIlIIIlllIlIllllllllllIII, Value In Array(Global.IllIlIIIlIlIIIlIlllIIIllII, 2));
        Create In-World Text(Filtered Array(All Players(Team 2), And(Compare((Current Array Element).IlllIllIlIlllIlIlIIlIllIlI, ==, 1), Not((Current Array Element).IlIIlllllIIlIIllIIlllIIIll))), Custom String("     1   2   3   <\r\n     4   5   6   >\r\n     7   8   9   0"), Add(Global.llIlIIIlllIlIllllllllllIII, Multiply(Direction From Angles(Global.IlIllllIIIIIIIIlllIIllIIII, 0), 1000)), 4, Do Not Clip, Visible To, Color(White), Visible Never);
        Create In-World Text(Filtered Array(All Players(Team 2), And(Compare((Current Array Element).IlllIllIlIlllIlIlIIlIllIlI, ==, 1), (Current Array Element).IlIIlllllIIlIIllIIlllIIIll)), Custom String("     1   2   3   <\r\n     4   5   6   >\r\n     7   8   9   0"), Add(Global.llIlIIIlllIlIllllllllllIII, Multiply(Direction From Angles(Global.IlIllllIIIIIIIIlllIIllIIII, 0), 1000)), 4, Do Not Clip, Visible To, Color(Aqua), Visible Never);
        Set Global Variable(lIlIIlIIlIlIIlIlllllIlIIII, Null);
        Set Global Variable(IIllIllIllllIIlIlIlIIIIlIl, Empty Array);
        Set Global Variable(lllllIIIlIlIlllllIlllIlllI, Empty Array);
        Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 6, 2.667);
        Set Global Variable At Index(IIIlIlIIIIllIlllllIIIIllIl, 1, 1);
        Set Match Time(0);
        Set Global Variable(lllllIIIllIIIllIlIIllIllII, Subtract(Multiply(Add(Workshop Setting Combo(Custom String("General"), Custom String("Initial match duration"), 25, Array(Custom String("20min"), Custom String("30min"), Custom String("40min"), Custom String("50min"), Custom String("1h"), Custom String("1h 10min"), Custom String("1h 20min"), Custom String("1h 30min"), Custom String("1h 40min"), Custom String("1h 50min"), Custom String("2h"), Custom String("2h 10min"), Custom String("2h 20min"), Custom String("2h 30min"), Custom String("2h 40min"), Custom String("2h 50min"), Custom String("3h"), Custom String("3h 10min"), Custom String("3h 20min"), Custom String("3h 30min"), Custom String("3h 40min"), Custom String("3h 50min"), Custom String("4h"), Custom String("4h 10min"), Custom String("4h 20min"), Custom String("4h 30min")), 0), 2), 600), 600));
        Set Global Variable(IlIllllIllllllIIlIIlIllIII, Workshop Setting Combo(Custom String("General"), Custom String("Allow Autosave"), 1, Array(Custom String("Every 5 minutes (not recommended)"), Custom String("Every 10 minutes"), Custom String("Every 15 minutes"), Custom String("Every 20 minutes"), Custom String("Every 25 minutes"), Custom String("Every 30 minutes"), Custom String("Disabled")), 1));
        Set Global Variable(IIIlIIIlIIllIIlllIlIIllIll, Add(1, Multiply(0.1, Workshop Setting Combo(Custom String("General"), Custom String("Enemy health and EXP modifier"), 0, Array(Custom String("100%"), Custom String("110%"), Custom String("120%"), Custom String("130%"), Custom String("140%"), Custom String("150%"), Custom String("160%"), Custom String("170%"), Custom String("180%"), Custom String("190%"), Custom String("200%")), 2))));
        Set Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 7, Round To Integer(Multiply(100, Global.IIIlIIIlIIllIIlllIlIIllIll), To Nearest));
        Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 5, Global.IIIlIIIlIIllIIlllIlIIllIll);
        Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 2, Global.lllllIIIllIIIllIlIIllIllII);
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 9, Workshop Setting Combo(Custom String("General"), Custom String("Text log"), 0, Array(Custom String("Allowed"), Custom String("Disabled")), 3));
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 10, Not(Workshop Setting Combo(Custom String("General"), Custom String("Large health bar for special bosses"), 0, Array(Custom String("Enabled"), Custom String("Disabled")), 6)));
        Set Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 0, Workshop Setting Integer(Custom String("Player Level Limit"), Custom String("Min player level"), 1, -118, 120, 9));
        Set Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 5, Max(First Of(Global.lllllIIlIlllIIllIIlIIlllII), 1));
        Set Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 1, Max(Workshop Setting Integer(Custom String("Player Level Limit"), Custom String("Max player level"), 120, 1, 120, 10), First Of(Global.lllllIIlIlllIIllIIlIIlllII)));
        Set Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 2, Workshop Setting Combo(Custom String("Player Level Limit"), Custom String("Increase min player level as host gains levels"), 0, Array(Custom String("No (-)"), Custom String("Yes (+)")), 11));
        Set Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 3, Workshop Setting Combo(Custom String("Player Level Limit"), Custom String("Increase max player level as host gains levels"), 0, Array(Custom String("No (-)"), Custom String("Yes (+)")), 12));
        Set Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 6, Custom String("({0}{1})", Value In Array(Array(Custom String("-"), Custom String("+")), Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 2)), Value In Array(Array(Custom String("-"), Custom String("+")), Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 3))));
        Set Global Variable(IIIllIIIlIIllIIIIlIllllllI, Workshop Setting Combo(Custom String("Enemy Levels"), Custom String("Adaptive or fixed"), 0, Array(Custom String("Adaptive"), Custom String("Fixed")), 13));
        Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 3, Not(Global.IIIllIIIlIIllIIIIlIllllllI));
        Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 0, Add(-5, Workshop Setting Combo(Custom String("Enemy Levels"), Custom String("(Adaptive) Enemy level shift"), 5, Array(Custom String("-15"), Custom String("-12"), Custom String("-9"), Custom String("-6"), Custom String("-3"), Custom String("+0"), Custom String("+3"), Custom String("+6"), Custom String("+9"), Custom String("+12"), Custom String("+15")), 14)));
        Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 4, First Of(Global.IlIIIIllIllIllllIlIlIllllI));
        Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 7, Global.IIIllIIIlIIllIIIIlIllllllI);
        Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 1, Workshop Setting Combo(Custom String("Enemy Levels"), Custom String("(Fixed) Enemy levels"), 0, Array(Custom String("1-12"), Custom String("3-15"), Custom String("6-18"), Custom String("9-21"), Custom String("12-24"), Custom String("15-27"), Custom String("18-30"), Custom String("21-33"), Custom String("24-36"), Custom String("27-39"), Custom String("30-42"), Custom String("33-45"), Custom String("36-48"), Custom String("39-51"), Custom String("42-54"), Custom String("45-57"), Custom String("48-60"), Custom String("51-60"), Custom String("54-60"), Custom String("57-60"), Custom String("60")), 15));
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 0, Not(Workshop Setting Combo(Custom String("Visual Effects"), Custom String("On hit ability effects"), 0, Array(Custom String("Allowed"), Custom String("Disabled")), 17)));
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 1, Not(Workshop Setting Combo(Custom String("Visual Effects"), Custom String("On hit visual effects"), 0, Array(Custom String("Allowed"), Custom String("Disabled")), 18)));
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 2, Not(Workshop Setting Combo(Custom String("Visual Effects"), Custom String("Permanent glow effects"), 0, Array(Custom String("Enabled"), Custom String("Disabled")), 19)));
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 3, Not(Workshop Setting Combo(Custom String("Visual Effects"), Custom String("Loot explosions"), 0, Array(Custom String("Enabled"), Custom String("Disabled")), 20)));
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 4, Not(Workshop Setting Combo(Custom String("Visual Effects"), Custom String("Teleport, spawn, and despawn effects"), 0, Array(Custom String("Enabled"), Custom String("Disabled")), 21)));
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 5, Not(Workshop Setting Combo(Custom String("Visual Effects"), Custom String("Level up and boss effects"), 0, Array(Custom String("Enabled"), Custom String("Disabled")), 22)));
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 6, Not(Workshop Setting Combo(Custom String("Visual Effects"), Custom String("Heirloom visual effects"), 0, Array(Custom String("Enabled"), Custom String("Disabled")), 23)));
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 7, Workshop Setting Combo(Custom String("Visual Effects"), Custom String("Custom enemy outlines"), 1, Array(Custom String("Disabled"), Custom String("Enabled (default visibility)"), Custom String("Enabled (always visible)")), 24));
        Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, 8, Not(Workshop Setting Combo(Custom String("Visual Effects"), Custom String("Input effect (enter code mode)"), 0, Array(Custom String("Enabled"), Custom String("Disabled")), 25)));
        If(Workshop Setting Combo(Custom String("Visual Effects"), Custom String("Disable all visual effects (overrides individual settings below)"), 0, Array(Custom String("Off"), Custom String("Disable all")), 16));
            For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 9, 1);
                Set Global Variable At Index(IlllIlllllIIllIlIlIIlIllll, Global.lIIlllIllllIlIIIIlIllIIIlI, False);
            End;
        End;
        Set Global Variable(lIIlIllllllIlllIlIIlIIllll, Array(Custom String("Common"), Custom String("Uncommon"), Custom String("Rare"), Custom String("Epic"), Custom String("Legendary"), Custom String("Primal"), Custom String("Heirloom"), Custom String("Unique")));
        Set Global Variable(IIllllIlIIlIIIllIllIIIIlII, Custom Color(255, 0, 0, 255));
        Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Custom Color(255, 127, 0, 255));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 0, Array(Color(Yellow), Color(White), Custom Color(30, 255, 0, 255), Custom Color(0, 112, 221, 255), Custom Color(163, 53, 238, 255), Custom Color(255, 128, 0, 255), Global.IIllllIlIIlIIIllIllIIIIlII, Custom Color(0, 204, 255, 255), Custom Color(165, 146, 99, 255)));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 1, Array(Color(White), Color(Yellow), Color(White), Color(Orange), Color(Red), Color(Aqua), Color(Blue), Color(Sky Blue)));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 2, Array(Color(White), Custom Color(39, 170, 255, 255), Global.IlllllIIlIIllIlIlIIIlIlIlI, Global.IIllllIlIIlIIIllIllIIIIlII));
        If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 7));
            Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 3, Array(Custom Color(255, 255, 255, 127), Custom Color(39, 170, 255, 191), Global.IlllllIIlIIllIlIlIIIlIlIlI, Global.IIllllIlIIlIIIllIllIIIIlII));
        End;
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 4, Array(Color(White), Color(Yellow), Color(Green), Color(Purple), Color(Red), Color(Blue), Color(Aqua), Color(Lime Green), Color(Orange), Color(Sky Blue), Color(Black)));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 5, Array(Custom String("Attack"), Custom String("Defense"), Custom String("Health"), Custom String("Speed"), Custom String("Sustain")));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 6, Array(Custom String("Crit"), Custom String("Burning"), Custom String("Lifesteal"), Custom String("Ult Charge"), Custom String("Root"), Custom String("Teleport")));
        Set Global Variable(llllIIlIlllIIlllllIIIlIlll, Value In Array(Array(Array(Custom String(""), Custom String(" I"), Custom String(" II"), Custom String(" III"), Custom String(" IV"), Custom String(" V")), Array(Custom String(""), Custom String("+"), Custom String("++"), Custom String("+++"), Custom String("++++"), Custom String("+++++")), Array(Custom String(""), Custom String(" +1"), Custom String(" +2"), Custom String(" +3"), Custom String(" +4"), Custom String(" +5")), Array(Custom String(""), Custom String(" *"), Custom String(" **"), Custom String(" ***"), Custom String(" ****"), Custom String(" *****")), Array(Custom String(""), Custom String("-I"), Custom String("-II"), Custom String("-III"), Custom String("-IV"), Custom String("-V")), Array(Custom String(""), Custom String("-1"), Custom String("-2"), Custom String("-3"), Custom String("-4"), Custom String("-5"))), Workshop Setting Combo(Custom String("General"), Custom String("Enchant levels - HUD text format"), 0, Array(Custom String("I, II, III, IV, V"), Custom String("+, ++, +++, ++++, +++++"), Custom String("+1, +2, +3, +4, +5"), Custom String("*, **, ***, ****, *****"), Custom String("-I, -II, -III, -IV, -V"), Custom String("-1, -2, -3, -4, -5")), 7)));
        Set Global Variable(lIlIIIlIlIIllIIIIllIlIlIlI, Array(Custom String(""), Custom String(" {0}", Ability Icon String(Hero(Doomfist), Button(Secondary Fire))), Custom String(" {0}", Ability Icon String(Hero(Mei), Button(Ability 1))), Custom String(" {0}", Ability Icon String(Hero(Mercy), Button(Ability 1))), Custom String(" {0}", Ability Icon String(Hero(Zenyatta), Button(Secondary Fire))), Custom String(" {0}", Ability Icon String(Hero(Baptiste), Button(Ability 2)))));
        Set Global Variable(IlllllIIllIlIIIllIIIllIIIl, Array(Custom String("^___"), Custom String("_^_"), Custom String("__^_"), Custom String("___^")));
        Set Global Variable(IlllIllIIIlIIlIIIIlIlIIIIl, Array(Array(1, 3, 5, 4, 7, 2, 6, 8, 9), Array(1, 7, 5, 4, 6, 4, 3, 2, 9)));
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 2, 1);
            Create Effect(All Players(Team 2), Light Shaft, Value In Array(Array(Color(Green), Color(Purple)), Global.lIIlllIllllIlIIIIlIllIIIlI), Value In Array(Global.IllIlIIIlIlIIIlIlllIIIllII, Global.lIIlllIllllIlIIIIlIllIIIlI), 1.75, Visible To);
            Create In-World Text(All Players(Team 2), Custom String("Teleporter {0}", Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 1)), Add(Ray Cast Hit Position(Add(Value In Array(Global.IllIlIIIlIlIIIlIlllIIIllII, Global.lIIlllIllllIlIIIIlIllIIIlI), Multiply(2, Global.lllIllIlIlllIIIIlIIlIIllII)), Value In Array(Global.IllIlIIIlIlIIIlIlllIIIllII, Global.lIIlllIllllIlIIIIlIllIIIlI), Null, Null, False), Global.lllIllIlIlllIIIIlIIlIIllII), 1.5, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
        End;
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 2, 10, 1);
            Create Effect(All Players(Team 2), Ring, Value In Array(Array(Color(White), Color(Yellow), Color(Blue), Color(Red), Color(Green), Color(Sky Blue), Color(Orange), Color(Purple)), Subtract(Global.lIIlllIllllIlIIIIlIllIIIlI, 2)), Value In Array(Global.IllIlIIIlIlIIIlIlllIIIllII, Global.lIIlllIllllIlIIIIlIllIIIlI), 1.75, Visible To);
        End;
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 2, 10, 1);
            Create In-World Text(All Players(Team 2), Value In Array(Array(Custom String("Load Save State\r\n(Reload + Crouch: Load Item)"), Custom String("Soul Stones\r\n(Summon Boss)"), Custom String("Gamble\r\n(Buy Random Item)"), Custom String("Imbue\r\n(Upgrade Equipped Item)"), Custom String("Create Save Code\r\n(Reload + Crouch: Item Quick Save)"), Custom String("Reroll Equipped Item\r\n(Reload + Crouch: Roll Back)"), Custom String("Buy Back"), Custom String("Start / Turn In Quest\r\n(Reload + Crouch: Abandon)")), Subtract(Global.lIIlllIllllIlIIIIlIllIIIlI, 2)), Add(Ray Cast Hit Position(Add(Value In Array(Global.IllIlIIIlIlIIIlIlllIIIllII, Global.lIIlllIllllIlIIIIlIllIIIlI), Multiply(2, Global.lllIllIlIlllIIIIlIIlIIllII)), Value In Array(Global.IllIlIIIlIlIIIlIlllIIIllII, Global.lIIlllIllllIlIIIIlIllIIIlI), Null, Null, False), Global.lllIllIlIlllIIIIlIIlIIllII), 1.5, Clip Against Surfaces, Visible To, Color(White), Default Visibility);
        End;
        Create Effect(All Players(Team 2), Ring, Color(Aqua), Global.IlIlIIIlIIllllIllIlllllIll, 1.75, Visible To);
        Create In-World Text(Filtered Array(All Players(Team 2), Compare((Current Array Element).IIIlIlIllIlllIllllIlIllIll, <=, 3)), Custom String("Crouch here\r\nfor Instructions"), Add(Global.IlIlIIIlIIllllIllIlllllIll, Global.lllIllIlIlllIIIIlIIlIIllII), 3, Do Not Clip, Visible To, Color(Aqua), Default Visibility);
        Create HUD Text(Filtered Array(All Players(Team 2), And(Compare((Current Array Element).IlllIllIlIlllIlIlIIlIllIlI, ==, 1), Not((Current Array Element).IIlIIIIIIllIIlIlIIIlllllIl))), Null, Null, Custom String(" \r\nControl Scheme: Gamepad\r\n(Change with Reload + Jump)\r\n\r\nPick number: Primary Fire\r\n\r\nIncrease current digit: Crouch\r\nLower{0}", Custom String(" current digit: Secondary Fire\r\n(Hold Jump to increase/lower by 2)\r\n\r\nGo to next digit: Ability 2\r\nGo to previous digit: Abil{0}", Custom String("ity 1\r\n(Hold Jump to jump 4 digits)\r\n\r\nConfirm Code: Melee\r\nCancel: Ul{0}", Custom String("timate\r\nReset Code: Reload + Ultimate\r\n\r\nAdjust for Field of View:\r\nAim at the center of the '0'\r\nand press Interact")))), Right, -2, Null, Null, Color(Aqua), Visible To, Default Visibility);
        Create HUD Text(Filtered Array(All Players(Team 2), And(Compare((Current Array Element).IlllIllIlIlllIlIlIIlIllIlI, ==, 1), (Current Array Element).IIlIIIIIIllIIlIlIIIlllllIl)), Null, Null, Custom String(" \r\nControl Scheme: Legacy\r\n(Change with Reload + Jump)\r\n\r\nPick number: Primary Fire\r\n\r\nIncrease current digit: Interact\r\nLowe{0}", Custom String("r current digit: Melee\r\n(Hold Jump to increase/lower by 2)\r\n\r\nGo to next digit: Crouch / Ability 2\r\nGo to previous digit: Abi{0}", Custom String("lity 1\r\n(Hold Jump to jump 4 digits)\r\n\r\nConfirm Code: Ultimate{0}", Custom String("\r\nCancel: Secondary Fire\r\nReset Code: Reload + Secondary Fire\r\n\r\nAdjust for Field of View:\r\nAim at the center of the '0'\r\nand{0}", Custom String(" press Reload + Ultimate"))))), Right, -2, Null, Null, Color(Aqua), Visible To, Default Visibility);
        Wait Until(Compare(Global.IllIIlIllllIIIllIlllIIlIIl, ==, True), 16000);
        Set Global Variable(IIlIllllllllIlIIIlllIlllIl, Custom String("{0}", Host Player));
        Create HUD Text(All Players(Team 2), Null, Custom String("Initial Host: {0} / Enemy Health/EXP: {1}% / Regular Maps v7.5.1.8", Global.IIlIllllllllIlIIIlllIlllIl, Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 7)), Null, Right, -6, Null, Color(Aqua), Null, Visible To and String, Visible Never);
        Create HUD Text(All Players(Team 2), Null, Custom String("Current Host: {0} / Player Lv Limit: {1}-{2}", Host Player, Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 5), Custom String("{0} {1} / Enemy Lv: {2}", Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 1), Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 6), Custom String("{0} / SoJ sold: {1} / Time Left: {2}", Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 4), Global.lIIlIlIlllllIllIIllIlllIIl, Global.lllIIIIllIIlIIllIlIIllllII))), Null, Left, -2, Null, Color(Aqua), Null, Visible To and String, Visible Never);
    }
}

rule ("IlIIIIIIlIIlIIIlIlIIIlIIlI") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Has Spawned(Event Player) == True;
    }
    actions {
        Disable Built-In Game Mode Respawning(Event Player);
        If(Is Dummy Bot(Event Player));
            Set Global Variable(IIIllIIlllIlllllllllIlIllI, Event Player);
            Abort;
        End;
        Disable Messages(Event Player);
        Call Subroutine(lIlllIlIIIllllIIllIlIlIIIl);
        Set Player Variable(Event Player, IIlIIIIIIllIIlIlIIIlllllIl, Workshop Setting Combo(Custom String("Enter Code Controls"), Custom String("Default Enter Code Control Scheme"), 1, Array(Custom String("Gamepad"), Custom String("Legacy")), 26));
        Set Player Variable At Index(Event Player, IIlIllllIllIIllIlIIlIIlIll, 0, Value In Array(Array(0.798, 0.949, 1), Workshop Setting Combo(Custom String("Enter Code Controls"), Custom String("Default Field of View Setting"), 2, Array(Custom String("90"), Custom String("100"), Custom String("103")), 27)));
        Call Subroutine(IIIlIlllllIlIlllIIIllIIllI);
        Set Player Variable(Event Player, lllIlllIllIIIlIIIIlllllIIl, 2);
        Set Player Variable(Event Player, lIIIIIIlIIllllIllIlIIllIlI, Empty Array);
        Call Subroutine(lllllIIIllIlIIIlIlIllllllI);
        Set Player Variable At Index(Event Player, llIIIIIIIlIIIIlIlIIIIlIllI, 2, Event Player);
        Set Player Variable(Event Player, IIIlIllIlIIllIlIlllllIlIll, Empty Array);
        For Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 0, 3, 1);
            Set Player Variable At Index(Event Player, lIIIIllIIIIIlIIIIllllIlIlI, Global.IlllllIIlIIllIlIlIIIlIlIlI, Global.lIllIIlIlIIIIIlIIIlIlIlllI);
        End;
        If(Not(Global.IllIIlIllllIIIllIlllIIlIIl));
            Set Global Variable(IllIIlIllllIIIllIlllIIlIIl, 1);
            Start Rule(lIIllIllllIlIIIlllIIllIllI, Do Nothing);
        End;
        Start Damage Modification(Event Player, Event Player, 0, Receivers and Damagers);
        Teleport(Event Player, Global.IlIlIIIlIIllllIllIlllllIll);
        Set Global Variable(IIIlllllIIIllllllIIllIlIIl, Add(Total Time Elapsed, 5));
        Set Player Variable(Event Player, IllIlIlIIlIIIIIIIIlIlIlIlI, Add(Total Time Elapsed, 0.25));
        Set Player Variable(Event Player, llIllIIIlIllllIIlIlIIIlllI, Add(Total Time Elapsed, 1));
        Set Player Variable(Event Player, IlIllIlIlIlllIIlIllllllllI, Add(Total Time Elapsed, Multiply(2, Number Of Players(Team 2))));
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 3));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 0, Hero(Tracer));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 18, 5);
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, 5);
        Set Player Variable(Event Player, IIIlIlIllIlllIllllIlIllIll, 1);
        Set Player Variable(Event Player, llIIlllIIIIllIIllIIIIIllII, 10);
        Call Subroutine(lIIIIlIllIIIIlIIIIllIIlIlI);
        Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
        If(Not(First Of(Global.IlllIlllllIIllIlIlIIlIllll)));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 9, 2);
        Else;
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 10, True);
        End;
        If(Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 1)));
            Modify Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 9, Add, 1);
        Else;
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 11, True);
        End;
        Wait(1, Ignore Condition);
        If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 8));
            Create Effect(If-Then-Else(Compare((Event Player).lIlIlIIlIIIllIIIlIIlIllIIl, >, Total Time Elapsed), Event Player, Empty Array), Good Aura, Color(White), Add(Eye Position(Event Player), Direction Towards(Eye Position(Event Player), Value In Array(Value In Array((Event Player).IIlIllllIllIIllIlIIlIIlIll, 1), Subtract((Event Player).lIlIlllIIlIlllIIIIllIIlIlI, 1)))), 0.034, Visible To Position and Radius);
        End;
        Wait(1, Ignore Condition);
        Create HUD Text(Event Player, Null, Null, Custom String("Experience Bonus: {0}% / Magic Find: {1}‰ {2}", (Event Player).IIIlIlIIlIIlIIIlllllIIIlIl, Round To Integer((Event Player).lIIllIIIlIlIlIllIIIlIllIII, Up), Custom String("{0}\r\nEquipped {1}", (Event Player).llIllIlIllIIlIlIIlIIlIIIll, Value In Array((Event Player).IIIIIIlllllllIlIIIIIlllIlI, 1))), Left, -1, Null, Null, Color(White), String, Visible Never);
        Create HUD Text(Event Player, Null, Null, Custom String("Horadric Favor: {0} / Soul Stones: {1} / Gold: {2}", Round To Integer((Event Player).IlllIlIIIIIlIlllIIIIlIllll, Down), (Event Player).IIlIllllllIIlIIIllllIIllII, (Event Player).IlIIllllIlllIllIIIllIlIlll), Right, -5, Null, Null, Color(White), String, Visible Never);
        Create HUD Text(Event Player, Null, Null, Custom String("Inventory: {0}/{1}", (Event Player).IlIlIIIlIIllIIIIllIlIIllll, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII), Right, -4, Null, Null, Color(White), String, Visible Never);
        Wait(1, Ignore Condition);
        If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 2));
            Create Effect(If-Then-Else(Compare(First Of((Event Player).llIIIIIIIlIIIIlIlIIIIlIllI), >, 0), Remove From Array(All Players(Team 2), Value In Array((Event Player).llIIIIIIIlIIIIlIlIIIIlIllI, 2)), Empty Array), Good Aura, Value In Array((Event Player).llIIIIIIIlIIIIlIlIIIIlIllI, 1), Event Player, (Event Player).lIIlIlllIIlllIIlIlIlIIllll, Visible To Position Radius and Color);
        End;
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 0, Custom String(""));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 1, Empty Array);
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 13, Empty Array);
        If(Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 9)));
            Create HUD Text(Event Player, Null, First Of((Event Player).lIlIIIIlIIlIIlIIlIIIllllII), Null, Right, -1, Null, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 7), Null, String and Color, Visible Never);
        End;
        Create In-World Text(Event Player, Custom String("!"), Add(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 3), Global.lllIllIlIlllIIIIlIIlIIllII), 3, Do Not Clip, Visible To Position String and Color, Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 2), Visible Never);
        Wait(1, Ignore Condition);
        Create HUD Text(All Players(Team 2), (Event Player).lIlIIllIlllIIlIIlIlIIlIlIl, If-Then-Else(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <=, 119), Custom String("EXP: {0}%", (Event Player).lllIIIIIIIlllIIlIIIlllIIIl), Custom String("")), Custom String("{0} - Lv {1}", Event Player, (Event Player).IIIlIlIllIlllIllllIlIllIll), Left, Total Time Elapsed, First Of((Event Player).IlIIlIIlIIlIIIIlIlIllllllI), Color(White), Color(White), Visible To String and Color, Visible Always);
        Create HUD Text(Event Player, (Event Player).IIIIIlllIIIlllIIIIIIIIIIII, Null, Null, Right, -3, Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 1), Null, Null, String and Color, Visible Never);
        Big Message(Event Player, Custom String("So it begins..."));
    }
}

rule ("lllIlIlllIlIIIlllIIllIlIIl") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IllIlIlIIlIIIIIIIIlIlIlIlI == True;
        (Event Player).IllIlIlIIlIIIIIIIIlIlIlIlI <= Total Time Elapsed;
    }
    actions {
        Set Player Variable(Event Player, IllIlIlIIlIIIIIIIIlIlIlIlI, Add(Total Time Elapsed, 5));
        If(Value In Array((Event Player).IlIlIlIlIIIlIIllIIlllllIIl, 1));
            Call Subroutine(lIlIIIIlIIlIlIlIlllIllllIl);
        End;
        Set Player Variable(Event Player, llIllIlIllIIlIlIIlIIlIIIll, Custom String("{0} {1}", If-Then-Else(Compare((Event Player).IIllIIlllllllIlIIllIIIIIll, >, Total Time Elapsed), Custom String("{0} {1} s", Icon String(Skull), Round To Integer(Subtract((Event Player).IIllIIlllllllIlIIllIIIIIll, Total Time Elapsed), To Nearest)), Custom String("")), If-Then-Else(Compare((Event Player).IIIllIIllIIIIllIlIlIIIIIII, >, Total Time Elapsed), Custom String("{0} {1} s", Icon String(Club), Round To Integer(Subtract((Event Player).IIIllIIllIIIIllIlIlIIIIIII, Total Time Elapsed), To Nearest)), Custom String(""))));
        Set Player Variable(Event Player, lIIllIlllIllIlIIIlIllIIIlI, Multiply(Add(Compare((Event Player).IIllIIlllllllIlIIllIIIIIll, >, Total Time Elapsed), Compare((Event Player).IIIllIIllIIIIllIlIlIIIIIII, >, Total Time Elapsed)), Add(1, Multiply(Multiply(0.5, Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 8)), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1)))));
        Set Player Variable(Event Player, IIIlIlIIlIIlIIIlllllIIIlIl, Add(Add(Multiply((Event Player).lIIllIlllIllIlIIIlIllIIIlI, 20), Round To Integer((Event Player).IlllIlIIIIIlIlllIIIIlIllll, Down)), Multiply(Multiply(20, Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 7)), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1))));
        Set Player Variable(Event Player, lIIllIIIlIlIlIllIIIlIllIII, Add(Add(Add(Multiply((Event Player).lIIllIlllIllIlIIIlIllIIIlI, 50), Multiply((Event Player).IIIlIlIllIlllIllllIlIllIll, 5)), Multiply(Round To Integer((Event Player).IlllIlIIIIIlIlllIIIIlIllll, Down), 2.5)), Multiply(Multiply(50, Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 6)), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1))));
        If(And(Compare((Event Player).lIlllllllllIllllIIIIlllIlI, >=, 6), Compare((Event Player).IIIIlllIllIIIllIllIlIlIlll, <, (Event Player).IllllIIlllllIIllIIllIlIlIl)));
            Modify Player Variable(Event Player, IlIIIllIIlIIllllIlIIllllIl, Subtract, 1);
            If(Not((Event Player).IlIIIllIIlIIllllIlIIllllIl));
                Set Player Variable(Event Player, IlIIIllIIlIIllllIlIIllllIl, 12);
                Call Subroutine(IIIlIlllIIIIIllIlIllIIlIII);
            End;
        End;
        If(Or(Compare(Distance Between((Event Player).llllIlIIllIlllIlIllIIIllll, Event Player), >=, 7.5), Is In Spawn Room(Event Player)));
            Set Player Variable(Event Player, llllIlIIllIlllIlIllIIIllll, Position Of(Event Player));
            Set Player Variable(Event Player, IIlllllIIIIlllIIIlllIllIlI, Total Time Elapsed);
        Else If(Compare((Event Player).IIlllllIIIIlllIIIlllIllIlI, <, Subtract(Total Time Elapsed, 120)));
            Set Player Variable(Event Player, IIlllllIIIIlllIIIlllIllIlI, Total Time Elapsed);
            Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
            Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, Global.IlIlIIIlIIllllIllIlllllIll);
            Call Subroutine(llIlIIIlIIlIIIIIllIlIIllIl);
            Call Subroutine(lllIlllIIIlIllllIIIIIIlIlI);
            Set Player Variable(Event Player, lllIlllIllIIIlIIIIlllllIIl, 2);
        End;
        If(Or(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <, First Of(Global.lllllIIlIlllIIllIIlIIlllII)), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 1))));
            Set Player Variable(Event Player, lllIlllIllIIIlIIIIlllllIIl, 2);
        Else If(And((Event Player).lllIlllIllIIIlIIIIlllllIIl, Not(Is In Spawn Room(Event Player))));
            Modify Player Variable(Event Player, lllIlllIllIIIlIIIIlllllIIl, Subtract, 1);
            If((Event Player).lllIlllIllIIIlIIIIlllllIIl);
                Small Message(Event Player, Custom String("Damage locked for 5 more seconds"));
            Else;
                Small Message(Event Player, Custom String("Damage ready"));
            End;
        End;
        Set Damage Dealt(Event Player, If-Then-Else((Event Player).lllIlllIllIIIlIIIIlllllIIl, 0, First Of((Event Player).IIlllllIIlIIlIIIIIIIIlIlII)));
        Set Healing Dealt(Event Player, If-Then-Else((Event Player).lllIlllIllIIIlIIIIlllllIIl, 0, Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 1)));
        If(And((Event Player).IlIllIlIlIlllIIlIllllllllI, Compare(Add((Event Player).IlIllIlIlIlllIIlIllllllllI, 25), <=, Total Time Elapsed)));
            Set Player Variable(Event Player, IlIllIlIlIlllIIlIllllllllI, Null);
            If(Not((Event Player).IlllIllIlIlllIlIlIIlIllIlI));
                Call Subroutine(lIlllIlIIIllllIIllIlIlIIIl);
            End;
        End;
        Abort If(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4));
        Call Subroutine(IIlIIlllIIIIIlIIIIllIIIIIl);
    }
}

rule ("IlIIlIIlIIllIllllIIllIIllI") {
    event {
        Player Dealt Damage;
        Team 2;
        All;
    }
    conditions {
        Team Of(Victim) == Team 1;
    }
    actions {
        If(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, 59));
            Set Player Variable At Index(Event Player, IIlllllIIlIIlIIIIIIIIlIlII, 4, Index Of Array Value(Array(Null, Button(Primary Fire), Button(Secondary Fire), Button(Ability 1), Button(Ability 2), Button(Ultimate), Button(Crouch)), Event Ability));
            If(Compare(Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 4), >, 0));
                If(Compare(Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, Add(Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 4), 4)), <=, Total Time Elapsed));
                    Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Multiply(Event Damage, Min(2, Add(Multiply(0.638, Subtract(Total Time Elapsed, Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, Add(Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 4), 4)))), 0.5))));
                    Damage(Victim, Null, Max(0, Multiply(Global.IlllllIIlIIllIlIlIIIlIlIlI, If-Then-Else(Compare(Event Damage, >, Multiply((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 1.5)), Divide(Subtract(Multiply(8, (Event Player).IIlllllIIlIIlIIIIIIIIlIlII), Event Damage), Multiply(6.5, (Event Player).IIlllllIIlIIlIIIIIIIIlIlII)), 1))));
                End;
                Set Player Variable At Index(Event Player, IIlllllIIlIIlIIIIIIIIlIlII, Add(Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 4), 4), Add(Total Time Elapsed, 0.65));
            End;
        End;
        Abort If(Compare(Value In Array((Event Player).IlIIlIIIIIllIlIlIlIIIlIIIl, Slot Of(Victim)), >, Total Time Elapsed));
        Call Subroutine(IlllllllIIlllllllllllIlIlI);
        Call Subroutine(IIlllIIlllIllllllIIIIIIlII);
    }
}

rule ("lIllIIIlIllIIIIllIlIllIIII") {
    event {
        Player Dealt Knockback;
        Team 2;
        All;
    }
    conditions {
        Team Of(Victim) == Team 1;
        Value In Array((Event Player).IlIIlIIIIIllIlIlIlIIIlIIIl, Slot Of(Victim)) <= Total Time Elapsed;
        Has Status(Victim, Invincible) == False;
    }
    actions {
        Call Subroutine(IlllllllIIlllllllllllIlIlI);
        Call Subroutine(IIlllIIlllIllllllIIIIIIlII);
    }
}

rule ("lIlIIlllIIIlIIIllIllllllIl") {
    event {
        Player Dealt Healing;
        Team 2;
        All;
    }
    conditions {
        Healee != Event Player;
        (Event Player).llllIIlIIIllIIIllllIIllllI <= Total Time Elapsed;
    }
    actions {
        Set Player Variable(Event Player, llllIIlIIIllIIIllllIIllllI, Add(Total Time Elapsed, 2));
        Call Subroutine(lllIllllIllIIlIllIIIIIIllI);
        If(And(First Of((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII), Compare(Random Integer(0, 19), <, 7)));
            Heal(Healee, Null, Multiply(Add(0.2, Multiply(0.05, (Event Player).IIlIIllIIIllIllllIIIIlIIll)), Max Health(Healee)));
        End;
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, Healee);
        Call Subroutine(llIllIlIIIllIIlIlIlllIIllI);
    }
}

rule ("lIIlllIlIIlIlIIIlIIIlIIIlI") {
    event {
        Player Dealt Damage;
        Team 1;
        All;
    }
    conditions {
        Team Of(Victim) == Team 2;
        Value In Array((Event Player).IlIIlIIIIIllIlIlIlIIIlIIIl, Slot Of(Victim)) <= Total Time Elapsed;
    }
    actions {
        Set Player Variable At Index(Event Player, IlIIlIIIIIllIlIlIlIIIlIIIl, Slot Of(Victim), Add(Total Time Elapsed, 0.25));
        Call Subroutine(IlIllIIIIIlIlIIllIIIlllIll);
        Set Player Variable(Victim, llIllIIIlIllllIIlIlIIIlllI, Add(Total Time Elapsed, 3));
        Set Player Variable(Victim, IIlllllIIIIlllIIIlllIllIlI, Total Time Elapsed);
        Stop All Heal Over Time(Victim);
        If(And(First Of((Victim).IIIIIIIIlIIlIIIIIIIllIIIII), Compare(Random Integer(0, 19), <, Add(2, (Victim).IIlIIllIIIllIllllIIIIlIIll))));
            Heal(Victim, Null, Event Damage);
        End;
        If(And(And(And(Not((Victim).IlllIllIlIlllIlIlIIlIllIlI), Not(Has Status(Victim, Invincible))), Compare(First Of((Victim).llllllIllIIlllllIlIIlIIllI), ==, 1)), Compare(Random Integer(0, 39), <, Multiply(2, Value In Array((Victim).IIIIIIIIlIIlIIIIIIIllIIIII, 1)))));
            Set Status(Victim, Null, Invincible, 2);
            If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 1));
                Play Effect(Filtered Array(All Players(Team 2), Value In Array((Current Array Element).lIlIIIIlIIlIIlIIlIIIllllII, 11)), Bad Explosion, Color(White), Add(Eye Position(Victim), Facing Direction Of(Victim)), 2);
            End;
        End;
        Abort If((Victim).lllIlllIllIIIlIIIIlllllIIl);
        If(Array Contains(All Tank Heroes, Hero Of(Victim)));
            Set Player Variable At Index(Victim, lllIlIIllIIllIIIIlllIIllII, Slot Of(Event Player), True);
        End;
        Abort If(Compare((Victim).IIIIlIIIIllllIlllIIIlllIIl, !=, 2));
        Abort If(Or(Compare((Event Player).IllIlIllIlllIlIlIIIIIlllll, >, Total Time Elapsed), Compare(Distance Between(Event Player, Victim), >, Add(12.5, Multiply((Victim).IIlIIllIIIllIllllIIIIlIIll, 2.5)))));
        Set Player Variable At Index(Victim, lllIlIIllIIllIIIIlllIIllII, Slot Of(Event Player), True);
        Set Player Variable(Event Player, IllIlIllIlllIlIlIIIIIlllll, Add(Total Time Elapsed, 2));
        If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 6));
            Play Effect(All Players(Team 2), Good Pickup Effect, Color(Sky Blue), Position Of(Event Player), True);
        End;
        Damage(Event Player, Null, Multiply(Add(35.513, Multiply(14.205, (Victim).IIlIIllIIIllIllllIIIIlIIll)), Value In Array((Victim).IIlllllIIlIIlIIIIIIIIlIlII, 3)));
        Modify Player Variable At Index(Event Player, lllllIIlllIlllllIIlIIlllII, 1, Append To Array, Add(0.3, Multiply(0.05, (Victim).IIlIIllIIIllIllllIIIIlIIll)));
        Modify Player Variable At Index(Event Player, lllllIIlllIlllllIIlIIlllII, 2, Append To Array, Add(Add(Total Time Elapsed, 2), Multiply(0.3, (Victim).IIlIIllIIIllIllllIIIIlIIll)));
        Abort If((Event Player).lllllIIlllIlllllIIlIIlllII);
        Set Player Variable At Index(Event Player, lllllIIlllIlllllIIlIIlllII, 0, True);
    }
}

rule ("IIllIIIIlllIlllllIIlIlllII") {
    event {
        Player Dealt Knockback;
        Team 1;
        All;
    }
    conditions {
        Team Of(Victim) == Team 2;
        Value In Array((Event Player).IlIIlIIIIIllIlIlIlIIIlIIIl, Slot Of(Victim)) <= Total Time Elapsed;
    }
    actions {
        Set Player Variable At Index(Event Player, IlIIlIIIIIllIlIlIlIIIlIIIl, Slot Of(Victim), Add(Total Time Elapsed, 0.25));
        Call Subroutine(IlIllIIIIIlIlIIllIIIlllIll);
        Set Player Variable(Victim, llIllIIIlIllllIIlIlIIIlllI, Add(Total Time Elapsed, 3));
        Set Player Variable(Victim, IIlllllIIIIlllIIIlllIllIlI, Total Time Elapsed);
        Stop All Heal Over Time(Victim);
        Abort If((Victim).lllIlllIllIIIlIIIIlllllIIl);
        If(Array Contains(All Tank Heroes, Hero Of(Victim)));
            Set Player Variable At Index(Victim, lllIlIIllIIllIIIIlllIIllII, Slot Of(Event Player), True);
    }
}

rule ("IIIIIIlIllIIIlllIlIIIIIIIl") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).llIllIIIlIllllIIlIlIIIlllI == True;
        (Event Player).llIllIIIlIllllIIlIlIIIlllI <= Total Time Elapsed;
    }
    actions {
        Start Heal Over Time(Event Player, Null, Global.IIlllIIIIIllIlIllIlIlllIII, Multiply(Add(Add(10, Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 0.75)), Multiply((Event Player).IIlIIIIllllIllIIlIIIIlIlll, 7.5)), Add(1, Multiply((Event Player).IIllIIlIIllIIlIIlIlllIIllI, 0.5))));
        While(Not(Health(Event Player)));
            Small Message(Event Player, Custom String("Hold Interact or Melee to respawn"));
            Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, Nearest Walkable Position(Event Player));
            Teleport(Event Player, (Event Player).IIIIIlIlIlIllIlllllIIllIll);
            Wait(3, Ignore Condition);
        End;
    }
}

rule ("IllIIIllllIlllIlIIllIlIlII") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Health(Event Player) == False;
    }
    actions {
        Set Player Variable(Event Player, IIllIIlllllllIlIIllIIIIIll, Ray Cast Hit Position(Add(Position Of(Event Player), Up), Add(Position Of(Event Player), Vector(0, -29, 0)), Null, Null, False));
    }
}

rule ("IllIlIlIllIllllIlIIllIIIII") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).lIIIIlIlIIlIIlIllllllIIllI == True;
        Or(Health(Event Player), (Event Player).llllllIlIIlIIllIIlllIlIIII) == True;
        (Event Player).lIIIIlIlIIlIIlIllllllIIllI <= Total Time Elapsed;
        Global.IIIlllllIIIllllllIIllIlIIl <= Add(Total Time Elapsed, 0.25);
        Global.llIllIlIIIIlIIlllIllIlllIl <= Total Time Elapsed;
    }
    actions {
        If(And(Not((Event Player).llllllIlIIlIIllIIlllIlIIII), Compare((Event Player).lllIlIIllIIllIIIIlllIIllII, >=, 3)));
            Call Subroutine(IlIllIIIIIlIlIIllIIIlllIll);
            Abort;
        End;
        Set Global Variable(llIllIlIIIIlIIlllIllIlllIl, Add(Total Time Elapsed, 0.25));
        If(Not((Event Player).llllllIlIIlIIllIIlllIlIIII));
            Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
        End;
        If(Compare((Event Player).lllIlIIllIIllIIIIlllIIllII, >=, 2));
            Set Global Variable(lIlIIlIIlIlIIlIlllllIlIIII, Null);
            Set Global Variable(IlllIIIIlIIIlIllIIlIlIlllI, False);
        End;
        Set Global Variable(IIIlllllIIIllllllIIllIlIIl, Add(Total Time Elapsed, 1));
        Modify Global Variable(IIIIlIIIIIlIIIIlIIIIllIlII, Subtract, 1);
        Destroy Dummy Bot(Team 1, Slot Of(Event Player));
    }
}

rule ("IIIlIlIlIIlIllIIIllIIllllI") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).IllIIIlIlllIllIlIIllIllIII == True;
        Is Dead(Event Player) == True;
        (Event Player).IIllIIlllllllIlIIllIIIIIll != False;
        (Event Player).llllllIlIIlIIllIIlllIlIIII == False;
        Global.llIllIlIIIIlIIlllIllIlllIl <= Total Time Elapsed;
    }
    actions {
        Destroy In-World Text((Event Player).IIllIIlIIllIIlIIlIlllIIllI);
        If((Event Player).lIlllllllIlIlIlIIIIIlllIII);
            Destroy Progress Bar HUD Text((Event Player).lIlllllllIlIlIlIIIIIlllIII);
        End;
        If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 7));
            Stop Forcing Player Outlines(Event Player, All Players(Team 2));
        End;
        Set Global Variable(llIllIlIIIIlIIlllIllIlllIl, Add(Total Time Elapsed, 0.25));
        Wait(0.1, Ignore Condition);
        Set Player Variable(Event Player, IllIIIlIlllIllIlIIllIllIII, False);
        Set Player Variable(Event Player, IlIllIlIlIlllIIlIllllllllI, False);
        Set Player Variable(Event Player, lIIIIllIIIIIlIIIIllllIlIlI, False);
        Set Player Variable(Event Player, llllllIllIIlllllIlIIlIIllI, False);
        Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, If-Then-Else(Compare(Global.IIIlIlllIlIllIIllllllIIIIl, ==, True), Compare(Y Component Of((Event Player).IIllIIlllllllIlIIllIIIIIll), <=, Global.IIIlIlllIlIllIIllllllIIIIl), Compare(Y Component Of((Event Player).IIllIIlllllllIlIIllIIIIIll), <=, Subtract(Add(Multiply(X Component Of((Event Player).IIllIIlllllllIlIIllIIIIIll), 0.05), Multiply(Z Component Of((Event Player).IIllIIlllllllIlIIllIIIIIll), -0.06)), 4))));
        If(Or(Compare(Global.IIIIlIIllIlllIllIIIlIlIlll, <=, 12), Not(Global.IlllllIIlIIllIlIlIIIlIlIlI)));
            Set Global Variable(IlIIlIlIIIlIIlIIlllllIlllI, Filtered Array(All Players(Team 2), And(Value In Array((Current Array Element).lllIlIIllIIllIIIIlllIIllII, Slot Of(Event Player)), Or(Compare(Absolute Value(Subtract((Current Array Element).IIIlIlIllIlllIllllIlIllIll, Multiply((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, 3))), <=, 15), And(Compare((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, >=, 20), Compare((Current Array Element).IIIlIlIllIlllIllllIlIllIll, >=, 45))))));
            If(Count Of(Global.IlIIlIlIIIlIIlIIlllllIlllI));
                Set Global Variable(IlIIlIlIIIlIIlIIlllllIlllI, Filtered Array(All Players(Team 2), Or(Array Contains(Global.IlIIlIlIIIlIIlIIlllllIlllI, Current Array Element), And(And(And(And(And(Health(Current Array Element), Array Contains(All Support Heroes, Hero Of(Current Array Element))), Compare((Current Array Element).IIIlIlIllIlllIllllIlIllIll, >=, First Of(Global.lllllIIlIlllIIllIIlIIlllII))), Compare((Current Array Element).IIIlIlIllIlllIllllIlIllIll, <=, Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 1))), Compare(Distance Between(Current Array Element, (Event Player).IIllIIlllllllIlIIllIIIIIll), <=, 40)), Compare(Distance Between(Current Array Element, Global.IlIlIIIlIIllllIllIlllllIll), >, Global.IIIlIIlIIIIIlIlIIIlIllIlII)))));
            End;
            Set Global Variable(IllIIlIllIlIIIllIIlIIlllIl, Filtered Array(Global.IlIIlIlIIIlIIlIIlllllIlllI, Compare((Current Array Element).IIIIlIIIIllllIlllIIIlllIIl, ==, 4)));
            Set Global Variable(IllIIlIllIlIIIllIIlIIlllIl, If-Then-Else(Compare(Global.IllIIlIllIlIIIllIIlIIlllIl, ==, Empty Array), 0, Add(0.5, Multiply(0.1, Last Of(Sorted Array(Mapped Array(Global.IllIIlIllIlIIIllIIlIIlllIl, (Current Array Element).IIlIIllIIIllIllllIIIIlIIll), Current Array Element))))));
        Else;
            Set Global Variable(IlIIlIlIIIlIIlIIlllllIlllI, Empty Array);
            Set Global Variable(IllIIlIllIlIIIllIIlIIlllIl, 0);
        End;
        If(Count Of(Global.IlIIlIlIIIlIIlIIlllllIlllI));
            Set Global Variable(IIIIlIIllIlllIllIIIlIlIlll, Max(0, Add(Subtract(Global.IIIIlIIllIlllIllIIIlIlIlll, 2), Multiply(5, Global.IlllllIIlIIllIlIlIIIlIlIlI))));
        End;
        Modify Global Variable(IIlIlIIlllIlIIllllIIlIlIIl, Add, 1);
        Set Global Variable(IIIllIIlllIlllllllllIlIllI, Event Player);
        If((Event Player).IIIllIIllIIIIllIlIlIIIIIII);
            Modify Global Variable(IIIIllIlIIlIIIlIIllIllIIlI, Add, 1);
            If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 6));
                Play Effect(All Players(Team 2), Bad Explosion, Color(Orange), Event Player, Add(12, Multiply((Event Player).IIIllIIllIIIIllIlIlIIIIIII, 3)));
            End;
        End;
        Set Global Variable(IlIIIIIlllIlIlIIlllIIlllll, (Event Player).IIllIIlllllllIlIIllIIIIIll);
        Set Global Variable(IlIIIIIlllIlIlIIlllIIlllll, Nearest Walkable Position(Global.IlIIIIIlllIlIlIIlllIIlllll));
        If(Or(And(First Of(Global.lllllIlIIlllIIIlIlllllllIl), Compare(Distance Between(Global.IlIIIIIlllIlIlIIlllIIlllll, First Of(Global.lllllIlIIlllIIIlIlllllllIl)), <=, First Of(Global.lIllIllIIllIllllIIlllIIlIl))), And(Value In Array(Global.lllllIlIIlllIIIlIlllllllIl, 1), Compare(Distance Between(Global.IlIIIIIlllIlIlIIlllIIlllll, Value In Array(Global.lllllIlIIlllIIIlIlllllllIl, 1)), <=, Value In Array(Global.lIllIllIIllIllllIIlllIIlIl, 1)))));
            Set Global Variable(IlIIIIIlllIlIlIIlllIIlllll, (Event Player).IIIllIlIIIIlIlllIlllIlIIlI);
        End;
        Set Player Variable(Event Player, lIIIIlIlIIlIIlIllllllIIllI, Add(Total Time Elapsed, 1.5));
        Set Player Variable(Event Player, llllllIlIIlIIllIIlllIlIIII, True);
        If(Compare((Event Player).lllIlIIllIIllIIIIlllIIllII, >=, 3));
            Play Effect(All Players(Team 2), Ring Explosion Sound, Null, Event Player, 200);
            If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 5));
                Play Effect(All Players(Team 2), Ring Explosion, Color(Red), Event Player, 30);
    }
}

rule ("IlIllIllIlIlIIIIIlIIllIIlI") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IlllIIlllIlllIIlIlIIIIllIl != Global.IIlIlIIlllIlIIllllIIlIlIIl;
        (Event Player).llllllIIIlIIIIIlIIllIlllll <= Total Time Elapsed;
    }
    actions {
        Set Player Variable(Event Player, llllllIIIlIIIIIlIIllIlllll, Add(Total Time Elapsed, 0.25));
        Set Player Variable At Index(Event Player, lllIlIIllIIllIIIIlllIIllII, Slot Of(Global.IIIllIIlllIlllllllllIlIllI), False);
        Set Player Variable(Event Player, IlllIIlllIlllIIlIlIIIIllIl, Global.IIlIlIIlllIlIIllllIIlIlIIl);
        Abort If(Not(Array Contains(Global.IlIIlIlIIIlIIlIIlllllIlllI, Event Player)));
        Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, (Event Player).IIIlIlIllIIIlIIllllIIllIII);
        Set Ability Cooldown(Event Player, Button(Primary Fire), Multiply(Ability Cooldown(Event Player, Button(Primary Fire)), Global.IIIIlllIIIIlIIIlIIIIllllIl));
        Set Ability Cooldown(Event Player, Button(Secondary Fire), Multiply(Ability Cooldown(Event Player, Button(Secondary Fire)), Global.IIIIlllIIIIlIIIlIIIIllllIl));
        Set Ability Cooldown(Event Player, Button(Ability 1), Multiply(Ability Cooldown(Event Player, Button(Ability 1)), Global.IIIIlllIIIIlIIIlIIIIllllIl));
        Set Ability Cooldown(Event Player, Button(Ability 2), Multiply(Ability Cooldown(Event Player, Button(Ability 2)), Global.IIIIlllIIIIlIIIlIIIIllllIl));
        If(Compare(Random Real(0, 1), >=, Global.IIIIlllIIIIlIIIlIIIIllllIl));
            If(Compare(Ability Charge(Event Player, Button(Ability 1)), <, 10));
                Set Ability Charge(Event Player, Button(Ability 1), Add(Ability Charge(Event Player, Button(Ability 1)), 1));
            End;
            If(Compare(Ability Charge(Event Player, Button(Ability 2)), <, 10));
                Set Ability Charge(Event Player, Button(Ability 2), Add(Ability Charge(Event Player, Button(Ability 2)), 1));
            End;
        End;
        Set Player Variable(Event Player, lIllIlIIlllIllIlIlllllIIII, (Global.IIIllIIlllIlllllllllIlIllI).lllIIIIIIIlllIIlIIIlllIIIl);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Absolute Value(Subtract((Event Player).IIIlIlIllIlllIllllIlIllIll, Multiply((Event Player).lIllIlIIlllIllIlIlllllIIII, 3))));
        Set Global Variable(lIIlIIIIllIIIIIlIlIIIlIIll, Max(Subtract(1, Multiply(Multiply(And(Compare(Global.IllIllllIIIIllIIIIIIIlIIIl, >, 6), Or(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <, 67), Compare((Event Player).lIllIlIIlllIllIlIlllllIIII, <, 20))), Subtract(Global.IllIllllIIIIllIIIIIIIlIIIl, 6)), 0.1)), 0));
        Abort If(Not(Global.lIIlIIIIllIIIIIlIlIIIlIIll));
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, (Global.IIIllIIlllIlllllllllIlIllI).lllIlIIllIIllIIIIlllIIllII);
        If(Compare((Event Player).lIlllllllllIllllIIIIlllIlI, ==, 3));
            Call Subroutine(llIIIllllIlIllIlIIIlIlIIIl);
        End;
        If(And(And(And(Global.llIlIIlIlIlIllIllllIllIllI, (Event Player).lIlllllllllIllllIIIIlllIlI), Compare((Event Player).lIlllllllllIllllIIIIlllIlI, <=, 2)), Compare(Global.llIlIIlIlIlIllIllllIllIllI, ==, Add(Multiply((Event Player).lIlllllllllIllllIIIIlllIlI, -1), 3))));
            Call Subroutine(llIIIllllIlIllIlIIIlIlIIIl);
        End;
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 8, Multiply(Multiply(Multiply(0.2, Add(1, Global.llIlIIlIlIlIllIllllIllIllI)), Global.lIIlIIIIllIIIIIlIlIIIlIIll), Add(1, Global.IllIIlIllIlIIIllIIlIIlllIl)));
        Set Player Variable(Event Player, IlllIlIIIIIlIlllIIIIlIllll, Min(Add((Event Player).IlllIlIIIIIlIlllIIIIlIllll, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 8)), 40));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 4, Add(Add(1, Multiply((Event Player).IIIlIlIIlIIlIIIlllllIIIlIl, 0.01)), Multiply(Subtract(Count Of(Global.IlIIlIlIIIlIIlIIlllllIlllI), 1), 0.3)));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 5, Multiply(Multiply(Multiply((Global.IIIllIIlllIlllllllllIlIllI).IlIIllllIlllIllIIIllIlIlll, Global.lIIlIIIIllIIIIIlIlIIIlIIll), Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 4)), First Of((Event Player).IlIlIlIlIIIlIIllIIlllllIIl)));
        Modify Player Variable(Event Player, llIIIIIIllIIlIIlIlIIIIllII, Add, Multiply(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 5), Subtract(1, Multiply(Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True), 0.9))));
        If(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Earned {0} EXP (+{1}%) / {2}", Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 5), Round To Integer(Multiply(100, Subtract(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 4), 1)), To Nearest), Custom String("{0} HF: {1} ({2}", Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 8), (Global.IIIllIIlllIlllllllllIlIllI).lIlIIIIlIIlIIlIIlIIIllllII, Custom String("{0}){1}", (Global.IIIllIIlllIlllllllllIlIllI).lIlIIlIlIlIIIlIlllllIlIIII, If-Then-Else(Compare(Global.lIIlIIIIllIIIIIlIlIIIlIIll, >=, 1), Custom String(""), Custom String(" ({0}%)", Round To Integer(Multiply(100, Subtract(Global.lIIlIIIIllIIIIIlIlIIIlIIll, 1)), To Nearest)))))));
            Call Subroutine(llIlllIllIIllllIIIIIllIlII);
        End;
        Call Subroutine(IlllllIlIllllIIlllIllllllI);
        Call Subroutine(llIllIllIllIIIlIlIlIIlIlII);
        Abort If(Compare(Global.llIlIIlIlIlIllIllllIllIllI, <, 2));
        Set Player Variable(Event Player, IllIlIlIIlIIIIIIIIlIlIlIlI, Add(Total Time Elapsed, 0.25));
        Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 300);
        Set Player Variable(Event Player, IIllIIlllllllIlIIllIIIIIll, Max(Add((Event Player).IIllIIlllllllIlIIllIIIIIll, Global.IlllllIIlIIllIlIlIIIlIlIlI), Add(Total Time Elapsed, Global.IlllllIIlIIllIlIlIIIlIlIlI)));
    }
}

rule ("IIllIIlIlIlllIllIIIIlIIlII") {
    event {
        Ongoing - Global;
    }
    conditions {
        Global.IIIIlIIIIIlIIIIlIIIIllIlII < 6;
        Global.IIIlllllIIIllllllIIllIlIIl <= Total Time Elapsed;
    }
    actions {
        If(Compare(Global.IllIIlIllllIIIllIlllIIlIIl, ==, 3));
            Call Subroutine(lIIlIlIIlIlIIllIllIIlIIIlI);
            Abort;
        End;
        Set Global Variable(IIIlllllIIIllllllIIllIlIIl, Add(Total Time Elapsed, 2));
        Abort If(Compare(Global.IllIIlIllllIIIllIlllIIlIIl, !=, 2));
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Filtered Array(All Living Players(Team 2), And(Has Spawned(Current Array Element), Not((Current Array Element).lllIlllIllIIIlIIIIlllllIIl))));
        Abort If(Or(Not(Count Of(Global.llIlIIlIlIlIllIllllIllIllI)), Compare(Global.IIIIlIIIIIlIIIIlIIIIllIlII, >, Count Of(Global.llIlIIlIlIlIllIllllIllIllI))));
        If(And(Not(Global.IIIllIIIlIIllIIIIlIllllllI), Not(Global.IlllIIIIlIIIlIllIIlIlIlllI)));
            Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Sorted Array(Global.llIlIIlIlIlIllIllllIllIllI, (Current Array Element).IIIlIlIllIlllIllllIlIllIll));
            While(Compare(Count Of(Global.IIIIlllIIIIlIIIlIIIIllllIl), >, 2));
                Modify Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Remove From Array By Index, Count Of(Global.IIIIlllIIIIlIIIlIIIIllllIl));
                If(Compare(Count Of(Global.IIIIlllIIIIlIIIlIIIIllllIl), <=, 2));
                    Break;
                End;
                Modify Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Remove From Array By Index, 0);
            End;
            Set Global Variable(llllIIllIIlIIIlIlIlIlIlIlI, Subtract(Add(Round To Integer(Multiply(0.333, If-Then-Else(Compare(Count Of(Global.IIIIlllIIIIlIIIlIIIIllllIl), >, 1), Multiply(Add((First Of(Global.IIIIlllIIIIlIIIlIIIIllllIl)).IIIlIlIllIlllIllllIlIllIll, (Value In Array(Global.IIIIlllIIIIlIIIlIIIIllllIl, 1)).IIIlIlIllIlllIllllIlIllIll), 0.5), (Global.IIIIlllIIIIlIIIlIIIIllllIl).IIIlIlIllIlllIllllIlIllIll)), To Nearest), First Of(Global.IlIIIIllIllIllllIlIlIllllI)), 2));
            Set Global Variable(llllIIllIIlIIIlIlIlIlIlIlI, Min(Max(Global.llllIIllIIlIIIlIlIlIlIlIlI, 0), 20));
            Set Global Variable(lIlIllIlIIlllIIllIIIIllIlI, Multiply(Global.llllIIllIIlIIIlIlIlIlIlIlI, 0.113));
            Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 3, False);
        End;
        Set Global Variable(llIIlllllIIlllllllllIIlIII, Random Value In Array(Global.llIlIIlIlIlIllIllllIllIllI));
        If(And(Compare(Global.IlllIIIIlIIIlIllIIlIlIlllI, !=, 7), Compare((Global.IlllIIIIlIIIlIllIIlIlIlllI).IIIlIlIllIlllIllllIlIllIll, ==, False)));
            Set Global Variable(IlllIIIIlIIIlIllIIlIlIlllI, False);
        Else If(Array Contains(All Players(Team 2), Global.IlllIIIIlIIIlIllIIlIlIlllI));
            Set Global Variable(llIIlllllIIlllllllllIIlIII, Global.IlllIIIIlIIIlIllIIlIlIlllI);
        End;
        Set Global Variable(llIlIllIIIlllIlllIIlIIIIII, Position Of(Global.llIIlllllIIlllllllllIIlIII));
        Set Global Variable(lllIlIIIIIIlIlIIllIlIllllI, Count Of(Filtered Array(All Players(Team 2), And(Compare((Current Array Element).IIIlIlIllIlllIllllIlIllIll, >=, First Of(Global.lllllIIlIlllIIllIIlIIlllII)), Compare((Current Array Element).IIIlIlIllIlllIllllIlIllIll, <=, Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 1))))));
        Set Global Variable At Index(llIIIllIlIlIIIIllIlllllIIl, 0, First Of(Sorted Array(Global.lIIllIllIllIlIIIlllIlllIIl, Distance Between(Current Array Element, Global.llIlIllIIIlllIlllIIlIIIIII))));
        Set Global Variable At Index(llIIIllIlIlIIIIllIlllllIIl, 1, Add(Index Of Array Value(Global.lIIllIllIllIlIIIlllIlllIIl, First Of(Global.llIIIllIlIlIIIIllIlllllIIl)), Global.llllIIllIIlIIIlIlIlIlIlIlI));
        Set Global Variable At Index(llIIIllIlIlIIIIllIlllllIIl, 2, Add(Subtract(Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 1), Global.llllIIllIIlIIIlIlIlIlIlIlI), Multiply(Compare(Global.llllIIllIIlIIIlIlIlIlIlIlI, >, 16), Subtract(Global.llllIIllIIlIIIlIlIlIlIlIlI, 16))));
        Modify Global Variable At Index(llIIIllIlIlIIIIllIlllllIIl, 1, Min, 20);
        Modify Global Variable At Index(llIIIllIlIlIIIIllIlllllIIl, 2, Min, 4);
        Set Global Variable At Index(llIIIllIlIlIIIIllIlllllIIl, 3, Compare(Random Integer(0, 9), <=, Multiply(Add(Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 2), 1), Global.lIlIllIlIIlllIIllIIIIllIlI)));
        If(Compare(Global.llIIlllllIIlllllllllIIlIII, ==, Global.IlllIIIIlIIIlIllIIlIlIlllI));
            Set Global Variable At Index(llIIIllIlIlIIIIllIlllllIIl, 3, Add(2, Compare(Global.lIIlIlIlllllIllIIllIlllIIl, >=, Random Integer(3, 17))));
            If(And(And(Compare(Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 3), >=, 3), Compare(Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 1), >=, 20)), Compare(Modulo(Value In Array((Global.IlllIIIIlIIIlIllIIlIlIlllI).IIlIlIlIIlIIIllIllIlIIllll, Add((Global.IlllIIIIlIIIlIllIIlIlIlllI).lllllIIlllIlllllIIlIIlllII, 17)), 100), ==, 56)));
                Set Global Variable At Index(llIIIllIlIlIIIIllIlllllIIl, 3, 4);
            End;
        End;
        If(Compare(Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 3), <, 4));
            Set Global Variable At Index(llIIIllIlIlIIIIllIlllllIIl, 4, Random Value In Array(All Heroes));
        Else;
            Set Global Variable At Index(llIIIllIlIlIIIIllIlllllIIl, 4, Hero(Roadhog));
        End;
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 6, 1);
            Modify Global Variable(IlIllIIIIIIIIllIIlIIllllII, Add, Subtract(1, Multiply(6, Compare(Global.IlIllIIIIIIIIllIIlIIllllII, >=, 5))));
            If(Compare(Players In Slot(Global.IlIllIIIIIIIIllIIlIIllllII, Team 1), ==, False));
                Break;
            End;
        End;
        Create Dummy Bot(Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 4), Team 1, Global.IlIllIIIIIIIIllIIlIIllllII, Global.llIIllllIIIlIIIIIllIlIIIll, Direction From Angles(Random Integer(0, 359), 0));
    }
}

rule ("IIIlIIIlllIlIIIlIlIIllIIII") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Is Communicating Any Emote(Event Player) == True;
    }
    actions {
        Set Player Variable At Index(Event Player, llIIIIIIIlIIIIlIlIIIIlIllI, 2, Null);
        Wait Until(Not(Is Communicating Any Emote(Event Player)), 16000);
        Set Player Variable At Index(Event Player, llIIIIIIIlIIIIlIlIIIIlIllI, 2, Event Player);
    }
}

rule ("IIllllIlIIlIIlIllllIllIIIl") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Or(Or(Is Communicating(Event Player, Hello), Is Communicating(Event Player, Goodbye)), And(Is Button Held(Event Player, Button(Reload)), Is Button Held(Event Player, Button(Interact)))) == True;
    }
    actions {
        Abort If(Not(Health(Event Player)));
        Abort If((Event Player).IlllIllIlIlllIlIlIIlIllIlI);
        Abort If(Not(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 6)));
        Abort If(Compare(First Of((Event Player).IIIIIIlllllllIlIIIIIlllIlI), >, Total Time Elapsed));
        Abort If(Or(Or(Or(Or(Has Status(Event Player, Asleep), Has Status(Event Player, Frozen)), Has Status(Event Player, Hacked)), Has Status(Event Player, Knocked Down)), Has Status(Event Player, Stunned)));
        Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, Nearest Walkable Position(Add(Ray Cast Hit Position(Eye Position(Event Player), Add(Eye Position(Event Player), Multiply(Facing Direction Of(Event Player), Add(10, Multiply(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 6), 0.9)))), Null, Null, False), Multiply(Facing Direction Of(Event Player), -0.5))));
        Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
        Call Subroutine(llIlIIIlIIlIIIIIllIlIIllIl);
        Call Subroutine(lllIlllIIIlIllllIIIIIIlIlI);
        Set Player Variable At Index(Event Player, IIIIIIlllllllIlIIIIIlllIlI, 0, Subtract(Add(Total Time Elapsed, 6.5), Multiply(0.03, Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 6))));
        Call Subroutine(lllllIIIllIlIIIlIlIllllllI);
        Heal(Event Player, Null, Add(75, Multiply(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 6), 3.5)));
    }
}

rule ("IIlIIIlIllllIIIIIlllIIIIII") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IIIIIIlllllllIlIIIIIlllIlI == True;
        (Event Player).IIIIIIlllllllIlIIIIIlllIlI <= Total Time Elapsed;
    }
    actions {
        Set Player Variable At Index(Event Player, IIIIIIlllllllIlIIIIIlllIlI, 0, 0);
        Call Subroutine(lllllIIIllIlIIIlIlIllllllI);
    }
}

rule ("llIIlIllIIIllIIIlIIIIlIlll") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Or(Is Communicating(Event Player, Need Healing), Is Communicating(Event Player, Fall Back)) == True;
    }
    actions {
        Abort If(Not(Health(Event Player)));
        If(Compare((Event Player).IllIlllllIIIlIllIllllllIII, >, Total Time Elapsed));
            Call Subroutine(lIIIIlIllllIIIlIIllllIllll);
            Abort;
        End;
        Call Subroutine(lIlIlIIllIIlllIlllllllllll);
    }
}

rule ("lIlIIlllIlllIIllIlIIIIlllI") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Or(Is Communicating(Event Player, Thanks), Is Communicating(Event Player, You are Welcome)) == True;
    }
    actions {
        Abort If(Not(Health(Event Player)));
        If(Compare((Event Player).IllIlllllIIIlIllIllllllIII, >, Total Time Elapsed));
            Call Subroutine(lIIIIlIllllIIIlIIllllIllll);
            Modify Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, Multiply, 2);
            Abort;
        End;
        Call Subroutine(llIlIIIlllllIllIlIIIlllIIl);
    }
}

rule ("IlIIIllIllIIlIllIlIlllIllI") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Or(Or(Is Communicating(Event Player, Group Up), Is Communicating(Event Player, Press the Attack)), Is Communicating(Event Player, Push Forward)) == True;
    }
    actions {
        Abort If(Not(Health(Event Player)));
        If(Not((Event Player).IIlIllllllIIlIIIllllIIllII));
            Small Message(Event Player, Custom String("Soul Stone required"));
            Abort;
        End;
        If(Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 3));
            Small Message(Event Player, Custom String("Cannot summon a boss right now"));
            Abort;
        End;
        If(Not(Global.IlllIIIIlIIIlIllIIlIlIlllI));
            If(Compare((Event Player).IllIlllllIIIlIllIllllllIII, >, Total Time Elapsed));
                Call Subroutine(lIIIIlIllllIIIlIIllllIllll);
                Modify Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, Multiply, 3);
                Abort;
            End;
            Call Subroutine(IIIIlIllIlIIIlIlllllIIIllI);
            Abort;
        End;
        If(Compare(Global.IlllIIIIlIIIlIllIIlIlIlllI, ==, 7));
            Small Message(Event Player, Custom String("A boss is here already"));
            Abort;
        End;
        If(Compare(Global.IlllIIIIlIIIlIllIIlIlIlllI, ==, Event Player));
            Small Message(Event Player, Custom String("You are already summoning a boss"));
            Abort;
        End;
        Small Message(Event Player, Custom String("{0} is already summoning a boss", Global.IlllIIIIlIIIlIllIIlIlIlllI));
        Abort;
    }
}

rule ("llIIIIIlIIIlIIIIIllllIIllI") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Or(Is Communicating(Event Player, Acknowledge), Is Communicating(Event Player, Yes)) == True;
    }
    actions {
        Abort If(Not(Health(Event Player)));
        If(Compare((Event Player).IllIlllllIIIlIllIllllllIII, >, Total Time Elapsed));
            Call Subroutine(lIIIIlIllllIIIlIIllllIllll);
            Modify Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, Multiply, 4);
            Abort;
        End;
        Call Subroutine(IllllIIllIllllIIIIIIllIlII);
    }
}

rule ("lIllIIllIIlIIllllIIlllIllI") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Or(Is Communicating(Event Player, Ultimate Status), Is Communicating(Event Player, Ready)) == True;
    }
    actions {
        Abort If(Not(Health(Event Player)));
        If(Compare((Event Player).IllIlllllIIIlIllIllllllIII, >, Total Time Elapsed));
            Call Subroutine(lIIIIlIllllIIIlIIllllIllll);
            Modify Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, Multiply, 5);
            Abort;
        End;
        Call Subroutine(IIlIllIIllIlIIIIlIIIIllIll);
    }
}

rule ("IllllIlIIIIIIllllIIIlllllI") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Crouch)) == True;
    }
    actions {
        Abort If(Not(Health(Event Player)));
        If((Event Player).IlllIllIlIlllIlIlIIlIllIlI);
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Value In Array(Value In Array(Global.IlllIllIIIlIIlIIIIlIlIIIIl, (Event Player).IIlIIIIIIllIIlIlIIIlllllIl), 5));
            Call Subroutine(IlIllIIIlIIIIIlIIlIlIIlIIl);
            Abort;
        End;
        If(Compare((Event Player).IllIlllllIIIlIllIllllllIII, >, Total Time Elapsed));
            Call Subroutine(lIIIIlIllllIIIlIIllllIllll);
            Modify Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, Multiply, 6);
            Set Player Variable At Index(Event Player, lIlIlllIllIlIIIllllIllIlll, 1, Is Button Held(Event Player, Button(Reload)));
            Call Subroutine(lIIIIIIllIIllIlIIIlIlIlIll);
            Set Player Variable At Index(Event Player, lIlIlIIIlllIIIIlIIlIlllllI, 1, If-Then-Else(Compare(Distance Between(Event Player, Global.IIIIlllIIIIlIIIlIIIIllllIl), <=, Add(2.5, Multiply(Multiply(Multiply(15, Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 2)), Not(Modulo(Value In Array((Event Player).llIIIlllIIIlllllIIllIIIIIl, Global.lIIIIIllllIlIIIIlIIIlIIIll), 1))), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1)))), Global.IIIIlllIIIIlIIIlIIIIllllIl, False));
            Abort If(Value In Array((Event Player).lIlIlIIIlllIIIIlIIlIlllllI, 1));
            Call Subroutine(lIlIllllIllllIIIllllIIIIlI);
            Set Player Variable At Index(Event Player, lIlIlIIIlllIIIIlIIlIlllllI, 1, If-Then-Else(Compare(Distance Between(Event Player, Global.IIIlIlllIllllIlllllllIIlII), <=, 1.75), Global.IIIlIlllIllllIlllllllIIlII, False));
            Abort;
        End;
        Set Player Variable At Index(Event Player, lIlIlllIllIlIIIllllIllIlll, 0, Is Button Held(Event Player, Button(Reload)));
        Set Player Variable At Index(Event Player, lIlIlIIIlllIIIIlIIlIlllllI, 0, False);
        Call Subroutine(llIIlIlIIIIIllIIlIllIIIlII);
    }
}

rule ("IlIlIIlIlIIIlllIlIlllllIII") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Interact)) == True;
    }
    actions {
        Abort If(Is Button Held(Event Player, Button(Reload)));
        If(Not(Health(Event Player)));
            Set Player Variable(Event Player, lIIIIlIlIIlIIlIllllllIIllI, Multiply(Compare(Health(Event Player), ==, False), Add(Total Time Elapsed, 1)));
            Abort;
        End;
        If((Event Player).IlllIllIlIlllIlIlIIlIllIlI);
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Value In Array(Value In Array(Global.IlllIllIIIlIIlIIIIlIlIIIIl, (Event Player).IIlIIIIIIllIIlIlIIIlllllIl), 7));
            Call Subroutine(IlIllIIIlIIIIIlIIlIlIIlIIl);
            Abort;
        End;
        If(Compare((Event Player).IllIlllllIIIlIllIllllllIII, >, Total Time Elapsed));
            Call Subroutine(lIIIIlIllllIIIlIIllllIllll);
            Modify Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, Multiply, 7);
            Call Subroutine(lIlIllllIllllIIIllllIIIIlI);
            Set Player Variable At Index(Event Player, lIlIlIIIlllIIIIlIIlIlllllI, 1, If-Then-Else(Compare(Distance Between(Event Player, Global.IIIlIlllIllllIlllllllIIlII), <=, 1.75), Global.IIIlIlllIllllIlllllllIIlII, False));
            Abort;
        End;
        Set Player Variable At Index(Event Player, lIlIlIIIlllIIIIlIIlIlllllI, 0, False);
        Call Subroutine(IllIIIIllIlIIIIIlIlIlIlIll);
    }
}

rule ("lIlIllIIIllIIIIIlIllIlIIII") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Is Button Held(Event Player, Button(Melee)) == True;
    }
    actions {
        If(Not(Health(Event Player)));
            Set Player Variable(Event Player, lIIIIlIlIIlIIlIllllllIIllI, Multiply(Compare(Health(Event Player), ==, False), Add(Total Time Elapsed, 1)));
            Abort;
        End;
        If((Event Player).IlllIllIlIlllIlIlIIlIllIlI);
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Value In Array(Value In Array(Global.IlllIllIIIlIIlIIIIlIlIIIIl, (Event Player).IIlIIIIIIllIIlIlIIIlllllIl), 6));
            Call Subroutine(IlIllIIIlIIIIIlIIlIlIIlIIl);
            Abort;
        End;
        If(Compare((Event Player).IllIlllllIIIlIllIllllllIII, >, Total Time Elapsed));
            Call Subroutine(lIIIIlIllllIIIlIIllllIllll);
            Modify Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, Multiply, 8);
            Set Player Variable At Index(Event Player, lIlIlllIllIlIIIllllIllIlll, 1, Is Button Held(Event Player, Button(Reload)));
            Set Player Variable At Index(Event Player, lIlIlllIllIlIIIllllIllIlll, 3, Is Button Held(Event Player, Button(Crouch)));
            Call Subroutine(lIlIllllIllllIIIllllIIIIlI);
            Set Player Variable At Index(Event Player, lIlIlIIIlllIIIIlIIlIlllllI, 1, If-Then-Else(Compare(Distance Between(Event Player, Global.IIIlIlllIllllIlllllllIIlII), <=, 1.75), Global.IIIlIlllIllllIlllllllIIlII, False));
            Abort;
        End;
        Set Player Variable At Index(Event Player, lIlIlllIllIlIIIllllIllIlll, 0, Is Button Held(Event Player, Button(Reload)));
        Set Player Variable At Index(Event Player, lIlIlllIllIlIIIllllIllIlll, 2, Is Button Held(Event Player, Button(Crouch)));
        Set Player Variable At Index(Event Player, lIlIlIIIlllIIIIlIIlIlllllI, 0, False);
        Call Subroutine(lIIIlllIlIIllIlllllllIlllI);
    }
}

rule ("IIlIIIlIllIllIIIIIIlIIIIII") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IlllIllIlIlllIlIlIIlIllIlI == True;
        Or(Or(Or(Is Button Held(Event Player, Button(Secondary Fire)), Is Button Held(Event Player, Button(Ability 1))), Is Button Held(Event Player, Button(Ability 2))), Is Button Held(Event Player, Button(Ultimate))) == True;
    }
    actions {
        If(Is Button Held(Event Player, Button(Secondary Fire)));
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Value In Array(Value In Array(Global.IlllIllIIIlIIlIIIIlIlIIIIl, (Event Player).IIlIIIIIIllIIlIlIIIlllllIl), 1));
            Call Subroutine(IlIllIIIlIIIIIlIIlIlIIlIIl);
            Abort;
        End;
        If(Is Button Held(Event Player, Button(Ultimate)));
            If(And((Event Player).IIlIIIIIIllIIlIlIIIlllllIl, Is Button Held(Event Player, Button(Reload))));
                Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 8);
            Else;
                Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Value In Array(Value In Array(Global.IlllIllIIIlIIlIIIIlIlIIIIl, (Event Player).IIlIIIIIIllIIlIlIIIlllllIl), 4));
            End;
            Call Subroutine(IlIllIIIlIIIIIlIIlIlIIlIIl);
            Abort;
        End;
        If(Is Button Held(Event Player, Button(Ability 2)));
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Value In Array(Value In Array(Global.IlllIllIIIlIIlIIIIlIlIIIIl, (Event Player).IIlIIIIIIllIIlIlIIIlllllIl), 3));
            Call Subroutine(IlIllIIIlIIIIIlIIlIlIIlIIl);
            Abort;
        End;
        If(Is Button Held(Event Player, Button(Ability 1)));
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Value In Array(Value In Array(Global.IlllIllIIIlIIlIIIIlIlIIIIl, (Event Player).IIlIIIIIIllIIlIlIIIlllllIl), 2));
            Call Subroutine(IlIllIIIlIIIIIlIIlIlIIlIIl);
            Abort;
    }
}

rule ("lIllIIIlIIIIIlIIIIIlllIIll") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Or((Event Player).IlllIllIlIlllIlIlIIlIllIlI, And(Compare((Event Player).IIIIlIIIIllllIlllIIIlllIIl, ==, 3), Is In Air(Event Player))) == True;
        Is Button Held(Event Player, Button(Jump)) == True;
    }
    actions {
        If((Event Player).IlllIllIlIlllIlIlIIlIllIlI);
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Value In Array(Value In Array(Global.IlllIllIIIlIIlIIIIlIlIIIIl, (Event Player).IIlIIIIIIllIIlIlIIIlllllIl), 8));
            Call Subroutine(IlIllIIIlIIIIIlIIlIlIIlIIl);
            Abort;
        End;
        If(Not((Event Player).IllllllllIlIlllIIlllIlIlII));
            Apply Impulse(Event Player, Up, Add(7.5, (Event Player).IIlIIllIIIllIllllIIIIlIIll), To World, Incorporate Contrary Motion);
            Set Player Variable(Event Player, IllllllllIlIlllIIlllIlIlII, True);
            Abort;
        End;
        Set Player Variable(Event Player, IIIIIIlIlIllIIIllllIllIlll, True);
        Set Gravity(Event Player, 0);
        Apply Impulse(Event Player, Up, 0.1, To World, Cancel Contrary Motion);
        Apply Impulse(Event Player, Down, 0.1, To World, Cancel Contrary Motion);
    }
}

rule ("lIIIlIIllIlllIIIIllIIlllll") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).lllIlIlIlIIIIlIIllIIlIIIIl == True;
    }
    actions {
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        Modify Player Variable(Event Player, lIlIIlIlIlIIIlIlllllIlIIII, Add, 1);
        Set Player Variable(Event Player, IlIllIIlllllllllIIIIllllll, Multiply((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, 19));
        Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII);
        Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
        Set Player Variable(Event Player, lllIlIlIlIIIIlIIllIIlIIIIl, False);
        Big Message(Event Player, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 3));
        Abort If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), <, 2));
        Call Subroutine(llIlllIllIIllllIIIIIllIlII);
    }
}

rule ("IIIIlIllllIlllIlllIIIIIlIl") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IIIIIIlIlIllIIIllllIllIlll == True;
        Is Button Held(Event Player, Button(Jump)) == False;
    }
    actions {
        Set Player Variable(Event Player, IIIIIIlIlIllIIIllllIllIlll, False);
        Set Gravity(Event Player, 100);
    }
}

rule ("lIlIlIlIIlIIIIlIIlIIlIIIll") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IllllllllIlIlllIIlllIlIlII == True;
        Is On Ground(Event Player) == True;
    }
    actions {
        Set Player Variable(Event Player, IllllllllIlIlllIIlllIlIlII, False);
        Set Player Variable(Event Player, IIIIIIlIlIllIIIllllIllIlll, False);
        Set Gravity(Event Player, 100);
    }
}

rule ("IIIIIllIIIIIIIIIllIlllIlll") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IlllIllIlIlllIlIlIIlIllIlI == True;
        Distance Between(Event Player, (Event Player).IIllIIllIllllllllIIlIIIIll) > 3;
    }
    actions {
        Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
        Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, (Event Player).IIllIIllIllllllllIIlIIIIll);
        Call Subroutine(llIlIIIlIIlIIIIIllIlIIllIl);
        Call Subroutine(lllIlllIIIlIllllIIIIIIlIlI);
    }
}

rule ("IlIllllIIlIIIIIllllIIlIlll") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).IllllllllIlIlllIIlllIlIlII == True;
        (Event Player).lllIlIIllIIllIIIIlllIIllII >= 2;
        Or(Or(And(Not(Global.IIIlIlllIlIllIIllllllIIIIl), Compare(Y Component Of(Position Of(Event Player)), <=, Subtract(Add(Multiply(X Component Of(Position Of(Event Player)), 0.05), Multiply(Z Component Of(Position Of(Event Player)), -0.06)), 4))), And(Global.IIIlIlllIlIllIIllllllIIIIl, Compare(Y Component Of(Position Of(Event Player)), <=, Global.IIIlIlllIlIllIIllllllIIIIl))), Is In Spawn Room(Event Player)) == True;
    }
    actions {
        Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
        Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, (Event Player).IIIllIlIIIIlIlllIlllIlIIlI);
        Call Subroutine(llIlIIIlIIlIIIIIllIlIIllIl);
    }
}

rule ("lIIllIIIlIIIIIIIIIlIlIIlII") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).lIIIIlIlIIlIIlIllllllIIllI == True;
        (Event Player).lIIIIlIlIIlIIlIllllllIIllI <= Total Time Elapsed;
    }
    actions {
        Set Player Variable(Event Player, lIIIIlIlIIlIIlIllllllIIllI, False);
        Abort If(Health(Event Player));
        Abort If(And(Not(Is Button Held(Event Player, Button(Interact))), Not(Is Button Held(Event Player, Button(Melee)))));
        Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Min((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, If-Then-Else(Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True), 0.25, 2.5)));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 5, Min((Event Player).llIIIIIIllIIlIIlIlIIIIllII, If-Then-Else((Event Player).llllIIlIlllllllIIllIlIllII, Divide((Event Player).llIIlllIIIIllIIllIIIIIllII, 400), Multiply((Event Player).llIIlllIIIIllIIllIIIIIllII, 0.025))));
        Modify Player Variable(Event Player, llIIIIIIllIIlIIlIlIIIIllII, Subtract, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 5));
        Modify Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 5, Multiply, Add(1, Multiply(Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True), 9)));
        Set Player Variable(Event Player, lllIIIIIIIlllIIlIIIlllIIIl, Multiply(Divide((Event Player).llIIIIIIllIIlIIlIlIIIIllII, (Event Player).llIIlllIIIIllIIllIIIIIllII), 100));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 8, Min((Event Player).IlllIlIIIIIlIlllIIIIlIllll, 1));
        Modify Player Variable(Event Player, IlllIlIIIIIlIlllIIIIlIllll, Subtract, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 8));
        Small Message(Event Player, Custom String("Death takes its toll of {0}% Experience and {1} Horadric Favor", (Event Player).lIllIIlIllllIlIIIllIIllIlI, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 8)));
        If(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Respawn: -{0} EXP / -{1} HF", Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 5), Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 8)));
            Call Subroutine(llIlllIllIIllllIIIIIllIlII);
        End;
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
        Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, Global.IlIlIIIlIIllllIllIlllllIll);
        Call Subroutine(llIlIIIlIIlIIIIIllIlIIllIl);
        Set Player Variable(Event Player, lllIlllIllIIIlIIIIlllllIIl, 2);
        Resurrect(Event Player);
        Wait(0.1, Ignore Condition);
        Call Subroutine(lllIlllIIIlIllllIIIIIIlIlI);
    }
}

rule ("llIIlIIlIIlIlllIIIlIIIllII") {
    event {
        Ongoing - Global;
    }
    conditions {
        First Of(Global.IIIlIlIIIIllIlllllIIIIllIl) <= Total Time Elapsed;
    }
    actions {
        If(And(Compare(Value In Array(Global.IIIlIlIIIIllIlllllIIIIllIl, 1), ==, 1), Or(Or(Compare(Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 6), !=, Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 1)), Compare(Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 4), !=, First Of(Global.IlIIIIllIllIllllIlIlIllllI))), Compare(Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 7), !=, Global.IIIllIIIlIIllIIIIlIllllllI))));
            Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 6, Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 1));
            Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 4, First Of(Global.IlIIIIllIllIllllIlIlIllllI));
            Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 7, Global.IIIllIIIlIIllIIIIlIllllllI);
            Set Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 4, If-Then-Else(Compare(Global.IIIllIIIlIIllIIIIlIllllllI, ==, False), Custom String("Adaptive {0}", If-Then-Else(Compare(First Of(Global.IlIIIIllIllIllllIlIlIllllI), <, 0), Multiply(First Of(Global.IlIIIIllIllIllllIlIlIllllI), 3), Custom String("+{0}", Multiply(3, First Of(Global.IlIIIIllIllIllllIlIlIllllI))))), Custom String("Fixed {0}-{1}", Add(Multiply(Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 1), 3), Not(Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 1))), Min(Multiply(Add(Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 1), 4), 3), 60))));
            If(Global.IIIllIIIlIIllIIIIlIllllllI);
                Set Global Variable(llllIIllIIlIIIlIlIlIlIlIlI, Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 1));
                Set Global Variable(lIlIllIlIIlllIIllIIIIllIlI, Multiply(Global.llllIIllIIlIIIlIlIlIlIlIlI, 0.113));
            End;
            Wait(0.1, Ignore Condition);
            Small Message(All Players(Team 2), Custom String("New Enemy Levels Setting: {0}", Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 4)));
        End;
        If(And(Compare(Value In Array(Global.IIIlIlIIIIllIlllllIIIIllIl, 1), ==, 2), Compare(Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 2), !=, Global.lllllIIIllIIIllIlIIllIllII)));
            Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 2, Global.lllllIIIllIIIllIlIIllIllII);
            Set Player Variable(Host Player, lIllIIlIllllIlIIIllIIllIlI, Round To Integer(Divide(Add(Global.lllllIIIllIIIllIlIIllIllII, 600), 60), To Nearest));
            Set Player Variable(Host Player, llIlIIllIIIIIIIIlIlIlIIlII, Round To Integer(Divide(Subtract(Add(Global.lllllIIIllIIIllIlIIllIllII, 600), Total Time Elapsed), 60), To Nearest));
            Wait(0.1, Ignore Condition);
            Call Subroutine(IIIlIllIIIIllIIlllIIlIlIll);
            Small Message(All Players(Team 2), Custom String("Match Duration Changed: Total Duration: {0} h {1} min - Remaining: {2}", Round To Integer(Divide((Host Player).lIllIIlIllllIlIIIllIIllIlI, 60), Down), Modulo((Host Player).lIllIIlIllllIlIIIllIIllIlI, 60), Custom String("{0} h {1} min", Round To Integer(Divide((Host Player).llIlIIllIIIIIIIIlIlIlIIlII, 60), Down), Modulo((Host Player).llIlIIllIIIIIIIIlIlIlIIlII, 60))));
        End;
        If(And(Compare(Value In Array(Global.IIIlIlIIIIllIlllllIIIIllIl, 1), ==, 3), Compare(Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 5), !=, Global.IIIlIIIlIIllIIlllIlIIllIll)));
            Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 5, Global.IIIlIIIlIIllIIlllIlIIllIll);
            Set Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 7, Round To Integer(Multiply(100, Global.IIIlIIIlIIllIIlllIlIIllIll), To Nearest));
            Small Message(All Players(Team 2), Custom String("New Enemy Health/EXP Setting: {0}%", Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 7)));
        End;
        Set Global Variable At Index(IIIlIlIIIIllIlllllIIIIllIl, 1, 0);
    }
}

rule ("IlIIlIIllIIlIIIIllIIIllIlI") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Is Using Ability 1(Event Player) == True;
    }
    actions {
        Abort If(And(Compare(Hero Of(Event Player), !=, Hero(Sombra)), Compare(Hero Being Duplicated(Event Player), !=, Hero(Sombra))));
        Set Player Variable(Event Player, llllllIlIIlIIllIIlllIlIIII, True);
    }
}

rule ("IlIlIIlllIllllllIIllllllll") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).llllllIlIIlIIllIIlllIlIIII == True;
        Or(Not(Is Using Ability 1(Event Player)), And(Compare(Hero Of(Event Player), !=, Hero(Sombra)), Compare(Hero Being Duplicated(Event Player), !=, Hero(Sombra)))) == True;
    }
    actions {
        Set Player Variable(Event Player, llllllIlIIlIIllIIlllIlIIII, False);
    }
}

rule ("IllIlIIllIllllIllIlIlllIll") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).lIIIllIIllIIIllIlIIllIlIll == True;
        Or(Not(Is Using Ultimate(Event Player)), And(Compare(Hero Of(Event Player), !=, Hero(Sigma)), Compare(Hero Being Duplicated(Event Player), !=, Hero(Sigma)))) == True;
    }
    actions {
        Wait(0.5, Abort When False);
        Set Player Variable(Event Player, lIIIllIIllIIIllIlIIllIlIll, False);
    }
}

rule ("IllllIlIIllIIllIlIIlllllll") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).lIIIIIlIlIllIlIIIIIlIlIIlI == True;
        (Event Player).lIIIIIlIlIllIlIIIIIlIlIIlI <= Total Time Elapsed;
    }
    actions {
        Modify Player Variable(Event Player, lIIIlIIIlllllIIllIllIIIIll, Subtract, 1);
        Set Global Variable(IIIlIlllIllllIlllllllIIlII, Index Of Array Value((Event Player).llIlIlIllIIllIlllIlIIlIllI, (Event Player).lIIIIIlIlIllIlIIIIIlIlIIlI));
        Set Player Variable At Index(Event Player, lIIIIllIIIIIlIIIIllllIlIlI, Global.IIIlIlllIllllIlllllllIIlII, Global.lIllIIlIlIIIIIlIIIlIlIlllI);
        Set Player Variable At Index(Event Player, llIlIlIllIIllIlllIlIIlIllI, Global.IIIlIlllIllllIlllllllIIlII, 0);
        Set Player Variable(Event Player, lIIIIIlIlIllIlIIIIIlIlIIlI, First Of(Sorted Array(Remove From Array((Event Player).llIlIlIllIIllIlllIlIIlIllI, 0), Current Array Element)));
        Destroy Effect(Value In Array((Event Player).IIIlIlIIlllIIlIIlllIIIIlII, Global.IIIlIlllIllllIlllllllIIlII));
        Abort If(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4));
        Call Subroutine(IIlIIlllIIIIIlIIIIllIIIIIl);
    }
}

rule ("lIlIlllIllIlllllIlIlllIlII") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        First Of((Event Player).lllllIIlllIlllllIIlIIlllII) == True;
        First Of((Event Player).lllllIIlllIlllllIIlIIlllII) <= Total Time Elapsed;
    }
    actions {
        Set Player Variable At Index(Event Player, lllllIIlllIlllllIIlIIlllII, 0, False);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, Count Of((Event Player).lllllIIlllIlllllIIlIIlllII), 1);
            If(Compare(Value In Array(Value In Array((Event Player).lllllIIlllIlllllIIlIIlllII, 2), Global.lIIlllIllllIlIIIIlIllIIIlI), <=, Total Time Elapsed));
                Modify Player Variable At Index(Event Player, lllllIIlllIlllllIIlIIlllII, 1, Remove From Array By Index, Global.lIIlllIllllIlIIIIlIllIIIlI);
                Modify Player Variable At Index(Event Player, lllllIIlllIlllllIIlIIlllII, 2, Remove From Array By Index, Global.lIIlllIllllIlIIIIlIllIIIlI);
            End;
        End;
        Set Player Variable At Index(Event Player, lllllIIlllIlllllIIlIIlllII, 3, Last Of(Sorted Array(Value In Array((Event Player).lllllIIlllIlllllIIlIIlllII, 1), Current Array Element)));
        Call Subroutine(llIlIIllIIllIIllllIlIIlIlI);
        Set Player Variable At Index(Event Player, lllllIIlllIlllllIIlIIlllII, 0, If-Then-Else(Value In Array((Event Player).lllllIIlllIlllllIIlIIlllII, 3), Add(Total Time Elapsed, 0.25), False));
    }
}

rule ("lIlllIIIIIlllIlIlIIIIIlIII") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        Has Spawned(Event Player) == True;
    }
    actions {
        If(Compare(Global.IllIIlIllllIIIllIlllIIlIIl, !=, 2));
            Call Subroutine(IlllIlIIIIIllllIlllllIlllI);
            Abort;
        End;
        Disable Built-In Game Mode Respawning(Event Player);
        Modify Global Variable(IIIIlIIIIIlIIIIlIIIIllIlII, Add, 1);
        Set Player Variable(Event Player, IIIllIlIIIIlIlllIlllIlIIlI, First Of(Global.llIIIllIlIlIIIIllIlllllIIl));
        Set Player Variable(Event Player, lllIIIIIIIlllIIlIIIlllIIIl, Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 1));
        Set Player Variable(Event Player, llIllIIIlIllllIIlIlIIIlllI, Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 2));
        Set Player Variable(Event Player, lIlIlIIlIIIllIIIlIIlIllIIl, Compare(Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 3), >=, 4));
        Set Player Variable(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, Value In Array(Global.IIlIllIIlIIllIlIlIIllIIIIl, Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 3)));
        Set Player Variable(Event Player, lllIlIIllIIllIIIIlllIIllII, Min(Value In Array(Global.llIIIllIlIlIIIIllIlllllIIl, 3), 3));
        If(Compare((Event Player).lllIlIIllIIllIIIIlllIIllII, >=, 2));
            Set Global Variable(lIlIIlIIlIlIIlIlllllIlIIII, Event Player);
        End;
        Set Player Variable(Event Player, lIlIIlIlIlIIIlIlllllIlIIII, Max(Multiply((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, 3), 1));
        Call Subroutine(IllllIlIlIllIIllIIIllllllI);
        Set Weapon(Event Player, 1);
        Set Status(Event Player, Null, Invincible, 1.5);
        Set Invisible(Event Player, Enemies);
        Set Ultimate Charge(Event Player, Random Integer(0, 100));
        Set Player Variable(Event Player, IIlllIlIIIlIlIlIlIIIIIllII, First Of((Event Player).lIllIIIIlIIlllIllIllIIIlII));
        Set Player Variable(Event Player, llIIllllIIlIIIIIIIlIlIlllI, Round To Integer(Multiply(Modulo(Value In Array((Event Player).lIllIIIIlIIlllIllIllIIIlII, 1), 1), 100), Down));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Round To Integer(Value In Array((Event Player).lIllIIIIlIIlllIllIllIIIlII, 1), Down));
        Set Player Variable At Index(Event Player, IllIlIllIIIIlIIllIllIllIlI, 5, Value In Array((Event Player).IllIlIllIIIIlIIllIllIllIlI, 2));
        Set Player Variable At Index(Event Player, IllIlIllIIIIlIIllIllIllIlI, 6, Value In Array((Event Player).IllIlIllIIIIlIIllIllIllIlI, 3));
        Set Player Variable(Event Player, lIIlIIIIIIIlIIlIIlIIIlllIl, -2.667);
        Set Player Variable(Event Player, lIlIIlllIIIlIllllIllIIlIlI, Vector(45.12, -23.9, 15.14));
        Set Player Variable(Event Player, lIllIlIIlllIllIlIlllllIIII, Random Integer(0, 359));
        Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, Direction From Angles((Event Player).lIllIlIIlllIllIlIlllllIIII, 0));
        Start Throttle In Direction(Event Player, (Event Player).IlIlIIIlIIllIIIIllIlIIllll, 1, To World, Replace existing throttle, Direction and Magnitude);
        Start Facing(Event Player, Direction Towards(Eye Position(Event Player), Add((Event Player).lllIIlllIIlIIlllIIIIlllIlI, Up)), 360, To World, Direction and Turn Rate);
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, Add(Event Player, Multiply((Event Player).IlIlIIIlIIllIIIIllIlIIllll, 100)));
        If(And(Compare((Event Player).lllIlIIllIIllIIIIlllIIllII, >=, 2), Array Contains(Array(Hero(D.Va), Hero(Echo), Hero(Winston)), Hero Of(Event Player))));
            Set Player Variable(Event Player, IIIllIIIlIlIlIlIlIllIIIlIl, Add(Total Time Elapsed, Global.IIlllIIIIIllIlIllIlIlllIII));
        End;
        Call Subroutine(IlIllIIIIIlIlIIllIIIlllIll);
        Set Player Variable(Event Player, IlIIllllIlllIllIIIllIlIlll, Multiply(Multiply(Add(Multiply(0.05, Raise To Power(Add((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, 1), 2)), Multiply(Add((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, 1), 0.95)), Value In Array(Array(1, 2.5, 15, 36.25), (Event Player).lllIlIIllIIllIIIIlllIIllII)), Global.IIIlIIIlIIllIIlllIlIIllIll));
        Set Player Variable(Event Player, IIIlIlIllIlllIllllIlIllIll, Multiply(Multiply(Multiply(Multiply(0.999, Raise To Power(1.119, (Event Player).lllIIIIIIIlllIIlIIIlllIIIl)), Add(0.4, Multiply(0.6, Global.lllIlIIIIIIlIlIIllIlIllllI))), Value In Array(Array(1, 2.5, 15, 22), (Event Player).lllIlIIllIIllIIIIlllIIllII)), Global.IIIlIIIlIIllIIlllIlIIllIll));
        Set Player Variable(Event Player, IIIIIIIIlIIlIIIIIIIllIIIII, Value In Array(Array(1, 0.625, 0.455, 0.357, 0.294, 0.25), Max(0, Subtract(Global.lllIlIIIIIIlIlIIllIlIllllI, 1))));
        Set Player Variable(Event Player, IIlllllIIlIIlIIIIIIIIlIlII, Max Health(Event Player));
        Set Max Health(Event Player, 1);
        Set Healing Received(Event Player, Multiply((Event Player).IIIlIlIllIlllIllllIlIllIll, Value In Array(Global.llIIIllIllIlllIlllIIIlllll, (Event Player).lllIlIIllIIllIIIIlllIIllII)));
        Set Global Variable(IIllllIlIIlIIIllIllIIIIlII, Multiply(Multiply(Add(Add(0.75, Multiply(0.175, (Event Player).lllIIIIIIIlllIIlIIIlllIIIl)), Multiply(Multiply(0.05, Raise To Power((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, 2)), 0.525)), Value In Array(Array(1, 1.25, 1.75, 2.5), (Event Player).lllIlIIllIIllIIIIlllIIllII)), Min(2.8, Add(1, Multiply(0.1, (Event Player).lllIIIIIIIlllIIlIIIlllIIIl)))));
        Set Damage Dealt(Event Player, Global.IIllllIlIIlIIIllIllIIIIlII);
        If(Compare(Hero Of(Event Player), ==, Hero(Sigma)));
            Start Damage Modification(All Players(Team 2), If-Then-Else(Is Using Ultimate(Event Player), Event Player, Null), Divide(10000, Global.IIllllIlIIlIIIllIllIIIIlII), Receivers and Damagers);
        Else If(Compare(Hero Of(Event Player), ==, Hero(Echo)));
            Start Damage Modification(All Players(Team 2), If-Then-Else(And(Compare(Hero Being Duplicated(Event Player), ==, Hero(Sigma)), Is Using Ultimate(Event Player)), Event Player, Null), Divide(10000, Global.IIllllIlIIlIIIllIllIIIIlII), Receivers and Damagers);
        End;
        Set Player Variable(Event Player, IllIlIIlIIlIlIlIllIllllllI, Multiply(Add(Add(80, (Event Player).lllIIIIIIIlllIIlIIIlllIIIl), Multiply((Event Player).llIllIIIlIllllIIlIlIIIlllI, 5)), Add(1, Multiply((Event Player).lllIlIIllIIllIIIIlllIIllII, 0.167))));
        Set Player Variable(Event Player, lllllIIlllIlllllIIlIIlllII, True);
        Wait(0.25, Ignore Condition);
        Set Player Variable(Event Player, IIlllllIIlIIlIIIIIIIIlIlII, Subtract(Multiply(Multiply((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, (Event Player).IIIlIlIllIlllIllllIlIllIll), 0.01), Max Health(Event Player)));
        While(Compare((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, >, 0));
            Add Health Pool To Player(Event Player, Health, Min(9999, (Event Player).IIlllllIIlIIlIIIIIIIIlIlII), True, False);
            Modify Player Variable(Event Player, IIlllllIIlIIlIIIIIIIIlIlII, Subtract, 9999);
        End;
        Set Player Health(Event Player, Max Health(Event Player));
        Set Player Variable(Event Player, IllIIIlIlllIllIlIIllIllIII, True);
        Wait(1.25, Ignore Condition);
        Set Player Variable(Event Player, IllllllllIlIlllIIlllIlIlII, True);
        Set Player Variable(Event Player, IlIllIlIlIlllIIlIllllllllI, True);
        Set Player Variable(Event Player, IIIIlIIlIIlIlIIllIIlIIIIII, Global.IIIIllIlIIlIIIlIIllIllIIlI);
        Set Player Variable(Event Player, lIIIIllIIIIIlIIIIllllIlIlI, True);
        Set Player Variable(Event Player, llllllIllIIlllllIlIIlIIllI, Add(Add(Total Time Elapsed, 1.8), Multiply(Compare(Hero Of(Event Player), ==, Hero(Tracer)), 3)));
        If(Compare((Event Player).lllIlIIllIIllIIIIlllIIllII, >=, 2));
            If(Compare((Event Player).IIIllIlIIIIlIlllIlllIlIIlI, ==, First Of(Global.lIIllIllIllIlIIIlllIlllIIl)));
                Set Player Variable(Event Player, IIIllIlIIIIlIlllIlllIlIIlI, Value In Array(Global.lIIllIllIllIlIIIlllIlllIIl, 1));
            End;
            Teleport(Event Player, (Event Player).IIIllIlIIIIlIlllIlllIlIIlI);
            Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
            Set Global Variable(IlllIIIIlIIIlIllIIlIlIlllI, 7);
            Wait(0.25, Ignore Condition);
            Set Invisible(Event Player, None);
            If(Compare((Event Player).lllIlIIllIIllIIIIlllIIllII, >=, 3));
                Set Global Variable(lIIlIlIlllllIllIIllIlllIIl, 0);
                If((Event Player).lIlIlIIlIIIllIIIlIIlIllIIl);
                    Big Message(All Players(Team 2), Custom String("Not even death can stop me!"));
                Else;
                    Big Message(All Players(Team 2), Custom String("A Great Evil has appeared"));
                End;
            Else;
                Small Message(All Players(Team 2), Custom String("{0} {1} appeared", Global.lIlIIlIIlIlIIlIlllllIlIIII, (Event Player).lIlIIIIlIIlIIlIIlIIIllllII));
            End;
            Create In-World Text(All Players(Team 2), Custom String("{0} {1} ({2})", Icon String(Skull), (Event Player).lIlIIIIlIIlIIlIIlIIIllllII, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII), Event Player, Add(1.5, Multiply(0.25, (Event Player).lllIlIIllIIllIIIIlllIIllII)), Do Not Clip, Visible To, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 2), (Event Player).lllIlIIllIIllIIIIlllIIllII), Default Visibility);
            Set Player Variable(Event Player, IIllIIlIIllIIlIIlIlllIIllI, Last Text ID);
            Call Subroutine(IIllllIlIllIllIlIlIIlIllII);
        Else;
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Vector(Random Integer(-17, 17), Random Integer(-15, 15), Random Integer(-17, 17)));
            Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Nearest Walkable Position(Add(Global.llIlIllIIIlllIlllIIlIIIIII, Global.IlllllIIlIIllIlIlIIIlIlIlI)));
            If(Compare(Distance Between(Global.llIlIIlIlIlIllIllllIllIllI, Global.IlIlIIIlIIllllIllIlllllIll), <=, Global.IIIlIIlIIIIIlIlIIIlIllIlII));
                Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Nearest Walkable Position(Add(Global.lIllllllIlIIlllIlllllIllll, Multiply(Global.IlllllIIlIIllIlIlIIIlIlIlI, Global.llIIIllIIIIlIlllIlIIIllIll))));
            End;
            Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, Global.llIlIIlIlIlIllIllllIllIllI);
            Teleport(Event Player, (Event Player).IIIIIlIlIlIllIlllllIIllIll);
            Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
            Set Player Variable(Event Player, IIIllIlIIIIlIlllIlllIlIIlI, Global.llIlIIlIlIlIllIllllIllIllI);
            Wait(0.25, Ignore Condition);
            Set Invisible(Event Player, None);
            If(Compare((Event Player).lllIlIIllIIllIIIIlllIIllII, ==, 1));
                Small Message(All Players(Team 2), Custom String("{0} {1} spawned", Event Player, (Event Player).lIlIIIIlIIlIIlIIlIIIllllII));
            End;
            Create In-World Text(All Players(Team 2), Custom String("{0} ({1})", (Event Player).lIlIIIIlIIlIIlIIlIIIllllII, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII), Event Player, Add(1.5, Multiply(0.25, (Event Player).lllIlIIllIIllIIIIlllIIllII)), Clip Against Surfaces, Visible To, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 2), (Event Player).lllIlIIllIIllIIIIlllIIllII), Default Visibility);
            Set Player Variable(Event Player, IIllIIlIIllIIlIIlIlllIIllI, Last Text ID);
        End;
        Start Damage Modification(Event Player, Filtered Array(All Players(Team 2), (Current Array Element).lIIIllIIllIIIllIlIIllIlIll), Divide(Multiply(Multiply(1686.5, Value In Array(Global.llIIIllIllIlllIlllIIIlllll, (Event Player).lllIlIIllIIllIIIIlllIIllII)), (Event Player).IIIIIIIIlIIlIIIIIIIllIIIII), Global.IIIlIIIlIIllIIlllIlIIllIll), Receivers and Damagers);
        Skip(Multiply(2, Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 7)));
        Abort;
        Abort;
        Start Forcing Player Outlines(Event Player, All Players(Team 2), True, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 3), (Event Player).lllIlIIllIIllIIIIlllIIllII), Default);
        Abort;
        Start Forcing Player Outlines(Event Player, All Players(Team 2), True, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 3), (Event Player).lllIlIIllIIllIIIIlllIIllII), Always);
    }
}

rule ("lIIIlIIIlllIIlIlIllllIIlII") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).IlIllIlIlIlllIIlIllllllllI == True;
        (Event Player).IlIllIlIlIlllIIlIllllllllI <= Total Time Elapsed;
    }
    actions {
        Abort If(Not(Health(Event Player)));
        Set Player Variable(Event Player, IlIllIlIlIlllIIlIllllllllI, Add(Total Time Elapsed, 0.25));
        If(Or(Or(Or(Has Status(Event Player, Asleep), Has Status(Event Player, Frozen)), Has Status(Event Player, Knocked Down)), Has Status(Event Player, Stunned)));
            Set Player Variable(Event Player, lIIIIllIIIIIlIIIIllllIlIlI, Add(Total Time Elapsed, 0.25));
            Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, Add(Event Player, Multiply((Event Player).IlIlIIIlIIllIIIIllIlIIllll, 100)));
            Abort;
        End;
        If(Compare((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII, <, 7));
            If(Array Contains(All Players(All Teams), (Event Player).lllIIlllIIlIIlllIIIIlllIlI));
                Set Global Variable(IlIIlIIIlllIIlIllIIIIIllIl, Distance Between((Event Player).lllIIlllIIlIIlllIIIIlllIlI, Event Player));
                If(Compare(Global.IlIIlIIIlllIIlIllIIIIIllIl, >, (Event Player).lIllIIIIlIIlllIllIllIIIlII));
                    Set Player Variable(Event Player, lIllIlIIlllIllIlIlllllIIII, Horizontal Angle From Direction(Direction Towards(Event Player, (Event Player).lllIIlllIIlIIlllIIIIlllIlI)));
                Else If(Compare(Global.IlIIlIIIlllIIlIllIIIIIllIl, <, (Event Player).IIlllIlIIIlIlIlIlIIIIIllII));
                    If(Compare(Dot Product((Event Player).IlIlIIIlIIllIIIIllIlIIllll, Multiply(Direction Towards(Event Player, (Event Player).lllIIlllIIlIIlllIIIIlllIlI), Vector(1, 0, 1))), >=, 0.5));
                        Set Player Variable(Event Player, lIllIlIIlllIllIlIlllllIIII, Add(Horizontal Angle From Direction(Direction Towards((Event Player).lllIIlllIIlIIlllIIIIlllIlI, Event Player)), Random Integer(-25, 25)));
                    End;
                Else If(Compare(Dot Product((Event Player).IlIlIIIlIIllIIIIllIlIIllll, Multiply(Direction Towards(Event Player, (Event Player).lllIIlllIIlIIlllIIIIlllIlI), Vector(1, 0, 1))), <=, -0.6));
                    Set Player Variable(Event Player, lIllIlIIlllIllIlIlllllIIII, Add(Horizontal Angle From Direction(Direction Towards(Event Player, (Event Player).lllIIlllIIlIIlllIIIIlllIlI)), Multiply(Random Integer(50, 90), Random Value In Array(Array(-1, 1)))));
                End;
            End;
            If(And(And(Not(Random Integer(0, 3)), Compare(Distance Between((Event Player).lllIIlllIIlIIlllIIIIlllIlI, Event Player), <=, 2)), Array Contains(All Living Players(Team 2), (Event Player).lllIIlllIIlIIlllIIIIlllIlI)));
                Press Button(Event Player, Button(Melee));
            End;
        End;
        If(Compare((Event Player).lllIlIIllIIllIIIIlllIIllII, >=, 2));
            If(Or(Or(Compare(Distance Between(Event Player, Global.IlIlIIIlIIllllIllIlllllIll), <=, Global.IIIlIIlIIIIIlIlIIIlIllIlII), And(First Of(Global.lllllIlIIlllIIIlIlllllllIl), Compare(Distance Between(Event Player, First Of(Global.lllllIlIIlllIIIlIlllllllIl)), <=, First Of(Global.lIllIllIIllIllllIIlllIIlIl)))), And(Value In Array(Global.lllllIlIIlllIIIlIlllllllIl, 1), Compare(Distance Between(Event Player, Value In Array(Global.lllllIlIIlllIIIlIlllllllIl, 1)), <=, Value In Array(Global.lIllIllIIllIllllIIlllIIlIl, 1)))));
                Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
                Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, (Event Player).IIIllIlIIIIlIlllIlllIlIIlI);
                Call Subroutine(llIlIIIlIIlIIIIIllIlIIllIl);
                Set Player Variable(Event Player, lIllIlIIlllIllIlIlllllIIII, Random Integer(0, 359));
                Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, Direction From Angles((Event Player).lIllIlIIlllIllIlIlllllIIII, 0));
            End;
        End;
        If(Compare(Distance Between(Event Player, (Event Player).lIlIIlllIIIlIllllIllIIlIlI), <=, 0.1));
            Press Button(Event Player, Button(Jump));
            Set Player Variable(Event Player, lIllIlIIlllIllIlIlllllIIII, Random Integer(0, 359));
            Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, Direction From Angles((Event Player).lIllIlIIlllIllIlIlllllIIII, 0));
        End;
        Set Player Variable(Event Player, lIlIIlllIIIlIllllIllIIlIlI, Position Of(Event Player));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Subtract(Y Component Of(Position Of(Event Player)), 2.5));
        For Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 0, 7, 1);
            Modify Player Variable(Event Player, lIllIlIIlllIllIlIlllllIIII, Add, Multiply(Multiply(30, Global.IlllllIIlIIllIlIlIIIlIlIlI), Subtract(1, Multiply(2, Modulo(Global.IlllllIIlIIllIlIlIIIlIlIlI, 2)))));
            Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, Direction From Angles((Event Player).lIllIlIIlllIllIlIlllllIIII, 0));
            If(Is In Air(Event Player));
                If(Compare(Distance Between(Ray Cast Hit Position(Add(Event Player, Up), Add(Add(Event Player, Up), Multiply((Event Player).IlIlIIIlIIllIIIIllIlIIllll, 2)), Null, Null, False), Add(Add(Event Player, Up), Multiply((Event Player).IlIlIIIlIIllIIIIllIlIIllll, 2))), <=, 0.1));
                    Break;
                End;
            Else If(Compare(Y Component Of(Ray Cast Hit Position(Add(Add(Event Player, Vector(0, 2.5, 0)), Multiply((Event Player).IlIlIIIlIIllIIIIllIlIIllll, 2)), Add(Add(Event Player, Vector(0, -10, 0)), Multiply((Event Player).IlIlIIIlIIllIIIIllIlIIllll, 2)), Null, Null, False)), >=, Global.lIIIIIllllIlIIIIlIIIlIIIll));
                If(Is In Line of Sight(Add(Event Player, Up), Add(Up, Ray Cast Hit Position(Add(Add(Event Player, Vector(0, 2.5, 0)), Multiply((Event Player).IlIlIIIlIIllIIIIllIlIIllll, 4)), Add(Add(Event Player, Vector(0, -10, 0)), Multiply((Event Player).IlIlIIIlIIllIIIIllIlIIllll, 4)), Null, Null, False)), Barriers Do Not Block LOS));
                    Break;
                End;
            End;
        End;
    }
}

rule ("IIIllIIllllIlllllIllllIlll") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).llllllIllIIlllllIlIIlIIllI == True;
        (Event Player).llllllIllIIlllllIlIIlIIllI <= Total Time Elapsed;
    }
    actions {
        Abort If(Not(Health(Event Player)));
        If(Compare(Hero Of(Event Player), ==, Hero(Mercy)));
            If(Compare(Not(Count Of(Filtered Array(Remove From Array(All Living Players(Team 1), Event Player), Is In Line of Sight(Eye Position(Event Player), Add(Current Array Element, Up), Barriers Do Not Block LOS)))), !=, (Event Player).IIlllllIIIIlllIIIlllIllIlI));
                Set Player Variable(Event Player, IIlllllIIIIlllIIIlllIllIlI, Not((Event Player).IIlllllIIIIlllIIIlllIllIlI));
                Set Weapon(Event Player, Add((Event Player).IIlllllIIIIlllIIIlllIllIlI, 1));
                Set Player Variable At Index(Event Player, IllIlIllIIIIlIIllIllIllIlI, 0, Add(1.025, Multiply(2, Not((Event Player).IIlllllIIIIlllIIIlllIllIlI))));
                Set Player Variable At Index(Event Player, IllIlIllIIIIlIIllIllIllIlI, 1, Multiply(102.025, Not((Event Player).IIlllllIIIIlllIIIlllIllIlI)));
            End;
        End;
        If(Compare((Event Player).llIlIlIllIIllIlllIlIIlIllI, <=, Total Time Elapsed));
            Set Player Variable At Index(Event Player, IllIlIllIIIIlIIllIllIllIlI, 2, Value In Array((Event Player).IllIlIllIIIIlIIllIllIllIlI, 5));
            Set Player Variable(Event Player, llIlIlIllIIllIlllIlIIlIllI, Add(Total Time Elapsed, 16000));
        End;
        If(Compare((Event Player).IlllIIlllIlllIIlIlIIIIllIl, <=, Total Time Elapsed));
            Set Player Variable At Index(Event Player, IllIlIllIIIIlIIllIllIllIlI, 3, Value In Array((Event Player).IllIlIllIIIIlIIllIllIllIlI, 6));
            Set Player Variable(Event Player, IlllIIlllIlllIIlIlIIIIllIl, Add(Total Time Elapsed, 16000));
        End;
        Set Player Variable(Event Player, IIIlIlIIlIIlIIIlllllIIIlIl, Random Value In Array(Remove From Array(Array Slice((Event Player).IllIlIllIIIIlIIllIllIllIlI, 0, Add(4, And(Compare(Ultimate Charge Percent(Event Player), >=, 100), Compare((Event Player).IIIllIIIlIlIlIlIlIllIIIlIl, <=, Total Time Elapsed)))), False)));
        Set Player Variable(Event Player, IlIIllIlllllIlIIlIlIlllllI, Index Of Array Value((Event Player).IllIlIllIIIIlIIllIllIllIlI, (Event Player).IIIlIlIIlIIlIIIlllllIIIlIl));
        Set Player Variable(Event Player, lIIIIIllIlIIlIlIIIlIlIIlII, Round To Integer(Modulo((Event Player).IIIlIlIIlIIlIIIlllllIIIlIl, 10), Down));
        Set Player Variable(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Multiply(Modulo((Event Player).IIIlIlIIlIIlIIIlllllIIIlIl, 1), 100));
        Wait(Add(0.25, Multiply(And(Compare((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII, <=, 6), Compare((Event Player).lIIlIIIIIIIlIIlIIlIIIlllIl, !=, (Event Player).IlIIllIlllllIlIIlIlIlllllI)), 0.5)), Ignore Condition);
        If(Compare((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII, ==, 7));
            If(Compare(Health(Event Player), >=, Multiply(Max Health(Event Player), 0.95)));
                Set Player Variable(Event Player, llllllIllIIlllllIlIIlIIllI, 1);
                Loop;
            End;
        Else If(Compare((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII, <=, 6));
            Loop If(Or(Or(Not(Array Contains(All Players(All Teams), (Event Player).lllIIlllIIlIIlllIIIIlllIlI)), Not(Is In View Angle(Event Player, (Event Player).lllIIlllIIlIIlllIIIIlllIlI, Add(10, Multiply(Multiply(Compare(Distance Between(Event Player, (Event Player).lllIIlllIIlIIlllIIIIlllIlI), <, 20), Subtract(20, Distance Between(Event Player, (Event Player).lllIIlllIIlIIlllIIIIlllIlI))), 4.5))))), Not(Is In Line of Sight(Eye Position(Event Player), Add((Event Player).lllIIlllIIlIIlllIIIIlllIlI, Up), Barriers Do Not Block LOS))));
        End;
        If(Not((Event Player).IlIIllIlllllIlIIlIlIlllllI));
            If(Or(Compare((Event Player).IIlIlIlIIlIIIllIllIlIIllll, <=, 0), (Event Player).lIIIIIlIlIllIlIIIIIlIlIIlI));
                Press Button(Event Player, Button(Primary Fire));
            Else;
                Start Holding Button(Event Player, Button(Primary Fire));
                Wait((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Ignore Condition);
                Stop Holding Button(Event Player, Button(Primary Fire));
            End;
        Else If(Compare((Event Player).IlIIllIlllllIlIIlIlIlllllI, ==, 1));
            If(Compare((Event Player).IIlIlIlIIlIIIllIllIlIIllll, <=, 0));
                Press Button(Event Player, Button(Secondary Fire));
            Else;
                Start Holding Button(Event Player, Button(Secondary Fire));
                If(And(Compare(Hero Of(Event Player), ==, Hero(Brigitte)), Compare(Distance Between(Event Player, (Event Player).lllIIlllIIlIIlllIIIIlllIlI), <=, 8)));
                    Wait(Multiply((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 0.5), Ignore Condition);
                    Press Button(Event Player, Button(Primary Fire));
                    Wait(Multiply((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 0.5), Ignore Condition);
                Else;
                    Wait((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Ignore Condition);
                End;
                Stop Holding Button(Event Player, Button(Secondary Fire));
            End;
        Else If(Compare((Event Player).IlIIllIlllllIlIIlIlIlllllI, ==, 2));
            If(And(Compare(Hero Of(Event Player), !=, Hero(Soldier: 76)), Compare(Hero Of(Event Player), !=, Hero(Mercy))));
                Start Holding Button(Event Player, Button(Ability 1));
                Wait(Add(1.5, Compare(Hero Of(Event Player), ==, Hero(Soldier: 76))), Ignore Condition);
                Stop Holding Button(Event Player, Button(Ability 1));
            Else;
                Press Button(Event Player, Button(Ability 1));
            End;
            Set Player Variable At Index(Event Player, IllIlIllIIIIlIIllIllIllIlI, 2, 0);
            Set Player Variable(Event Player, llIlIlIllIIllIlllIlIIlIllI, Add(Total Time Elapsed, (Event Player).IIlIlIlIIlIIIllIllIlIIllll));
        Else If(Compare((Event Player).IlIIllIlllllIlIIlIlIlllllI, ==, 3));
            If(Array Contains(Array(Hero(Mei), Hero(Moira), Hero(Reaper), Hero(Symmetra)), Hero Of(Event Player)));
                Start Holding Button(Event Player, Button(Ability 2));
                Wait(0.1, Ignore Condition);
                Press Button(Event Player, If-Then-Else(And(Compare(Hero Of(Event Player), ==, Hero(Moira)), Not(Array Contains(All Players(Team 1), (Event Player).lllIIlllIIlIIlllIIIIlllIlI))), Button(Secondary Fire), Button(Primary Fire)));
                Wait(0.1, Ignore Condition);
                Stop Holding Button(Event Player, Button(Ability 2));
            Else;
                Press Button(Event Player, Button(Ability 2));
                Set Player Variable At Index(Event Player, IllIlIllIIIIlIIllIllIllIlI, 3, 0);
                Set Player Variable(Event Player, IlllIIlllIlllIIlIlIIIIllIl, Add(Total Time Elapsed, (Event Player).IIlIlIlIIlIIIllIllIlIIllll));
            End;
        Else If(Compare((Event Player).IlIIllIlllllIlIIlIlIlllllI, ==, 4));
            Press Button(Event Player, Button(Ultimate));
            If(Compare((Event Player).IIlIlIlIIlIIIllIllIlIIllll, >, 0));
                Wait((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Ignore Condition);
                Press Button(Event Player, Button(Primary Fire));
            End;
            Set Player Variable(Event Player, IIIllIIIlIlIlIlIlIllIIIlIl, Add(Add(Add(Total Time Elapsed, Multiply(Compare(Hero Of(Event Player), ==, Hero(D.Va)), 120)), Multiply(Compare(Hero Of(Event Player), ==, Hero(Echo)), 60)), Multiply(Compare(Hero Of(Event Player), ==, Hero(Winston)), 120)));
        End;
        Set Player Variable(Event Player, lIIlIIIIIIIlIIlIIlIIIlllIl, (Event Player).IlIIllIlllllIlIIlIlIlllllI);
        Set Player Variable(Event Player, llllllIllIIlllllIlIIlIIllI, Add(Add(Add(Total Time Elapsed, 0.25), Multiply(And(Compare(Hero Of(Event Player), ==, Hero(Widowmaker)), Not((Event Player).IlIIllIlllllIlIIlIlIlllllI)), 0.5)), Round To Integer(Multiply(Modulo((Event Player).IIIlIlIIlIIlIIIlllllIIIlIl, 100), 0.1), Down)));
    }
}

rule ("lIIlIllIIIIIllIlIIIllIIIII") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).lIIIIllIIIIIlIIIIllllIlIlI == True;
        (Event Player).lIIIIllIIIIIlIIIIllllIlIlI <= Total Time Elapsed;
    }
    actions {
        Abort If(Not(Health(Event Player)));
        Set Player Variable(Event Player, lIIIIllIIIIIlIIIIllllIlIlI, Add(Total Time Elapsed, 0.25));
        Skip If(Compare((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII, >=, 7), 13);
        Skip(Multiply(Subtract((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII, 1), 2));
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, First Of(Sorted Array(Filtered Array(All Living Players(Team 2), And(Not((Current Array Element).llllllIlIIlIIllIIlllIlIIII), Is In Line of Sight(Eye Position(Event Player), Add(Current Array Element, Up), Barriers Do Not Block LOS))), Distance Between(Current Array Element, Event Player))));
        Skip(9);
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, First Of(Sorted Array(Filtered Array(Remove From Array(All Living Players(Team 1), Event Player), Is In Line of Sight(Eye Position(Event Player), Add(Current Array Element, Up), Barriers Do Not Block LOS)), Distance Between(Current Array Element, Event Player))));
        Skip(7);
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, First Of(Sorted Array(Filtered Array(Remove From Array(All Living Players(Team 1), Event Player), And(Compare(Health(Current Array Element), <, Multiply(Max Health(Current Array Element), 0.99)), Is In Line of Sight(Eye Position(Event Player), Add(Current Array Element, Up), Barriers Do Not Block LOS))), Health(Current Array Element))));
        Skip(5);
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, First Of(Sorted Array(Filtered Array(All Living Players(Team 2), Not((Current Array Element).llllllIlIIlIIllIIlllIlIIII)), Subtract(Distance Between(Current Array Element, (Event Player).lIlIlIIlIIIllIIIlIIlIllIIl), Multiply(100, Is In Line of Sight(Eye Position(Event Player), Add(Current Array Element, Up), Barriers Do Not Block LOS))))));
        Skip(3);
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, First Of(Sorted Array(Filtered Array(Remove From Array(All Living Players(All Teams), Event Player), And(Or(And(Compare(Team Of(Current Array Element), ==, Team 2), Not((Current Array Element).llllllIlIIlIIllIIlllIlIIII)), And(Compare(Team Of(Current Array Element), ==, Team 1), Compare(Health(Current Array Element), <, Multiply(Max Health(Current Array Element), 0.99)))), Is In Line of Sight(Eye Position(Event Player), Add(Current Array Element, Up), Barriers Do Not Block LOS))), Add(Multiply(Distance Between(Current Array Element, Event Player), 0.04), Divide(Health(Current Array Element), Max Health(Current Array Element))))));
        Skip(1);
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, First Of(Sorted Array(Filtered Array(Remove From Array(All Players(Team 1), Event Player), Is In Line of Sight(Eye Position(Event Player), Add(Current Array Element, Up), Barriers Do Not Block LOS)), Health(Current Array Element))));
        //lbl_1:
        //lbl_2:
        //lbl_3:
        //lbl_4:
        //lbl_5:
        Skip If(Array Contains(All Players(All Teams), (Event Player).lllIIlllIIlIIlllIIIIlllIlI), 1);
        //lbl_0:
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, Add(Event Player, Multiply((Event Player).IlIlIIIlIIllIIIIllIlIIllll, 100)));
        Abort If(Compare((Event Player).llIIllllIIlIIIIIIIlIlIlllI, <=, 0));
        If(And(And(Not((Event Player).IlIIllIlllllIlIIlIlIlllllI), Compare(Distance Between(Event Player, (Event Player).lllIIlllIIlIIlllIIIIlllIlI), >=, (Event Player).llIIllllIIlIIIIIIIlIlIlllI)), Array Contains(All Players(All Teams), (Event Player).lllIIlllIIlIIlllIIIIlllIlI)));
            If(Not((Event Player).lIIIIIlIlIllIlIIIIIlIlIIlI));
                Set Player Variable(Event Player, lIIIIIlIlIllIlIIIIIlIlIIlI, True);
                Start Holding Button(Event Player, Button(Secondary Fire));
            End;
            Abort;
        End;
        Set Player Variable(Event Player, lIIIIIlIlIllIlIIIIIlIlIIlI, False);
        Stop Holding Button(Event Player, Button(Secondary Fire));
    }
}

rule ("lllIlIIIllIllIlllIIIllIlII") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IIIlIlIllIlllIllllIlIllIll == True;
        (Event Player).llllllIIIlllIlIlIlIIIIIlll <= Total Time Elapsed;
        Global.IllIlIllIllIllIIlIIIIllIIl <= Total Time Elapsed;
    }
    actions {
        Set Player Variable(Event Player, llllllIIIlllIlIlIlIIIIIlll, Add(Total Time Elapsed, 3000));
        Modify Player Variable(Event Player, lIIlIllIIIIllIlIIIlIIlIIII, Add, 1);
        Abort If(Compare((Event Player).lIIlIllIIIIllIlIIIlIIlIIII, <, 2));
        If(And(And((Event Player).lIllIlllIlllIIlIIlllllIllI, Not(Modulo(Subtract((Event Player).lIIlIllIIIIllIlIIIlIIlIIII, 1), (Event Player).lIllIlllIlllIIlIIlllllIllI))), Compare((Event Player).IlIllIlIlIlllIIlIllllllllI, <=, Total Time Elapsed)));
            Call Subroutine(lllIlllllIlIIIllIlIlIIIlIl);
            Small Message(Event Player, Custom String("Autosave code created"));
            Wait(3, Ignore Condition);
        End;
        Abort If(Modulo(Subtract((Event Player).lIIlIllIIIIllIlIIIlIIlIIII, 1), 6));
        Small Message(Event Player, Custom String("You have been playing for {0} hour(s).", Multiply(0.5, Subtract((Event Player).lIIlIllIIIIllIlIIIlIIlIIII, 1))));
        Wait(3, Ignore Condition);
        Small Message(Event Player, Custom String("Please remember to save your progress regularly"));
        Wait(3, Ignore Condition);
        Small Message(Event Player, Custom String("and take a break when you need one."));
    }
}

rule ("lllllIIlIlllllIllIIlIIIlII") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).llIllIIIlIllllIIlIlIIIlllI == True;
        Is Dead(Event Player) == True;
    }
    actions {
        Call Subroutine(lllIllllIllIIlIllIIIIIIllI);
        If(Or(Compare((Event Player).IIIIlIIIIllllIlllIIIlllIIl, !=, 5), Compare((Event Player).lIIIlIlIIIIIIllllIlIlIlllI, >, Total Time Elapsed)));
            Set Player Variable(Event Player, IIllIIlllllllIlIIllIIIIIll, 0);
            Set Player Variable(Event Player, IIIllIIllIIIIllIlIlIIIIIII, 0);
            Set Player Variable(Event Player, llIllIlIllIIlIlIIlIIlIIIll, Custom String(""));
            Set Player Variable(Event Player, IllIlIlIIlIIIIIIIIlIlIlIlI, Add(Total Time Elapsed, 0.25));
            Abort;
        End;
        Abort If(Or(And(Global.IIIlIlllIlIllIIllllllIIIIl, Compare(Y Component Of(Position Of(Event Player)), <=, Global.IIIlIlllIlIllIIllllllIIIIl)), And(Not(Global.IIIlIlllIlIllIIllllllIIIIl), Compare(Y Component Of(Position Of(Event Player)), <=, Subtract(Add(Multiply(X Component Of(Position Of(Event Player)), 0.05), Multiply(Z Component Of(Position Of(Event Player)), -0.06)), 4)))));
        Set Player Variable(Event Player, lIIIlIlIIIIIIllllIlIlIlllI, Subtract(Add(Total Time Elapsed, 600), Multiply(60, (Event Player).IIlIIllIIIllIllllIIIIlIIll)));
        Call Subroutine(lllllIIIllIlIIIlIlIllllllI);
        Resurrect(Event Player);
        Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, Add(Position Of(Event Player), Up));
        Play Effect(All Players(Team 2), Buff Impact Sound, Null, (Event Player).IIIIIlIlIlIllIlllllIIllIll, 100);
        Set Status(Event Player, Null, Invincible, Add(1, Multiply((Event Player).IIlIIllIIIllIllllIIIIlIIll, 0.8)));
        Set Player Variable At Index(Event Player, IIllIlIIIIIIllIIIllIlIllII, 2, Add(Total Time Elapsed, 0.1));
        Abort If(Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 6)));
        Play Effect(All Players(Team 2), Good Explosion, Color(Yellow), (Event Player).IIIIIlIlIlIllIlllllIIllIll, True);
    }
}

rule ("lllIlIlIIIllIIlIIIIllllIIl") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IIllIIlIIllIIlIIlIlllIIllI == True;
    }
    actions {
        Wait(0.25, Ignore Condition);
        Big Message(Event Player, Custom String("Super Novice!"));
    }
}

rule ("llllllIlllIlIIIlIllllllIlI") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Value In Array((Event Player).IIllIlIIIIIIllIIIllIlIllII, 2) == True;
        Value In Array((Event Player).IIllIlIIIIIIllIIIllIlIllII, 2) <= Total Time Elapsed;
    }
    actions {
        Set Player Variable At Index(Event Player, IIllIlIIIIIIllIIIllIlIllII, 2, False);
        Heal(Event Player, Null, Global.IIlllIIIIIllIlIllIlIlllIII);
        Set Ammo(Event Player, 0, Multiply(First Of((Event Player).IIllIlIIIIIIllIIIllIlIllII), Add(1, Multiply(3, Compare(Hero Of(Event Player), ==, Hero(Kiriko))))));
        Set Ammo(Event Player, 1, Value In Array((Event Player).IIllIlIIIIIIllIIIllIlIllII, 1));
    }
}

rule ("llIIlIlIIIIlIlIllllIIlIIlI") {
    event {
        Ongoing - Each Player;
        Team 2;
        Echo;
    }
    conditions {
        Is Duplicating(Event Player) == True;
    }
    actions {
        Set Player Variable(Event Player, IIIIllIIlIllIlIlIllIlIIIIl, True);
        Call Subroutine(lIllIIIIIIllllIIlllIllllIl);
        Call Subroutine(lIllIIlIIIlIllllIlIlIIIlIl);
        Set Healing Dealt(Event Player, If-Then-Else((Event Player).lllIlllIllIIIlIIIIlllllIIl, 0, Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 1)));
        Set Player Variable At Index(Event Player, IIllIlIIIIIIllIIIllIlIllII, 2, Add(Total Time Elapsed, 0.1));
    }
}

rule ("IIIlIlIlIIIIlllllIlIIIlIII") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IIIIllIIlIllIlIlIllIlIIIIl == True;
        Or(Compare((Event Player).IIIllIlIIIIlIlllIlllIlIIlI, !=, Hero(Echo)), Not(Is Duplicating(Event Player))) == True;
    }
    actions {
        Set Player Variable(Event Player, IIIIllIIlIllIlIlIllIlIIIIl, False);
        Start Forcing Player To Be Hero(Event Player, Hero(Tracer));
        Start Forcing Player To Be Hero(Event Player, (Event Player).IIIllIlIIIIlIlllIlllIlIIlI);
        Call Subroutine(lIllIIIIIIllllIIlllIllllIl);
        Call Subroutine(lIllIIlIIIlIllllIlIlIIIlIl);
        Set Healing Dealt(Event Player, If-Then-Else((Event Player).lllIlllIllIIIlIIIIlllllIIl, 0, Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 1)));
        Set Player Variable At Index(Event Player, IIllIlIIIIIIllIIIllIlIllII, 2, Add(Total Time Elapsed, 0.1));
    }
}

rule ("IlIIIIIIIllIlllllIlIIIlIll") {
    event {
        Ongoing - Each Player;
        All;
        D.Va;
    }
    conditions {
        Is In Alternate Form(Event Player) == True;
    }
    actions {
        Wait(0.1, Ignore Condition);
        Abort If(Not(Is In Alternate Form(Event Player)));
        Set Player Variable(Event Player, llllIIlIIllIllIIlllllIllll, True);
        Set Ultimate Ability Enabled(Event Player, True);
        Abort If(Compare(Team Of(Event Player), ==, Team 2));
        Set Player Health(Event Player, Divide(Max Health(Event Player), 3));
    }
}

rule ("llIIllIlIlIlIIIIIIIllllIIl") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).llllIIlIIllIllIIlllllIllll == True;
        Or(Compare(Hero Of(Event Player), !=, Hero(D.Va)), Not(Is In Alternate Form(Event Player))) == True;
    }
    actions {
        Set Player Variable(Event Player, llllIIlIIllIllIIlllllIllll, False);
        Set Ultimate Ability Enabled(Event Player, If-Then-Else((Event Player).llllIIlIlllllllIIllIlIllII, True, Or(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 5)), ==, True), (Event Player).IIllIIlIIllIIlIIlIlllIIllI)));
    }
}

rule ("lIllIIlIllIIIIlllIIIIIllIl") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        Is In Spawn Room(Event Player) == True;
    }
    actions {
        Set Player Variable(Event Player, lllIlllIllIIIlIIIIlllllIIl, 2);
        Abort If(Compare(Global.IllIIlIllllIIIllIlllIIlIIl, !=, 2));
        Set Damage Dealt(Event Player, 0);
        Set Healing Dealt(Event Player, 0);
    }
}

rule ("IIIllIIllIllIIIllllllIlllI") {
    event {
        Ongoing - Each Player;
        Team 1;
        All;
    }
    conditions {
        (Event Player).IIIIlIIlIIlIlIIllIIlIIIIII == True;
        (Event Player).IIIIlIIlIIlIlIIllIIlIIIIII < Global.IIIIllIlIIlIIIlIIllIllIIlI;
    }
    actions {
        Set Player Variable(Event Player, IIIIlIIlIIlIlIIllIIlIIIIII, Global.IIIIllIlIIlIIIlIIllIllIIlI);
        Abort If(Not(Health(Event Player)));
        Abort If(Or(Compare(Distance Between(Event Player, Global.IIIllIIlllIlllllllllIlIllI), >, Add(12, Multiply((Global.IIIllIIlllIlllllllllIlIllI).IIIllIIllIIIIllIlIlIIIIIII, 3))), Not(Is In Line of Sight(Add(Position Of(Event Player), Up), Add(Position Of(Global.IIIllIIlllIlllllllllIlIllI), Up), Barriers Do Not Block LOS))));
        Damage(Event Player, Null, Multiply(Add(255.69, Multiply(28.41, Round To Integer((Global.IIIllIIlllIlllllllllIlIllI).IIIllIIllIIIIllIlIlIIIIIII, Down))), Add(1, Modulo((Global.IIIllIIlllIlllllllllIlIllI).IIIllIIllIIIIllIlIlIIIIIII, 1))));
        Modify Player Variable(Event Player, IIIllIIllIIIIllIlIlIIIIIII, Max, (Global.IIIllIIlllIlllllllllIlIllI).IIIllIIllIIIIllIlIlIIIIIII);
        Modify Player Variable(Global.IIIllIIlllIlllllllllIlIllI, IlllIIlilllIilIIIIIIlIlIil, Remove From Array By Value, 0);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, Count Of((Global.IIIllIIlllIlllllllllIlIllI).IlllIIlilllIilIIIIIIlIlIil), 1);
            If(Array Contains(All Players(Team 2), Value In Array((Global.IIIllIIlllIlllllllllIlIllI).IlllIIlilllIilIIIIIIlIlIil, Global.lIIlllIllllIlIIIIlIllIIIlI)));
                Set Player Variable At Index(Value In Array((Global.IIIllIIlllIlllllllllIlIllI).IlllIIlilllIilIIIIIIlIlIil, Global.lIIlllIllllIlIIIIlIllIIIlI), lllIlIIllIIllIIIIlllIIllII, Slot Of(Event Player), True);
            End;
        End;
    }
}

rule ("llIIllIIIlIllIIlIIIlIIIlII") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).IlllIllIlIlllIlIlIIlIllIlI == True;
        Is Button Held(Event Player, Button(Primary Fire)) == True;
    }
    actions {
        Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, First Of(Value In Array(Global.IlllIllIIIlIIlIIIIlIlIIIIl, (Event Player).IIlIIIIIIllIIlIlIIIlllllIl)));
        Call Subroutine(IlIllIIIlIIIIIlIIlIlIIlIIl);
    }
}

rule ("IIIllIIlIlIllIlIIIIlllIlII") {
    event {
        Ongoing - Global;
    }
    conditions {
        Is Game In Progress == True;
    }
    actions {
        Call Subroutine(IIIlIllIIIIllIIlllIIlIlIll);
        Wait(60, Ignore Condition);
        Loop;
    }
}

rule ("llIllIIlIlIllIIllllIlIIlll") {
    event {
        Ongoing - Global;
    }
    conditions {
        Global.lllllIIIllIIIllIlIIllIllII == True;
        Total Time Elapsed > Global.lllllIIIllIIIllIlIIllIllII;
    }
    actions {
        If(Not(Modulo(Global.lllllIIIllIIIllIlIIllIllII, 1)));
            Modify Global Variable(lllllIIIllIIIllIlIIllIllII, Add, 600.5);
            Set Match Time(600);
            Call Subroutine(IIIlIllIIIIllIIlllIIlIlIll);
            Enable Game Mode HUD(All Players(Team 2));
            Create HUD Text(All Players(Team 2), Custom String("Game will end soon"), Null, Null, Top, -1, Color(Red), Null, Null, Visible To, Default Visibility);
            Big Message(All Players(Team 2), Custom String("Game will end in 10 minutes"));
            Abort;
        End;
        Declare Team Victory(Team 2);
    }
}

rule ("IIlIIlIIIlIIIlllIIIIIIllIl") {
    event {
        Ongoing - Each Player;
        Team 2;
        All;
    }
    conditions {
        (Event Player).lIlIIlIIlIllIIIIIlIlIIIIll == True;
        (Event Player).IllIlllllIIIlIllIllllllIII <= Total Time Elapsed;
    }
    actions {
        Set Player Variable At Index(Event Player, lIlIlllIllIlIIIllllIllIlll, 0, Value In Array((Event Player).lIlIlllIllIlIIIllllIllIlll, 1));
        Set Player Variable At Index(Event Player, lIlIlllIllIlIIIllllIllIlll, 2, Value In Array((Event Player).lIlIlllIllIlIIIllllIllIlll, 3));
        Set Player Variable At Index(Event Player, lIlIlIIIlllIIIIlIIlIlllllI, 0, If-Then-Else(Value In Array((Event Player).lIlIlIIIlllIIIIlIIlIlllllI, 1), Value In Array((Event Player).lIlIlIIIlllIIIIlIIlIlllllI, 1), 1));
        Set Player Variable At Index(Event Player, lIlIlIIIlllIIIIlIIlIlllllI, 1, False);
        Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, (Event Player).lIlIIlIIlIllIIIIIlIlIIIIll);
        Skip(Multiply(2, Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1)));
        Call Subroutine(lIlIlIIllIIlllIlllllllllll);
        Skip(13);
        Call Subroutine(llIlIIIlllllIllIlIIIlllIIl);
        Skip(11);
        Call Subroutine(IIIIlIllIlIIIlIlllllIIIllI);
        Skip(9);
        Call Subroutine(IllllIIllIllllIIIIIIllIlII);
        Skip(7);
        Call Subroutine(IIlIllIIllIlIIIIlIIIIllIll);
        Skip(5);
        Call Subroutine(llIIlIlIIIIIllIIlIllIIIlII);
        Skip(3);
        Call Subroutine(IllIIIIllIlIIIIIlIlIlIlIll);
        Skip(1);
        Call Subroutine(lIIIlllIlIIllIlllllllIlllI);
        //lbl_0:
        //lbl_1:
        //lbl_2:
        //lbl_3:
        //lbl_4:
        //lbl_5:
        //lbl_6:
        Loop If(And((Event Player).lIlIIlIIlIllIIIIIlIlIIIIll, Compare((Event Player).IllIlllllIIIlIllIllllllIII, <=, Total Time Elapsed)));
    }
}

rule ("IIIIIIIIlIlllIIIlIIIlIIllI") {
    event {
        Subroutine;
        IlllllIlIllllIIlllIllllllI;
    }
    actions {
        If(Compare((Event Player).llIIIIIIllIIlIIlIlIIIIllII, >=, (Event Player).llIIlllIIIIllIIllIIIIIllII));
            Set Global Variable At Index(lIIlllIllllIlIIIIlIllIIIlI, 1, (Event Player).IIIlIlIllIlllIllllIlIllIll);
            Set Global Variable At Index(lIIlllIllllIlIIIIlIllIIIlI, 0, 0);
            While(Compare((Event Player).llIIIIIIllIIlIIlIlIIIIllII, >=, (Event Player).llIIlllIIIIllIIllIIIIIllII));
                Modify Player Variable(Event Player, llIIIIIIllIIlIIlIlIIIIllII, Subtract, (Event Player).llIIlllIIIIllIIllIIIIIllII);
                Set Player Variable(Event Player, IIIlIlIllIlllIllllIlIllIll, Min(120, Add((Event Player).IIIlIlIllIlllIllllIlIllIll, 1)));
                Set Player Variable(Event Player, llIIlllIIIIllIIllIIIIIllII, Multiply(Multiply(Raise To Power((Event Player).IIIlIlIllIlllIllllIlIllIll, 2), 10), Add(1, Multiply(Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True), Modulo((Event Player).IIIlIlIllIlllIllllIlIllIll, 100)))));
                Modify Global Variable At Index(lIIlllIllllIlIIIIlIllIIIlI, 0, Add, 1);
                If(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, ==, 100));
                    Modify Player Variable(Event Player, llIIIIIIllIIlIIlIlIIIIllII, Multiply, 0.1);
                    Set Player Variable(Event Player, llllIIlIlllllllIIllIlIllII, 1);
                    Set Player Variable(Event Player, IIIlIllIlIIllIlIlllllIlIll, Empty Array);
                    Call Subroutine(IIlIIIlllIIIllIlllIllllIII);
                End;
            End;
            If(Compare(Event Player, ==, Host Player));
                Modify Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 0, Add, Multiply(First Of(Global.lIIlllIllllIlIIIIlIllIIIlI), And(Compare(Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 2), ==, True), Compare(First Of(Global.lllllIIlIlllIIllIIlIIlllII), <, 120))));
                Modify Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 1, Add, Multiply(First Of(Global.lIIlllIllllIlIIIIlIllIIIlI), And(Compare(Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 3), ==, True), Compare(Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 1), <, 120))));
                Set Global Variable At Index(lllllIIlIlllIIllIIlIIlllII, 5, Max(First Of(Global.lllllIIlIlllIIllIIlIIlllII), 1));
            End;
            If(And(Compare(Value In Array(Global.lIIlllIllllIlIIIIlIllIIIlI, 1), <, 7), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, 6)));
                For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, Add((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, 1), 1);
                    If(And(Compare(Multiply(Global.lIIlllIllllIlIIIIlIllIIIlI, 19), !=, (Event Player).lllllIIlllIlllllIIlIIlllII), Not(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Multiply(Global.lIIlllIllllIlIIIIlIllIIIlI, 19), 1)))));
                        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Multiply(Global.lIIlllIllllIlIIIIlIllIIIlI, 19), 17), Multiply(100, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Multiply(Global.lIIlllIllllIlIIIIlIllIIIlI, 19), 17)), >=, 100)));
                    End;
                End;
                If(Compare((Event Player).lIIIIIIlIIllllIllIlIIllIlI, !=, Empty Array));
                    For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, Divide(Count Of((Event Player).lIIIIIIlIIllllIllIlIIllIlI), 19), 1);
                        If(Not(Value In Array((Event Player).lIIIIIIlIIllllIllIlIIllIlI, Add(Multiply(Global.lIIlllIllllIlIIIIlIllIIIlI, 19), 1))));
                            Set Player Variable At Index(Event Player, lIIIIIIlIIllllIllIlIIllIlI, Add(Multiply(Global.lIIlllIllllIlIIIIlIllIIIlI, 19), 17), Multiply(100, Compare(Value In Array((Event Player).lIIIIIIlIIllllIllIlIIllIlI, Add(Multiply(Global.lIIlllIllllIlIIIIlIllIIIlI, 19), 17)), >=, 100)));
                        End;
                    End;
                End;
                For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 3, 1);
                    If(And(Compare(Modulo(Value In Array((Event Player).llIIIlllIIIlllllIIllIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI), 10), ==, 2), Value In Array((Event Player).llIlIlIllIIllIlllIlIIlIllI, Global.lIIlllIllllIlIIIIlIllIIIlI)));
                        Set Player Variable At Index(Event Player, lIIIIllIIIIIlIIIIllllIlIlI, Global.lIIlllIllllIlIIIIlIllIIIlI, Global.lIllIIlIlIIIIIlIIIlIlIlllI);
                        Set Player Variable At Index(Event Player, llIlIlIllIIllIlllIlIIlIllI, Global.lIIlllIllllIlIIIIlIllIIIlI, 0);
                        Destroy Effect(Value In Array((Event Player).IIIlIlIIlllIIlIIlllIIIIlII, Global.lIIlllIllllIlIIIIlIllIIIlI));
                    End;
                End;
                Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
            End;
            Small Message(Event Player, Custom String("Level {0}", (Event Player).IIIlIlIllIlllIllllIlIllIll));
            If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), >=, 2));
                Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Reached level {0}!", (Event Player).IIIlIlIllIlllIllllIlIllIll));
                Call Subroutine(llIlllIllIIllllIIIIIllIlII);
            End;
            Play Effect(All Players(Team 2), Ring Explosion Sound, Null, Event Player, 100);
            If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 5));
                Play Effect(All Players(Team 2), Ring Explosion, Color(White), Add(Position Of(Event Player), Up), 5);
            End;
            Call Subroutine(lIIIIlIllIIIIlIIIIllIIlIlI);
            Set Player Variable(Event Player, IllIlIlIIlIIIIIIIIlIlIlIlI, Add(Total Time Elapsed, 0.25));
        End;
        If(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, 119));
            Set Player Variable(Event Player, llIIIIIIllIIlIIlIlIIIIllII, False);
        End;
        Set Player Variable(Event Player, lllIIIIIIIlllIIlIIIlllIIIl, Multiply(Divide((Event Player).llIIIIIIllIIlIIlIlIIIIllII, (Event Player).llIIlllIIIIllIIllIIIIIllII), 100));
    }
}

rule ("IIIlIllIlllIIlIIllllIllllI") {
    event {
        Subroutine;
        llIllIllIllIIIlIlIlIIlIlII;
    }
    actions {
        Abort If(Compare(Random Real(0, 1), >, Global.lIIlIIIIllIIIIIlIlIIIlIIll));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Add(Add(1, Multiply((Event Player).lIIllIIIlIlIlIllIIIlIllIII, 0.001)), Multiply(Compare(Global.llIlIIlIlIlIllIllllIllIllI, >=, 3), Add(0.5, Divide(Multiply(6.684, Raise To Power((Event Player).lIllIlIIlllIllIlIlllllIIII, 3)), 8000)))));
        If(Compare(Random Real(0, 10000), <=, Add(Global.lIIIIIllllIlIIIIlIIIlIIIll, Multiply((Global.IIIllIIlllIlllllllllIlIllI).lIlIlIIlIIIllIIIlIIlIllIIl, 3333.333))));
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 9);
        Else If(And((Event Player).llllIIlIlllllllIIllIlIllII, Not(Random Integer(0, Subtract(2499, Multiply(Global.llIlIIlIlIlIllIllllIllIllI, 750))))));
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 5.3);
        Else If(And(Compare(Global.llIlIIlIlIlIllIllllIllIllI, <=, 1), Compare(Random Real(0, 1000), <=, Multiply(If-Then-Else(Or(Or((Event Player).IIlIIIIllllIllIIlIIIIlIlll, Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, 59)), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 17)), 100), <=, 25)), 6, 33.333), Add(1, Multiply(3, Global.llIlIIlIlIlIllIllllIllIllI))))));
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Random Value In Array(Array(4.1, 4.2, 4.2)));
        Else;
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, False);
            For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 3, 1);
                If(Compare(Random Real(0, 1000), >, Round To Integer(Multiply(Global.lIIIIIllllIlIIIIlIIIlIIIll, Value In Array(Array(Add(300, Multiply(700, Global.llIlIIlIlIlIllIllllIllIllI)), Add(250, Multiply(Compare(Global.llIlIIlIlIlIllIllllIllIllI, >=, 2), 750)), Add(Add(200, Multiply(Global.llIlIIlIlIlIllIllllIllIllI, 10)), Multiply(Compare(Global.llIlIIlIlIlIllIllllIllIllI, >=, 2), 780))), Global.lIIlllIllllIlIIIIlIllIIIlI)), To Nearest)));
                    Break;
                End;
                Modify Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Add, 1);
            End;
            If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 3));
                Call Subroutine(llIlIlllIIIIIlIIllIlIIIIlI);
                Modify Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Add, And(And(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 6), Compare((Event Player).lIllIlIIlllIllIlIlllllIIII, >=, 20)), Compare(Random Integer(0, 23), <, Round To Integer(Global.lIIIIIllllIlIIIIlIIIlIIIll, Down))));
            End;
            If(And(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 2), Or(Compare((Event Player).lIllIlIIlllIllIlIlllllIIII, >, 2), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 7))));
                Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Compare(Global.llIlIIlIlIlIllIllllIllIllI, ==, True));
            End;
        End;
        Abort If(Not(Global.IlllllIIlIIllIlIlIIIlIlIlI));
        Abort If(And(Compare((Event Player).lIIIlIIIlllllIIllIllIIIIll, >=, 3), Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, <, First Of(Sorted Array((Event Player).llIIIlllIIIlllllIIllIIIIIl, Current Array Element)))));
        Set Global Variable(IlIIlIIIlllIIlIllIIIIIllIl, (Event Player).lIllIlIIlllIllIlIlllllIIII);
        If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 1));
            Set Global Variable(IlIIlIIIlllIIlIllIIIIIllIl, Round To Integer(Multiply(Multiply(Multiply(Add((Event Player).lIllIlIIlllIllIlIlllllIIII, 2.5), Add(Global.llIlIIlIlIlIllIllllIllIllI, 1)), Random Real(0.125, 0.375)), Add(1, Global.IllIIlIllIlIIIllIIlIIlllIl)), Up));
        End;
        Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Add(Global.IlIIIIIlllIlIlIIlllIIlllll, Global.lllIllIlIlllIIIIlIIlIIllII));
        If(Compare((Event Player).lIIIlIIIlllllIIllIllIIIIll, >=, 3));
            Set Global Variable(IIIlIlllIllllIlllllllIIlII, First Of(Sorted Array(Array Slice(Global.llIlIlIllIIllIlIlllIIlllIl, 0, 3), Add(Value In Array((Event Player).llIlIlIllIIllIlllIlIIlIllI, Current Array Element), Multiply(Value In Array((Event Player).llIIIlllIIIlllllIIllIIIIIl, Current Array Element), 90)))));
            Destroy Effect(Value In Array((Event Player).IIIlIlIIlllIIlIIlllIIIIlII, Global.IIIlIlllIllllIlllllllIIlII));
        Else;
            Modify Player Variable(Event Player, lIIIlIIIlllllIIllIllIIIIll, Add, 1);
            Set Global Variable(IIIlIlllIllllIlllllllIIlII, Index Of Array Value((Event Player).lIIIIllIIIIIlIIIIllllIlIlI, Global.lIllIIlIlIIIIIlIIIlIlIlllI));
        End;
        Call Subroutine(lIlIlIIIIllllIlIIIIIIlllIl);
        Set Player Variable At Index(Event Player, IIIlIlIIlllIIlIIlllIIIIlII, Global.IIIlIlllIllllIlllllllIIlII, Last Created Entity);
        Call Subroutine(llIlIIlIlIllIIIIlllIIIlIlI);
        Call Subroutine(lIIIllIlIlIIllIlIIlIlIIlIl);
        Set Player Variable At Index(Event Player, lIIIIllIIIIIlIIIIllllIlIlI, Global.IIIlIlllIllllIlllllllIIlII, Global.IlIIIIIlllIlIlIIlllIIlllll);
        Set Player Variable At Index(Event Player, IlIIllIlllllIlIIlIlIlllllI, Global.IIIlIlllIllllIlllllllIIlII, Global.IlIIlIIIlllIIlIllIIIIIllIl);
        Set Player Variable At Index(Event Player, llIIIlllIIIlllllIIllIIIIIl, Global.IIIlIlllIllllIlllllllIIlII, Global.IlllllIIlIIllIlIlIIIlIlIlI);
        Set Player Variable At Index(Event Player, llIlIlIllIIllIlllIlIIlIllI, Global.IIIlIlllIllllIlllllllIIlII, Add(Total Time Elapsed, 90));
        Set Player Variable(Event Player, lIIIIIlIlIllIlIIIIIlIlIIlI, First Of(Sorted Array(Remove From Array((Event Player).llIlIlIllIIllIlllIlIIlIllI, 0), Current Array Element)));
        Abort If(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4));
        Call Subroutine(IIlIIlllIIIIIlIIIIllIIIIIl);
    }
}

rule ("IIIIlIIIlllIIllIIIIlIIIlIl") {
    event {
        Subroutine;
        IIIIlIIlIllIlllIIIIlIlllII;
    }
    actions {
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        Set Player Variable(Event Player, lIIIIlIlIIlIIlIllllllIIllI, False);
        If(Not((Event Player).lIlIIlIlIlIIIlIlllllIlIIII));
            Small Message(Event Player, Custom String("No items to sell in inventory"));
            Abort;
        End;
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, (Event Player).IlIllIIlllllllllIIIIllllll);
        Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Multiply(Round To Integer(Multiply((Event Player).lIIlIIIIIIIlIIlIIlIIIlllIl, 0.125), Up), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 17)), <, 100)));
        Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, Value In Array(Global.lIIlIllllllIlllIlIIlIIllll, (Event Player).lIIIIIllIlIIlIlIIIlIlIIlII));
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, (Event Player).lllIlllIIllIlIIIlllIIlIllI);
        Small Message(Event Player, Custom String("Sold {0} {1} for {2} gold", (Event Player).lIlIlIIIIllIlllIIIIIlIlIll, Hero Icon String((Event Player).llIlIIllIIIIIIIIlIlIlIIlII), (Event Player).lIllIIlIllllIlIIIllIIllIlI));
        Set Player Variable(Event Player, IlIIllllIlllIllIIIllIlIlll, Min(Add((Event Player).IlIIllllIlllIllIIIllIlIlll, (Event Player).lIllIIlIllllIlIIIllIIllIlI), Global.IIlllIIIIIllIlIllIlIlllIII));
        Modify Player Variable(Event Player, lIlIIlIlIlIIIlIlllllIlIIII, Subtract, 1);
        Modify Player Variable(Event Player, lIIIIIIlIIllllIllIlIIllIlI, Append To Array, Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Global.lIIlllIllllIlIIIIlIllIIIlI, 19));
        If(Compare(Count Of((Event Player).lIIIIIIlIIllllIllIlIIllIlI), >, 38));
            Set Player Variable(Event Player, lIIIIIIlIIllllIllIlIIllIlI, Array Slice((Event Player).lIIIIIIlIIllllIllIlIIllIlI, 19, Subtract(Count Of((Event Player).lIIIIIIlIIllllIllIlIIllIlI), 19)));
        End;
        Set Player Variable(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Append To Array(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 0, Global.lIIlllIllllIlIIIIlIllIIIlI), Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 19), Subtract(Multiply(19, Add((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, 1)), Global.lIIlllIllllIlIIIIlIllIIIlI))));
        Modify Player Variable(Event Player, lllllIIlllIlllllIIlIIlllII, Subtract, Multiply(Compare((Event Player).lllllIIlllIlllllIIlIIlllII, >=, Global.lIIlllIllllIlIIIIlIllIIIlI), 19));
        If(Compare((Event Player).IlIlIIIlIIllIIIIllIlIIllll, >, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII));
            Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII);
        End;
        Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
    }
}

rule ("IIlIllIIllllIIIIlIIllllIlI") {
    event {
        Subroutine;
        lIIlllIIlIIlIlIIllIllIIIIl;
    }
    actions {
        Set Player Variable(Event Player, llIIllllIIlIIIIIIIlIlIlllI, Empty Array);
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Value In Array(Global.lIIlIllllllIlllIlIIlIIllll, Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1)));
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Empty Array);
        Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Array Slice(Global.llIlIlIllIIllIlIlllIIlllIl, 0, 4));
        For Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 2, 6, 1);
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIIIIllllIlIIIIlIIIlIIIll, Global.lIIlllIllllIlIIIIlIllIIIlI), 0);
        End;
        If((Event Player).llllIIlIlllllllIIllIlIllII);
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 5), Add(2, (Event Player).llllIIlIlllllllIIllIlIllII));
        Else;
            For Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 1, Global.IlllllIIlIIllIlIlIIIlIlIlI, 1);
                If(Count Of(Global.IIIIlllIIIIlIIIlIIIIllllIl));
                    Set Global Variable(IIIlIlllIllllIlllllllIIlII, Random Value In Array(Global.IIIIlllIIIIlIIIlIIIIllllIl));
                    Modify Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Remove From Array By Value, Global.IIIlIlllIllllIlllllllIIlII);
                    Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.IIIlIlllIllllIlllllllIIlII), 2), 1);
                End;
            End;
        End;
        Set Global Variable At Index(llIlIIlIlIlIllIllllIllIllI, 4, Round To Integer(Multiply((Event Player).lIllIIIIlIIlllIllIllIIIlII, Subtract(50, Multiply(Absolute Value(Subtract(6, Global.IlllllIIlIIllIlIlIIIlIlIlI)), 10))), Down));
        Set Global Variable At Index(llIlIIlIlIlIllIllllIllIllI, 5, Round To Integer(Multiply((Event Player).lIllIIIIlIIlllIllIllIIIlII, If-Then-Else(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 6), 50, Add(25, Multiply(Global.IlllllIIlIIllIlIlIIIlIlIlI, 5)))), Down));
        If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 3));
            Set Global Variable At Index(llIlIIlIlIlIllIllllIllIllI, 6, Round To Integer(Multiply((Event Player).lIllIIIIlIIlllIllIllIIIlII, If-Then-Else(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >, 6), 6, Multiply(Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 3), 3))), Down));
            Set Global Variable At Index(llIlIIlIlIlIllIllllIllIllI, 7, Round To Integer(Multiply((Event Player).lIllIIIIlIIlllIllIllIIIlII, If-Then-Else(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 6), 9, Multiply(Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 2), 3))), Down));
        End;
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Global.lIIlllIllllIlIIIIlIllIIIlI, (Event Player).lIIllllIlIIIllIIllllIIIlll);
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 1), Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1));
        For Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 6, 11, 1);
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.lIIIIIllllIlIIIIlIIIlIIIll), Min(Random Integer(Value In Array(Global.llIlIIlIlIlIllIllllIllIllI, 4), Value In Array(Global.llIlIIlIlIlIllIllllIllIllI, 5)), 50));
        End;
        For Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 11, 14, 1);
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.lIIIIIllllIlIIIIlIIIlIIIll), Multiply(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, Subtract(Global.lIIIIIllllIlIIIIlIIIlIIIll, 8)), Random Integer(1, 6)));
        End;
        For Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 14, 17, 1);
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.lIIIIIllllIlIIIIlIIIlIIIll), Random Integer(Value In Array(Global.llIlIIlIlIlIllIllllIllIllI, 6), Value In Array(Global.llIlIIlIlIlIllIllllIllIllI, 7)));
        End;
        If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 1));
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 17), 26);
        Else If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 4));
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 17), Multiply(Random Integer(1, 25), Compare(Random Integer(0, 9), >=, Multiply(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, <, 6), Subtract(9, Multiply(Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 4), 4))))));
            If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 6));
                For Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 11, 14, 1);
                    Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.lIIIIIllllIlIIIIlIIIlIIIll), 7);
                    Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.lIIIIIllllIlIIIIlIIIlIIIll), 3), 9);
                End;
            Else If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 7));
                Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 13), 7);
                Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 16), 9);
            End;
        End;
        Call Subroutine(lIllIlIlIllIIIIIlIlllIllIl);
        If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 5));
            Modify Global Variable(lIIlIlIlllllIllIIllIlllIIl, Add, 1);
            Start Rule(lIIlIllllIIlIlIIIIIIlIIlII, Restart Rule);
        End;
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 4, (Event Player).lIllIIlIllllIlIIIllIIllIlI);
        If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, <, 8));
            Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Custom String("Item Power {0}", (Event Player).lIllIIlIllllIlIIIllIIllIlI));
        End;
        Call Subroutine(lllIlllIlIlIllIlIllIIlllIl);
        If(Compare(Global.lIIlllIllllIlIIIIlIllIIIlI, !=, (Event Player).lllllIIlllIlllllIIlIIlllII));
            Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
        End;
        If(Compare((Event Player).lIlllllllllIllllIIIIlllIlI, ==, 5));
            Call Subroutine(llIIIllllIlIllIlIIIlIlIIIl);
        End;
    }
}

rule ("lIIIlIIlllIllIllllIlIllllI") {
    event {
        Subroutine;
        lIIlllIIlIlllIlIIIIIIIIIII;
    }
    actions {
        If(Compare((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, >=, 5));
            Small Message(Event Player, Custom String("Inventory full"));
            Abort;
        End;
        Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Add(18, Round To Integer(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 1.5), Up)));
        Set Player Variable(Event Player, IIllIIllIIIIIlIlIIllIllllI, 1);
        If(Compare((Event Player).IlIIllllIlllIllIIIllIlIlll, <, (Event Player).lIllIIlIllllIlIIIllIIllIlI));
            Small Message(Event Player, Custom String("Not enough gold to gamble (cost: {0})", (Event Player).lIllIIlIllllIlIIIllIIllIlI));
        Else If(Compare((Event Player).IlllIlIIIIIlIlllIIIIlIllll, <, 1));
            Call Subroutine(IlllIIIIlIIlIIIIllllllllIl);
        Else;
            Modify Player Variable(Event Player, IlIIllllIlllIllIIIllIlIlll, Subtract, (Event Player).lIllIIlIllllIlIIIllIIllIlI);
            Call Subroutine(IIlllllIllIIlIIIIIlllIlIIl);
            Call Subroutine(IIIllIlIIllIllllIIIlllIlIl);
        End;
    }
}

rule ("llIlIIIIlIIIIIIllIllIlIIll") {
    event {
        Subroutine;
        IllIlIlIIIlIIIlIlIlIlIlIll;
    }
    actions {
        If((Event Player).IIllIIlIIllIIlIIlIlllIIllI);
            Small Message(Event Player, Custom String("Super Novice items cannot be imbued"));
            Abort;
        End;
        If(And(Not((Event Player).IIlIIIIllllIllIIlIIIIlIlll), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 17)), 100), >, 25)));
            Small Message(Event Player, Custom String("Future Super Novice items cannot be imbued (Unequip to turn into upgradable common item)"));
            Abort;
        End;
        Set Global Variable At Index(llIlIIlIlIlIllIllllIllIllI, 7, Round To Integer(Multiply((Event Player).lIllIIIIlIIlllIllIllIIIlII, If-Then-Else(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 6), 9, Multiply(Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 2), 3))), Down));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, (Event Player).lllllIIlllIlllllIIlIIlllII);
        Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Is True For Any(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 6), 5), Compare(Current Array Element, <, Min(50, (Event Player).IIIlIlIllIlllIllllIlIllIll))));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Is True For Any(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 14), Add(2, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 13)), ==, True))), Compare(Current Array Element, <, Round To Integer(Multiply((Event Player).lIllIIIIlIIlllIllIllIIIlII, 9), Down))));
        If(And(And(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 4), Not(Global.IIIIlllIIIIlIIIlIIIIllllIl)), Not(Global.lIIIIIllllIlIIIIlIIIlIIIll)));
            If(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 60));
                Small Message(Event Player, Custom String("Item cannot be imbued anymore"));
                Abort;
            End;
            Big Message(Event Player, Custom String("Item cannot be imbued anymore\r\n(Current Stat Limit: {0}\r\nCurrent SA Rank Limit: {1})", Min(50, (Event Player).IIIlIlIllIlllIllllIlIllIll), Round To Integer(Multiply((Event Player).lIllIIIIlIIlllIllIllIIIlII, 9), Down)));
            Abort;
        End;
        Call Subroutine(IlIIlllIllIIllIIIIlIlIllll);
        If(Compare((Event Player).IlIIllllIlllIllIIIllIlIlll, <, (Event Player).lIlIlIIIIllIlllIIIIIlIlIll));
            Small Message(Event Player, Custom String("Not enough gold to imbue (cost: {0})", (Event Player).lIlIlIIIIllIlllIIIIIlIlIll));
            Abort;
        End;
        If(Compare((Event Player).IlllIlIIIIIlIlllIIIIlIllll, <, (Event Player).IIllIIllIIIIIlIlIIllIllllI));
            Call Subroutine(IlllIIIIlIIlIIIIllllllllIl);
            Abort;
        End;
        Call Subroutine(IIIllIlIIllIllllIIIlllIlIl);
        Modify Player Variable(Event Player, IlIIllllIlllIllIIIllIlIlll, Subtract, (Event Player).lIlIlIIIIllIlllIIIIIlIlIll);
        Set Player Variable(Event Player, IIllIIlIIllIIlIIlIlllIIllI, False);
        Set Player Variable(Event Player, IIIlIllIlIIllIlIlllllIlIll, Empty Array);
        Big Message(Event Player, Custom String("Item imbued"));
        If(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, <, 4));
            Set Player Variable(Event Player, lIIllllIlIIIllIIllllIIIlll, Hero Of(Event Player));
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Add(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(1, Global.lIIlllIllllIlIIIIlIllIIIlI)), 2));
            Call Subroutine(lIIlllIIlIIlIlIIllIllIIIIl);
            Call Subroutine(IIlIIIlllIIIllIlllIllllIII);
            Call Subroutine(lIIIIlIllIIIIlIIIIllIIlIlI);
            Call Subroutine(lllIllIlIIllllIlIlIlllllll);
            Call Subroutine(IIIlIIllllIlIlIlIlIlIlIIlI);
            Set Ability Charge(Event Player, Button(Ability 1), 0);
            Set Ability Charge(Event Player, Button(Ability 2), 0);
            Call Subroutine(lllllIIIllIlIIIlIlIllllllI);
            Abort;
        End;
        Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Empty Array);
        If(Global.IIIIlllIIIIlIIIlIIIIllllIl);
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Array(1, 1, 1));
        End;
        If(Global.lIIIIIllllIlIIIIlIIIlIIIll);
            Modify Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Append To Array, 0);
        End;
        Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Random Value In Array(Global.IlllllIIlIIllIlIlIIIlIlIlI));
        If(Global.IlllllIIlIIllIlIlIIIlIlIlI);
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Random Value In Array(Filtered Array(Array(6, 7, 8, 9, 10), And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Current Array Element)), <, 50), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Current Array Element)), <, (Event Player).IIIlIlIllIlllIllllIlIllIll)))));
            Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 5), Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 6)));
            Small Message(Event Player, Custom String("Gained +1 {0}", (Event Player).lIlIlIIIIllIlllIIIIIlIlIll));
            If(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, <, 7));
                Modify Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 18), Add, Add(10, Multiply(10, Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 5))));
            End;
        Else;
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Random Value In Array(Filtered Array(Array(14, 15, 16), And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Current Array Element)), <, Round To Integer(Multiply((Event Player).lIllIIIIlIIlllIllIllIIIlII, 9), Down)), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Subtract(Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Current Array Element), 3)), >, 0)))));
            Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 6), Subtract(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Subtract(Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.IlllllIIlIIllIlIlIIIlIlIlI), 3)), 1)));
            Small Message(Event Player, Custom String("Gained +1 rank in {0}", (Event Player).lIlIlIIIIllIlllIIIIIlIlIll));
            If(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, <, 7));
                Modify Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 18), Add, Add(40, Multiply(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 5), 40)));
            End;
        End;
        Modify Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.IlllllIIlIIllIlIlIIIlIlIlI), Add, 1);
        Call Subroutine(lIIIIlIllIIIIlIIIIllIIlIlI);
        Call Subroutine(lllIllIlIIllllIlIlIlllllll);
        Abort If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), <, 2));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Imbue: +1 {0}", (Event Player).lIlIlIIIIllIlllIIIIIlIlIll));
        Call Subroutine(llIlllIllIIllllIIIIIllIlII);
    }
}

rule ("lIlIlIIllllllllIIllIllIIII") {
    event {
        Subroutine;
        lIIIIlIllIIIIlIIIIllIIlIlI;
    }
    actions {
        Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, (Event Player).lllllIIlllIlllllIIlIIlllII);
        Set Player Variable(Event Player, IIlIIIIllllIllIIlIIIIlIlll, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 1)));
        If(And(And(And(Not((Event Player).IIlIIIIllllIllIIlIIIIlIlll), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 60)), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 17)), 100), >=, 26)), Not((Event Player).IIllIIlIIllIIlIIlIlllIIllI)));
            Set Player Variable(Event Player, IIllIIlIIllIIlIIlIlllIIllI, True);
            If(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 18)), <, 2000));
                Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Add((Event Player).IIlIIIIllllIllIIlIIIIlIlll, 1));
                Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, Global.lIlIlIIlIIIIlIllIIllllllll);
                Call Subroutine(lIllIlIlIllIIIIIlIlllIllIl);
                Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, (Event Player).lllllIIlllIlllllIIlIIlllII);
                Modify Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 17), Add, 100);
            End;
        End;
        Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 0, Value In Array(First Of(Global.IIlIlllIlIIIIllIIlIlIlIlll), Add(Add((Event Player).IIlIIIIllllIllIIlIIIIlIlll, Compare((Event Player).IIllIIlIIllIIlIIlIlllIIllI, ==, False)), Multiply(-3, And(Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 17)), 100), >=, 31), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 17)), 100), <=, 62))))));
        Set Player Variable(Event Player, IIIllIlIIIIlIlllIlllIlIIlI, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Global.lIlIlIIlIIIIlIllIIllllllll));
        If(Not(Is Duplicating(Event Player)));
            Start Forcing Player To Be Hero(Event Player, (Event Player).IIIllIlIIIIlIlllIlllIlIIlI);
        End;
        If(And(Not((Event Player).IIllIIlIIllIIlIIlIlllIIllI), Not((Event Player).llllIIlIlllllllIIllIlIllII)));
            If(And(Array Contains(Array(Hero(Mei), Hero(Moira), Hero(Kiriko), Hero(Lifeweaver)), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 2)), 2), ==, False)));
                Set Primary Fire Enabled(Event Player, False);
                Set Secondary Fire Enabled(Event Player, True);
            Else;
                Set Primary Fire Enabled(Event Player, True);
                Set Secondary Fire Enabled(Event Player, Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 2)), 2), ==, True));
            End;
            Set Ability 1 Enabled(Event Player, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 3)), ==, True));
            Set Ability 2 Enabled(Event Player, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 4)), ==, True));
            If(Or(Compare(Hero Of(Event Player), !=, Hero(D.Va)), Not(Is In Alternate Form(Event Player))));
                Set Ultimate Ability Enabled(Event Player, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 5)), ==, True));
            End;
        Else;
            Set Primary Fire Enabled(Event Player, True);
            Set Secondary Fire Enabled(Event Player, True);
            Set Ability 1 Enabled(Event Player, True);
            Set Ability 2 Enabled(Event Player, True);
            Set Ultimate Ability Enabled(Event Player, True);
        End;
        Set Player Variable(Event Player, llIlIIIlIlIIlIIIllllIlllII, Min((Event Player).IIIlIlIllIlllIllllIlIllIll, 60));
        Set Global Variable(IIIllIIIlllIllIIlIIIllllII, (Event Player).IIlIIllIIIllIllllIIIIlIIll);
        Call Subroutine(lIIIIllIIlIllIlllllIlllIII);
        Set Player Variable(Event Player, llllllIllIIlllllIlIIlIIllI, Global.IlIllIIIlIIIIIIllIIIIIIIIl);
        Set Player Variable At Index(Event Player, IIIIIIIIlIIlIIIIIIIllIIIII, 0, False);
        Set Player Variable At Index(Event Player, IIIIIIIIlIIlIIIIIIIllIIIII, 1, 1);
        If(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, ==, 7));
            If(Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 17)), 100), >=, 30));
                Set Player Variable At Index(Event Player, IIIIIIIIlIIlIIIIIIIllIIIII, 1, 2.5);
            Else;
                Set Player Variable At Index(Event Player, IIIIIIIIlIIlIIIIIIIllIIIII, 0, True);
            End;
        End;
        Set Player Variable At Index(Event Player, IlIlIlIlIIIlIIllIIlllllIIl, 0, Subtract(1, Multiply(Multiply(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <=, 59), Subtract(0.6, Multiply(0.01, (Event Player).llIlIIIlIlIIlIIIllllIlllII))), And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 13)), >=, 7), Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, <, 5)))));
        Call Subroutine(IlllIIlIllIlIIIIIlIIIllIII);
        Call Subroutine(lIIlIIIllllllIlIIllIlIlllI);
        Set Max Health(Event Player, Multiply(Multiply(Add(Add(80, (Event Player).IIIlIlIllIlllIllllIlIllIll), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 8))), Add(Add(Add(Add(1, Multiply((Event Player).IIllIIlIIllIIlIIlIlllIIllI, 0.5)), Multiply(0.125, Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 7))), Multiply(0.25, (Event Player).IIlIIllIIIllIllllIIIIlIIll)), Multiply(0.004, Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 3)))), Add(1, Multiply(Add(Multiply(0.15, Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 9)), Multiply(0.15, Compare(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 7), ==, 3))), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1)))));
        Set Healing Received(Event Player, Multiply(Add(Add(80, (Event Player).IIIlIlIllIlllIllllIlIllIll), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 8))), Add(1, Multiply(Multiply(0.15, Compare(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 7), ==, 1)), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1)))));
        Call Subroutine(llIIlllllIlIIIIIIIllIIIlII);
        Call Subroutine(lIllIIIIIIllllIIlllIllllIl);
        Set Player Variable(Event Player, IIIlIlIllIIIlIIllllIIllIII, Subtract(Subtract(1, Multiply(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 10)), 0.005)), Multiply(0.25, And(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 5), Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, <=, 6)))));
        Call Subroutine(lIllIIlIIIlIllllIlIlIIIlIl);
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 18)));
        Set Player Variable(Event Player, lIlIIllIlllIIlIIlIlIIlIlIl, Custom String("{0} {1}{2}", Hero Icon String((Event Player).IIIllIlIIIIlIlllIlllIlIIlI), (Event Player).IllIlIllIIIIlIIllIllIllIlI, Custom String("{0}{1}{2}", If-Then-Else(And(And(Not((Event Player).IIlIIIIllllIllIIlIIIIlIlll), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 17)), 100), >=, 26)), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <=, 59)), Custom String("*"), Custom String("")), Value In Array(Global.lIlIIIlIlIIllIIIIllIlIlIlI, (Event Player).IIIIlIIIIllllIlllIIIlllIIl), Value In Array(Global.llllIIlIlllIIlllllIIIlIlll, (Event Player).IIlIIllIIIllIllllIIIIlIIll))));
        Set Player Variable At Index(Event Player, IIllIlIIIIIIllIIIllIlIllII, 2, Add(Total Time Elapsed, 0.1));
    }
}

rule ("lllIIlIlIlIIllIIlIlIIIllII") {
    event {
        Subroutine;
        IlllIIlIllIlIIIIIlIIIllIII;
    }
    actions {
        Set Player Variable At Index(Event Player, IIlllllIIlIIlIIIIIIIIlIlII, 3, Add(1, Multiply(Add(Multiply(0.05, Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 5)), Multiply(0.05, Compare(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 7), ==, 2))), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1))));
        Set Player Variable At Index(Event Player, IIlllllIIlIIlIIIIIIIIlIlII, 0, Multiply(Multiply(Multiply(Add(84.264, Multiply(5.786, Add((Event Player).IIIlIlIllIlllIllllIlIllIll, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 6))))), Add(Add(Add(Add(1, Multiply((Event Player).IIllIIlIIllIIlIIlIlllIIllI, 2.25)), Multiply(Multiply(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 5), Value In Array(Array(0.5, 0.75, 0.25), Subtract((Event Player).IIlIIIIllllIllIIlIIIIlIlll, 5))), Add(1, And(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, ==, 7), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 17)), 100), >=, 30))))), Multiply(Add(0.5, Multiply(0.15, (Event Player).IIllIIlIIllIIlIIlIlllIIllI)), (Event Player).IIlIIllIIIllIllllIIIIlIIll)), Multiply(Multiply(Not((Event Player).IIllIIlIIllIIlIIlIlllIIllI), 0.005), (Event Player).IIIlIlIllIlllIllllIlIllIll))), Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 3)), 0.01));
    }
}

rule ("IlIlIlIlIllllIIlIIIlllllIl") {
    event {
        Subroutine;
        lIllIIlIIIlIllllIlIlIIIlIl;
    }
    actions {
        Set Player Variable At Index(Event Player, IIlllllIIlIIlIIIIIIIIlIlII, 1, Multiply(Multiply(Add(Add(Add(50, Multiply(25, (Event Player).IIllIIlIIllIIlIIlIlllIIllI)), Multiply(6.25, Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 7))), Multiply(12.5, (Event Player).IIlIIllIIIllIllllIIIIlIIll)), Add(1, Multiply(Multiply(0.15, Compare(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 7), ==, 1)), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1)))), If-Then-Else(Or(Compare(Hero Of(Event Player), ==, Hero(Reaper)), Compare(Hero Being Duplicated(Event Player), ==, Hero(Reaper))), Divide(100, First Of((Event Player).IIlllllIIlIIlIIIIIIIIlIlII)), 1)));
    }
}

rule ("IlIIlIlIlIllIlllIIlllIllIl") {
    event {
        Subroutine;
        lIIlIIIllllllIlIIllIlIlllI;
    }
    actions {
        Set Damage Received(Event Player, Subtract(600, Multiply(5, Add(Divide((Event Player).llIlIIIlIlIIlIIIllllIlllII, 1.2), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 7))))));
    }
}

rule ("IIllIIlllIIlIllllIlIIIlIII") {
    event {
        Subroutine;
        llIIlllllIlIIIIIIIllIIIlII;
    }
    actions {
        Set Move Speed(Event Player, Multiply(Add(Add(80, Multiply(0.333, (Event Player).IIIlIlIllIlllIllllIlIllIll)), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 9))), Add(1, Multiply(Multiply(0.05, Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 3)), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1)))));
    }
}

rule ("lIllIllIIIlllllllIIIllIlll") {
    event {
        Subroutine;
        llIlIIllIIllIIllllIlIIlIlI;
    }
    actions {
        Set Move Speed(Event Player, Multiply((Event Player).IllIlIIlIIlIlIlIllIllllllI, Subtract(1, Value In Array((Event Player).lllllIIlllIlllllIIlIIlllII, 3))));
    }
}

rule ("IIIlllIllIIlIllIllIlIlIlII") {
    event {
        Subroutine;
        IllIIllIIIIIllIIIIllIIIlII;
    }
    actions {
        If((Event Player).lIlIIlIlIlIIIlIlllllIlIIII);
            If(Compare((Event Player).IlIlIIIlIIllIIIIllIlIIllll, >, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII));
                Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, 1);
            End;
            Set Player Variable(Event Player, IlIllIIlllllllllIIIIllllll, Multiply(Subtract((Event Player).IlIlIIIlIIllIIIIllIlIIllll, 1), 19));
            Modify Player Variable(Event Player, IlIllIIlllllllllIIIIllllll, Add, Multiply(Compare((Event Player).IlIllIIlllllllllIIIIllllll, >=, (Event Player).lllllIIlllIlllllIIlIIlllII), 19));
            Modify Player Variable(Event Player, IlIllIIlllllllllIIIIllllll, Multiply, Compare((Event Player).IlIllIIlllllllllIIIIllllll, <=, Multiply((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, 19)));
            Set Player Variable(Event Player, lIIIIIllIlIIlIlIIIlIlIIlII, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 1)));
            Set Player Variable(Event Player, lIIlIIlIllIIllIIlIllIllIIl, Value In Array(Global.llllIIlIlllIIlllllIIIlIlll, Multiply(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 2)), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 5)), >=, 3))));
            Set Player Variable(Event Player, IlIIIIIlIIIllllIllIlIIIlll, Value In Array(Global.lIlIIIlIlIIllIIIIllIlIlIlI, Multiply(Add(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 4)), 1), And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 5)), >=, 3), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(1, (Event Player).IlIllIIlllllllllIIIIllllll)), ==, 6)))));
            Set Player Variable(Event Player, lllIlllIIllIlIIIlllIIlIllI, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, (Event Player).IlIllIIlllllllllIIIIllllll));
            Set Player Variable(Event Player, lIIlIIIIIIIlIIlIIlIIIlllIl, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 18)));
            Set Player Variable(Event Player, IIIIIlllIIIlllIIIIIIIIIIII, Custom String("{0} {1}{2}", Hero Icon String((Event Player).lllIlllIIllIlIIIlllIIlIllI), (Event Player).lIIlIIIIIIIlIIlIIlIIIlllIl, Custom String("{0}{1}{2}", If-Then-Else(And(And(Not((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 17)), 100), >=, 26)), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <=, 59)), Custom String("*"), Custom String("")), (Event Player).IlIIIIIlIIIllllIllIlIIIlll, (Event Player).lIIlIIlIllIIllIIlIllIllIIl)));
            Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 1, Value In Array(First Of(Global.IIlIlllIlIIIIllIIlIlIlIlll), Add(Add((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII, Or(Compare((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII, ==, True), Compare((Event Player).lIIlIIIIIIIlIIlIIlIIIlllIl, <, 1000))), Multiply(-3, And(Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 17)), 100), >=, 31), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 17)), 100), <=, 62))))));
            Abort;
        End;
        Set Player Variable(Event Player, lllllIIlllIlllllIIlIIlllII, 0);
        Set Player Variable(Event Player, IIIIIlllIIIlllIIIIIIIIIIII, Custom String("Empty"));
        Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 1, Color(White));
    }
}

rule ("lIIIIIIllIIIIllIlllIIlllII") {
    event {
        Subroutine;
        lllllIIIllIlIIIlIlIllllllI;
    }
    actions {
        Set Player Variable At Index(Event Player, IIIIIIlllllllIlIIIIIlllIlI, 1, Custom String("{0}{1}", If-Then-Else(And(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 6), Compare(First Of((Event Player).IIIIIIlllllllIlIIIIIlllIlI), <=, Total Time Elapsed)), Custom String("{0} ", Icon String(Spiral)), Custom String("")), If-Then-Else(And(Compare((Event Player).IIIIlIIIIllllIlllIIIlllIIl, ==, 5), Compare((Event Player).lIIIlIlIIIIIIllllIlIlIlllI, <=, Total Time Elapsed)), Custom String("{0} ", Ability Icon String(Hero(Baptiste), Button(Ability 2))), Custom String(""))));
    }
}

rule ("IIllIIIIlIllIIIlIlllIlIlIl") {
    event {
        Subroutine;
        lllIlllllIlIIIllIlIlIIIlIl;
    }
    actions {
        Set Global Variable(IlIIlIIIlllIIlIllIIIIIllIl, Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, (Event Player).lllllIIlllIlllllIIlIIlllII, 19));
        Set Global Variable(IllIlIllIllIllIIlIIIIllIIl, Add(Total Time Elapsed, 2));
        Set Global Variable(IIIlllllIIIllllllIIllIlIIl, Add(Total Time Elapsed, 5));
        Set Player Variable(Event Player, IlIllIlIlIlllIIlIllllllllI, Add(Total Time Elapsed, Multiply(2, Number Of Players(Team 2))));
        If((Event Player).IlIIlllllIIlIIllIIlllIIIll);
            Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, 0);
        Else;
            Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, (Event Player).IlIIllllIlllIllIIIllIlIlll);
            For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, Add((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, 1), 1);
                If(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Multiply(Global.lIIlllIllllIlIIIIlIllIIIlI, 19), 17)), <, 100));
                    Modify Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Add, Round To Integer(Multiply(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Multiply(Global.lIIlllIllllIlIIIIlIllIIIlI, 19), 18)), 0.125), Up));
                End;
            End;
            Modify Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Min, Global.IIlllIIIIIllIlIllIlIlllIII);
            Set Player Variable(Event Player, IIllIIllIIIIIlIlIIllIllllI, (Event Player).IlllIlIIIIIlIlllIIIIlIllll);
            Call Subroutine(IIIllIlIIllIllllIIIlllIlIl);
        End;
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 40, Subtract(93, Index Of Array Value(All Heroes, Hero Of(Event Player))));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 40);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 6);
        Call Subroutine(llIlIlIlIllIlIIIlIlllllIII);
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 41, Add(Subtract(19, Add(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 6), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 7))), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 9)));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 41);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 2);
        Call Subroutine(llIlIlIlIllIlIIIlIlllllIII);
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 42, Add(Add(Add(Add(Add(7, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 6)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 7)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 2)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 3)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 7)));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 42);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 14);
        Call Subroutine(llIlIlIlIllIlIIIlIlllllIII);
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 43, Subtract(99, Add(Add(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 14), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 15)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 6))));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 43);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 0);
        Call Subroutine(llIlIlIlIllIlIIIlIlllllIII);
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 10, Modulo(Add(6, Round To Integer(Multiply(Global.IIIIlllIIIIlIIIlIIIIllllIl, 0.001), Down)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 11, Modulo(Add(7, Modulo(Global.IIIIlllIIIIlIIIlIIIIllllIl, 10)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 16, Modulo(Add(3, Modulo(Round To Integer(Multiply(Global.IIIIlllIIIIlIIIlIIIIllllIl, 0.01), Down), 10)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 19, Modulo(Add(1, Modulo(Round To Integer(Multiply(Global.IIIIlllIIIIlIIIlIIIIllllIl, 0.1), Down), 10)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 44, Add(Add(Add(5, First Of(Global.lllIIllllIlIIlllIlIIIIlIIl)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 1)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 10)));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 44);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 22);
        Call Subroutine(llIlIlIlIllIlIIIlIlllllIII);
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 45, Subtract(96, Add(Add(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 22), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 23)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 8))));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 45);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 4);
        Call Subroutine(llIlIlIlIllIlIIIlIlllllIII);
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 8, Modulo(Add(Add(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 1), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 3)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 1)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 9, Modulo(Add((Event Player).IIlIllllllIIlIIIllllIIllII, First Of(Global.lllIIllllIlIIlllIlIIIIlIIl)), 10));
        If((Event Player).llllIIlIlllllllIIllIlIllII);
            Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 18, Modulo(Add(Add(Add(9, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 8)), (Event Player).llllIIlIlllllllIIllIlIllII), 2), 10));
            Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 17, Modulo(Add(Add(6, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 11)), (Event Player).IIlIIllIIIllIllllIIIIlIIll), 10));
            Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 20, Modulo(Add(Add(2, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 14)), (Event Player).IllIIIIlIlIIlIIllIllIIIlll), 10));
            Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 21, Modulo(Add(Add(8, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 15)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 4)), 10));
        Else;
            Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 18, Modulo(Add(Add(9, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 8)), Compare(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 5), ==, True)), 10));
            Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 17, Modulo(Add(Add(6, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 11)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 2)), 10));
            Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 20, Modulo(Add(Add(2, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 14)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 3)), 10));
            Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 21, Modulo(Add(Add(8, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 15)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 4)), 10));
        End;
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 24, Modulo(Add(Multiply(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 20), 4), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 11)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 25, Modulo(Add(Multiply(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 21), 2), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 14)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 46, Subtract(97, Add(Add(Add(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 24), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 25)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 18)), Modulo(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 17), 100))));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 46);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 28);
        Call Subroutine(llIlIlIlIllIlIIIlIlllllIII);
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 12, Modulo(Add(Multiply(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 9), 2), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 13)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 13, Modulo(Add(Multiply(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 8), 3), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 16)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 26, Modulo(Add(Multiply(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 17), 3), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 12)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 27, Modulo(Add(Multiply(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 16), 3), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 15)), 10));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 47, Modulo(Add(Add(Add(Add(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 27), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 13)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 6)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 7)), Modulo((Event Player).IIIlIlIllIlllIllllIlIllIll, 100)), 100));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 47);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 30);
        Call Subroutine(llIlIlIlIllIlIIIlIlllllIII);
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 48, Modulo(Add(Add(Add(Add(Add(Add(Add(11, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 18)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 19)), Round To Integer((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, Down)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 22)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 23)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 30)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 31)), 100));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 48);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 32);
        Call Subroutine(llIlIlIlIllIlIIIlIlllllIII);
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 49, Modulo(Add(Add(Add(Add(Add(Add(Add(Add(67, First Of(Global.lllIIllllIlIIlllIlIIIIlIIl)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 1)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 4)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 5)), Min(99, Round To Integer(Multiply(Subtract((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, Round To Integer((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, Down)), 100), To Nearest))), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 13)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 17)), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, 20)), 100));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 49);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 34);
        Call Subroutine(llIlIlIlIllIlIIIlIlllllIII);
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 202);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 18, 1);
            Modify Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Add, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, Global.lIIlllIllllIlIIIIlIllIIIlI));
        End;
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 36, Modulo(Global.lIIIIIllllIlIIIIlIIIlIIIll, 10));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 606);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 18, 36, 1);
            Modify Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Subtract, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, Global.lIIlllIllllIlIIIIlIllIIIlI));
        End;
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 37, Modulo(Global.lIIIIIllllIlIIIIlIIIlIIIll, 10));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 606);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 36, 2);
            Modify Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Add, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, Global.lIIlllIllllIlIIIIlIllIIIlI));
        End;
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 38, Modulo(Global.lIIIIIllllIlIIIIlIIIlIIIll, 10));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 707);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 1, 36, 2);
            Modify Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Subtract, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, Global.lIIlllIllllIlIIIIlIllIIIlI));
        End;
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, 39, Modulo(Global.lIIIIIllllIlIIIIlIIIlIIIll, 10));
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 36, 1);
            Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, Global.lIIlllIllllIlIIIIlIllIIIlI, Modulo(Add(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, Global.lIIlllIllllIlIIIIlIllIIIlI), Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, Add(36, Modulo(Global.lIIlllIllllIlIIIIlIllIIIlI, 4)))), 10));
        End;
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, (Event Player).IIIlIlIllIlllIllllIlIllIll);
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 5.25));
        Set Global Variable(IllIIIlIllllllIllIlllIlIll, Empty Array);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 40, 1);
            If(And(Global.lIIlllIllllIlIIIIlIllIIIlI, Not(Modulo(Global.lIIlllIllllIlIIIIlIllIIIlI, 4))));
                Set Global Variable(IllIIIlIllllllIllIlllIlIll, Custom String("{0} - {1}", Global.IllIIIlIllllllIllIlllIlIll, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, Global.lIIlllIllllIlIIIIlIllIIIlI)));
            Else;
                Set Global Variable(IllIIIlIllllllIllIlllIlIll, Custom String("{0}{1}", Global.IllIIIlIllllllIllIlllIlIll, Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, Global.lIIlllIllllIlIIIIlIllIIIlI)));
            End;
        End;
        If(Not(Array Contains(Global.IIllIllIllllIIlIlIlIIIIlIl, Global.IllIIIlIllllllIllIlllIlIll)));
            Modify Global Variable(IIllIllIllllIIlIlIlIIIIlIl, Append To Array, Global.IllIIIlIllllllIllIlllIlIll);
            Modify Global Variable(lllllIIIlIlIlllllIlllIlllI, Append To Array, Custom String("{0}", Event Player));
            Call Subroutine(llllIlIIlIIIIlIllIlIlIIlll);
        End;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, (Event Player).lllllIIlllIlllllIIlIIlllII);
        Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, (Event Player).llllllIllIIlllllIlIIlIIllI);
        Call Subroutine(lIlIlllllIIIlllllIIIllIIII);
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 6, Custom String("{0}\r\n{1}\r\n\r\n{2}", Custom String("Level {0} {1}/ Soul Stones: {2}", (Event Player).lllIIlllIIlIIlllIIIIlllIlI, If-Then-Else(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <, 120), Custom String("/ EXP {0}% ", (Event Player).lllIIIIIIIlllIIlIIIlllIIIl), Custom String("")), Custom String("{0} / Gold: {1} (v7.5.1.8)\r\n\r\nIncluded item: {2}", (Event Player).IIlIllllllIIlIIIllllIIllII, Global.IIIIlllIIIIlIIIlIIIIllllIl, Custom String("{0} {1}{2}", Value In Array(Global.lIIlIllllllIlllIlIIlIIllll, (Event Player).IIlIIIIllllIllIIlIIIIlIlll), (Event Player).lIlIIllIlllIIlIIlIlIIlIlIl, If-Then-Else(And(And((Event Player).llllIIlIlllllllIIllIlIllII, Compare((Event Player).IIlIIllIIIllIllllIIIIlIIll, <=, 4)), Or(Not((Event Player).IIlIIIIllllIllIIlIIIIlIlll), Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 4))), Custom String("\r\nArcane Crystal Fragments: {0}", (Event Player).IllIIIIlIlIIlIIllIllIIIlll), Custom String(""))))), Custom String("Stats: {0}\r\nSpecial Abilities: {1}\r\nVisual Effect: {2}", Custom String("{0}/{1}/{2}", Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 6), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 7), Custom String("{0}/{1}/{2}", Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 8), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 9), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 10))), Custom String("{0}/{1}/{2}", Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 1), Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 2), Custom String("{0}/{1}/{2}", Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 3), Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 4), Custom String("{0}/{1}", Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 5), Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 6)))), Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 8)), Global.IllIIIlIllllllIllIlllIlIll));
        If((Event Player).llIIlllIllIIIllIllIIIIIIll);
            Call Subroutine(IIllIIllllIIIlIlIIllIIlIII);
            Create HUD Text(Event Player, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 6), Null, Null, Top, 1, Color(White), Null, Null, None, Visible Never);
            Set Player Variable(Event Player, llllllIlIIIIllIllIlIIIllII, Last Text ID);
        Else;
            Set Objective Description(Event Player, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 6), String);
            Enable Game Mode HUD(Event Player);
        End;
        Set Global Variable(IllIIIlIllllllIllIlllIlIll, Empty Array);
        Set Global Variable(lllIIllllIlIIlllIlIIIIlIIl, Empty Array);
    }
}

rule ("IlllllIIlllIIllIIIllllIIll") {
    event {
        Subroutine;
        llllIllIlIIIIIllIlIIIIIIIl;
    }
    actions {
        Abort If(Or(Not(Global.IllIIlIllllIIIllIlllIIlIIl), Compare(Global.IllIIlIllllIIIllIlllIIlIIl, >, 2)));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Add(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 0.013), 0.22));
        Skip(Multiply(Subtract(Global.IlIIlIIIlllIIlIllIIIIIllIl, 1), 2));
        Call Subroutine(lIIIllIIIlllllIllIIlllIIll);
        Abort;
        Call Subroutine(llllIlIllIlllIllllIllIIllI);
        Abort;
        Call Subroutine(IlllllIIlIIIlIlIIIlllIllII);
        Abort;
        Call Subroutine(lIIlllIIlIlllIlIIIIIIIIIII);
        Abort;
        Call Subroutine(IllIlIlIIIlIIIlIlIlIlIlIll);
        Abort;
        Call Subroutine(IlllIlIIlIllllIlllIIlIlllI);
        Abort;
        Call Subroutine(lllIIllIIIlIIllIIllIlllIlI);
        Abort;
        Call Subroutine(IIIlIIIIllllIllllIlIIlIlll);
        Abort;
        Call Subroutine(IIllllIlIIIllllllIlIIIlllI);
        Abort;
        Call Subroutine(llIllIIIIlIIIIlIlIlIIllIll);
    }
}

rule ("IIlllllIIllIIlllIlllIIIIIl") {
    event {
        Subroutine;
        IllIIIlIIIIlllIllIlIlIlllI;
    }
    actions {
        Set Player Variable At Index(Event Player, lllIIlllIIlIIlllIIIIlllIlI, 6, Add(Total Time Elapsed, 1));
        Set Global Variable(IlIIlIIIlllIIlIllIIIIIllIl, (Event Player).llIIllllIIlIIIIIIIlIlIlllI);
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Empty Array);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 40, 1);
            If(And(Global.lIIlllIllllIlIIIIlIllIIIlI, Not(Modulo(Global.lIIlllIllllIlIIIIlIllIIIlI, 4))));
                Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Custom String("{0}-{1}", Global.llIlIIlIlIlIllIllllIllIllI, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, Global.lIIlllIllllIlIIIIlIllIIIlI)));
            Else;
                Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Custom String("{0}{1}", Global.llIlIIlIlIlIllIllllIllIllI, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, Global.lIIlllIllllIlIIIIlIllIIIlI)));
            End;
        End;
        Set Global Variable(IIllllIlIIlIIIllIllIIIIlII, Compare(Global.llIlIIlIlIlIllIllllIllIllI, ==, Custom String("9992-9886-9751-8510-3170-4209-6683-4712-4994-0894")));
        If(Not(Global.IIllllIlIIlIIIllIllIIIIlII));
            For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, Count Of(Global.IIllIllIllllIIlIlIlIIIIlIl), 1);
                If(And(Compare(Value In Array(Global.IIllIllIllllIIlIlIlIIIIlIl, Global.lIIlllIllllIlIIIIlIllIIIlI), ==, Global.llIlIIlIlIlIllIllllIllIllI), Compare(Value In Array(Global.lllllIIIlIlIlllllIlllIlllI, Global.lIIlllIllllIlIIIIlIllIIIlI), !=, Custom String("{0}", Event Player))));
                    Small Message(Event Player, Custom String("Save code already in use"));
                    Abort;
                End;
            End;
        End;
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 36, 1);
            Set Global Variable At Index(IlIIlIIIlllIIlIllIIIIIllIl, Global.lIIlllIllllIlIIIIlIllIIIlI, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, Global.lIIlllIllllIlIIIIlIllIIIlI), 10), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, Add(36, Modulo(Global.lIIlllIllllIlIIIIlIllIIIlI, 4)))), 10));
        End;
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 202);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 18, 1);
            Modify Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Add, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, Global.lIIlllIllllIlIIIIlIllIIIlI));
        End;
        Set Global Variable At Index(IlIIlIIIlllIIlIllIIIIIllIl, 40, Modulo(Global.lIIIIIllllIlIIIIlIIIlIIIll, 10));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 606);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 18, 36, 1);
            Modify Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Subtract, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, Global.lIIlllIllllIlIIIIlIllIIIlI));
        End;
        Set Global Variable At Index(IlIIlIIIlllIIlIllIIIIIllIl, 41, Modulo(Global.lIIIIIllllIlIIIIlIIIlIIIll, 10));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 606);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 36, 2);
            Modify Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Add, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, Global.lIIlllIllllIlIIIIlIllIIIlI));
        End;
        Set Global Variable At Index(IlIIlIIIlllIIlIllIIIIIllIl, 42, Modulo(Global.lIIIIIllllIlIIIIlIIIlIIIll, 10));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, 707);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 1, 36, 2);
            Modify Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Subtract, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, Global.lIIlllIllllIlIIIIlIllIIIlI));
        End;
        Set Global Variable At Index(IlIIlIIIlllIIlIllIIIIIllIl, 43, Modulo(Global.lIIIIIllllIlIIIIlIIIlIIIll, 10));
        If(Or(Or(Or(Compare(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 36), !=, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 40)), Compare(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 37), !=, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 41))), Compare(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 38), !=, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 42))), Compare(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 39), !=, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 43))));
            Big Message(Event Player, Custom String("Invalid code"));
            Abort;
        End;
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, Empty Array);
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 2));
        Call Subroutine(IlIllIllIllIlIlIIlIIIlllIl);
        Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, (Event Player).IIIlIlIllIlllIllllIlIllIll);
        Set Global Variable(IIllIIIlIllIlIlllIlllIlllI, (Event Player).llllIIlIlllllllIIllIlIllII);
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, (Event Player).IIlIlIlIIlIIIllIllIlIIllll);
        Set Player Variable(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Empty Array);
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 18, False);
        Modify Player Variable(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Append To Array, Global.lIIIIIllllIlIIIIlIIIlIIIll);
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 0, Value In Array(All Heroes, Subtract(93, Add(Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 6), 10), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 7)))));
        Set Player Variable(Event Player, IIIlIlIllIlllIllllIlIllIll, Modulo(Subtract(Add(Add(Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 30), 10), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 31)), 200), Add(Add(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 27), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 13)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 6)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 7))), 100));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 1, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 8), 90), Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 1), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 3))), 10));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 5, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 18), 90), Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 8), 9)), 10));
        If(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 5), >, 2));
            Set Player Variable(Event Player, llllIIlIlllllllIIllIlIllII, Subtract(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 5), 2));
            Modify Player Variable(Event Player, IIIlIlIllIlllIllllIlIllIll, Add, Multiply((Event Player).llllIIlIlllllllIIllIlIllII, 100));
        Else;
            Set Player Variable(Event Player, llllIIlIlllllllIIllIlIllII, False);
        End;
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 2, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 17), 90), Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 11), 6)), 10));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 3, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 20), 90), Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 14), 2)), 10));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 4, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 21), 90), Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 15), 8)), 10));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 6, Subtract(99, Add(Add(Add(Multiply(First Of(Global.IlIIlIIIlllIIlIllIIIIIllIl), 10), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 1)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 14)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 15))));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 7, Subtract(Add(Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 14), 10), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 15)), Add(Add(Add(Add(7, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 6)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 7)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 2)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 3))));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 8, Subtract(96, Add(Add(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 22), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 23)), Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 4), 10)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 5))));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 9, Subtract(Add(Add(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 6), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 7)), Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 2), 10)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 3)), 19));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 10, Subtract(Add(Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 22), 10), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 23)), Add(Add(5, First Of(Global.IlIIlIIIlllIIlIllIIIIIllIl)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 1))));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 11, Modulo(Subtract(Add(90, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 24)), Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 20), 4)), 10));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 12, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 26), 90), Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 17), 3)), 10));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 13, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 12), 90), Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 9), 2)), 10));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 14, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 25), 90), Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 21), 2)), 10));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 15, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 27), 90), Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 16), 3)), 10));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 16, Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 13), 90), Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 8), 3)), 10));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 17, Subtract(97, Add(Add(Add(Add(Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 28), 10), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 29)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 24)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 25)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 18))));
        Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Add(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 1), 1));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0);
        Call Subroutine(lIllIlIlIllIIIIIlIlllIllIl);
        If(And(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 5), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 5), <, 2)));
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 5, 2);
        End;
        If((Event Player).IlIIlllllIIlIIllIIlllIIIll);
            Call Subroutine(IIlIIIIlIIlIlIllllIIlIlllI);
            Abort;
        End;
        Call Subroutine(IlllIIlIllIlllllIlIIllIlIl);
        If(Global.llllIIIIllIIlIlIIllIIllIll);
            Big Message(Event Player, Custom String("Save state exceeds game limits"));
            Call Subroutine(llIIlIIllllllIIlIIIIIIlIll);
            Abort;
        End;
        If(Or(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <, First Of(Global.lllllIIlIlllIIllIIlIIlllII)), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, Value In Array(Global.lllllIIlIlllIIllIIlIIlllII, 1))));
            Big Message(Event Player, Custom String("Save state outside of allowed level\r\n(lobby setting)"));
            Call Subroutine(llIIlIIllllllIIlIIIIIIlIll);
            Abort;
        End;
        If(Not(Array Contains(Global.IIllIllIllllIIlIlIlIIIIlIl, Global.llIlIIlIlIlIllIllllIllIllI)));
            Modify Global Variable(IIllIllIllllIIlIlIlIIIIlIl, Append To Array, Global.llIlIIlIlIlIllIllllIllIllI);
            Modify Global Variable(lllllIIIlIlIlllllIlllIlllI, Append To Array, Custom String("{0}", Event Player));
            Call Subroutine(llllIlIIlIIIIlIllIlIlIIlll);
        End;
        Set Player Variable(Event Player, llIIlllIIIIllIIllIIIIIllII, Multiply(Multiply(Raise To Power((Event Player).IIIlIlIllIlllIllllIlIllIll, 2), 10), Add(1, Multiply(Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True), Modulo((Event Player).IIIlIlIllIlllIllllIlIllIll, 100)))));
        Set Player Variable(Event Player, lllIIIIIIIlllIIlIIIlllIIIl, Modulo(Subtract(Add(Add(Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 32), 10), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 33)), 200), Add(Add(Add(Add(Add(Add(11, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 18)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 19)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 22)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 23)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 30)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 31))), 100));
        Modify Player Variable(Event Player, lllIIIIIIIlllIIlIIIlllIIIl, Add, Multiply(0.01, Modulo(Subtract(Add(Add(Multiply(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 34), 10), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 35)), 200), Add(Add(Add(Add(Add(Add(Add(67, First Of(Global.IlIIlIIIlllIIlIllIIIIIllIl)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 1)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 4)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 5)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 13)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 17)), Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 20))), 100)));
        Set Player Variable(Event Player, llIIIIIIllIIlIIlIlIIIIllII, Multiply(Multiply((Event Player).lllIIIIIIIlllIIlIIIlllIIIl, 0.01), (Event Player).llIIlllIIIIllIIllIIIIIllII));
        Set Player Variable(Event Player, IIlIllllllIIlIIIllllIIllII, Modulo(Subtract(Add(90, Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 9)), First Of(Global.IlIIlIIIlllIIlIllIIIIIllIl)), 10));
        Set Player Variable(Event Player, IlIIllllIlllIllIIIllIlIlll, Add(Add(Add(Multiply(Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 10), 90), 6), 10), 1000), Multiply(Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 16), 90), 3), 10), 100)), Multiply(Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 19), 90), 1), 10), 10)), Modulo(Subtract(Add(Value In Array(Global.IlIIlIIIlllIIlIllIIIIIllIl, 11), 90), 7), 10)));
        If(Compare(Global.IlllIIIIlIIIlIllIIlIlIlllI, ==, Event Player));
            Set Global Variable(IlllIIIIlIIIlIllIIlIlIlllI, False);
        End;
        If((Event Player).lIlllllllllIllllIIIIlllIlI);
            Call Subroutine(IIlIIIIIllIIlIIIIlIlIlllII);
        End;
        Set Player Variable(Event Player, llIIllllIIlIIIIIIIlIlIlllI, Empty Array);
        Set Player Variable(Event Player, lIIIIIIlIIllllIllIlIIllIlI, Empty Array);
        Set Player Variable(Event Player, IIIlIllIlIIllIlIlllllIlIll, Empty Array);
        Set Player Variable(Event Player, IIllIIlIIllIIlIIlIlllIIllI, False);
        Set Player Variable(Event Player, IIllIIlllllllIlIIllIIIIIll, False);
        Set Player Variable(Event Player, IIIllIIllIIIIllIlIlIIIIIII, False);
        Set Player Variable(Event Player, IlllIlIIIIIlIlllIIIIlIllll, 0);
        Set Player Variable(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 0, 19));
        Set Player Variable(Event Player, lllllIIlllIlllllIIlIIlllII, False);
        Set Player Variable(Event Player, llIIllIlIlIlIIlllIllllIIIl, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 2), >=, 2));
        Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, 0);
        Set Player Variable(Event Player, lIlIIlIlIlIIIlIlllllIlIIII, 0);
        If(Global.IIllllIlIIlIIIllIllIIIIlII);
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 17, 100);
        End;
        Call Subroutine(IIlIIIlllIIIllIlllIllllIII);
        Call Subroutine(lIIIIlIllIIIIlIIIIllIIlIlI);
        Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
        Call Subroutine(IlIlllllIlIIIlIlllIlIlIIll);
        Call Subroutine(lllIllIlIIllllIlIlIlllllll);
        Set Ability Charge(Event Player, Button(Ability 1), 0);
        Set Ability Charge(Event Player, Button(Ability 2), 0);
        Call Subroutine(lllllIIIllIlIIIlIlIllllllI);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 3, 1);
            If(Value In Array((Event Player).llIlIlIllIIllIlllIlIIlIllI, Global.lIIlllIllllIlIIIIlIllIIIlI));
                Set Player Variable At Index(Event Player, lIIIIllIIIIIlIIIIllllIlIlI, Global.lIIlllIllllIlIIIIlIllIIIlI, Global.lIllIIlIlIIIIIlIIIlIlIlllI);
                Set Player Variable At Index(Event Player, llIlIlIllIIllIlllIlIIlIllI, Global.lIIlllIllllIlIIIIlIllIIIlI, 0);
                Destroy Effect(Value In Array((Event Player).IIIlIlIIlllIIlIIlllIIIIlII, Global.lIIlllIllllIlIIIIlIllIIIlI));
            End;
        End;
        Set Player Variable At Index(Event Player, IlIlIlIlIIIlIIllIIlllllIIl, 1, True);
        Set Player Variable(Event Player, lIIIIIlIlIllIlIIIIIlIlIIlI, False);
        Set Ultimate Charge(Event Player, 0);
        Big Message(Event Player, Custom String("Save State loaded"));
        Wait(0.25, Ignore Condition);
        Set Objective Description(Event Player, Custom String(""), String);
    }
}

rule ("lIIlIIllllIIIIIlIIlllIlIII") {
    event {
        Subroutine;
        IIlIIIIlIIlIlIllllIIlIlllI;
    }
    actions {
        If(Compare((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, >=, 5));
            Big Message(Event Player, Custom String("Inventory full"));
            Call Subroutine(llIIlIIllllllIIlIIIIIIlIll);
            Abort;
        End;
        If(Or(And(Compare(Global.IIIIlllIIIIlIIIlIIIIllllIl, <, 60), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, Global.IIIIlllIIIIlIIIlIIIIllllIl)), And(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 100), Compare(Global.IIIIlllIIIIlIIIlIIIIllllIl, <, 100))));
            Big Message(Event Player, Custom String("Not allowed to load this Item (Player Level too low)"));
            Call Subroutine(llIIlIIllllllIIlIIIIIIlIll);
            Abort;
        End;
        Call Subroutine(IlllIIlIllIlllllIlIIllIlIl);
        If(Global.llllIIIIllIIlIlIIllIIllIll);
            Big Message(Event Player, Custom String("Item exceeds game limits"));
            Call Subroutine(llIIlIIllllllIIlIIIIIIlIll);
            Abort;
        End;
        If(Not(Array Contains(Global.IIllIllIllllIIlIlIlIIIIlIl, Global.llIlIIlIlIlIllIllllIllIllI)));
            Modify Global Variable(IIllIllIllllIIlIlIlIIIIlIl, Append To Array, Global.llIlIIlIlIlIllIllllIllIllI);
            Modify Global Variable(lllllIIIlIlIlllllIlllIlllI, Append To Array, Custom String("{0}", Event Player));
            Call Subroutine(llllIlIIlIIIIlIllIlIlIIlll);
        End;
        If(And(Not(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 1)), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <=, 59)));
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 17, 100);
        End;
        Set Player Variable(Event Player, IIIlIlIllIlllIllllIlIllIll, Global.IIIIlllIIIIlIIIlIIIIllllIl);
        Set Player Variable(Event Player, llllIIlIlllllllIIllIlIllII, Global.IIllIIIlIllIlIlllIlllIlllI);
        Set Player Variable(Event Player, llIIllllIIlIIIIIIIlIlIlllI, Empty Array);
        Set Player Variable(Event Player, lIIIIIIlIIllllIllIlIIllIlI, Empty Array);
        Modify Player Variable(Event Player, lllllIIlllIlllllIIlIIlllII, Add, 19);
        Modify Player Variable(Event Player, lIlIIlIlIlIIIlIlllllIlIIII, Add, 1);
        Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, 1);
        Set Player Variable(Event Player, IlIllIIlllllllllIIIIllllll, 0);
        Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
        Call Subroutine(IlIlllllIlIIIlIlllIlIlIIll);
        Big Message(Event Player, Custom String("Item loaded"));
    }
}

rule ("IllIlIlllIIIllIllIlllllllI") {
    event {
        Subroutine;
        lIlIIIIlIIlIlIlIlllIllllIl;
    }
    actions {
        Set Player Variable At Index(Event Player, IlIlIlIlIIIlIIllIIlllllIIl, 1, False);
        Abort If(Or(Compare(First Of((Event Player).IlIlIlIlIIIlIIllIIlllllIIl), ==, 1), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, 59)));
        Small Message(Event Player, Custom String("Dung item: Reduces kill EXP by 1% per level below 60"));
        Abort If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), <, 2));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Dung item: Reduces kill EXP by 1% per level below 60"));
        Call Subroutine(llIlllIllIIllllIIIIIllIlII);
    }
}

rule ("llIllIlllIIIlIllllIIllIIll") {
    event {
        Subroutine;
        lIllIlllIIIlIllIIIlIlIlIlI;
    }
    actions {
        Set Player Variable(Event Player, IIIlIIIIlIlllllIllIlIIlllI, Max(Min((Event Player).IIIlIIIIlIlllllIllIlIIlllI, 39), 0));
        Set Player Variable(Event Player, lIlIIIIIIlIIlIlIlIIlIIIIlI, Multiply(Round To Integer(Multiply((Event Player).IIIlIIIIlIlllllIllIlIIlllI, 0.25), Down), 4));
        Set Player Variable At Index(Event Player, lllIIlllIIlIIlllIIIIlllIlI, 4, Value In Array(Global.IlllllIIllIlIIIllIIIllIIIl, Subtract((Event Player).IIIlIIIIlIlllllIllIlIIlllI, (Event Player).lIlIIIIIIlIIlIlIlIIlIIIIlI)));
        Abort If(Compare((Event Player).IllIlIIIllIlIlIIIlIIlIlIII, ==, (Event Player).lIlIIIIIIlIIlIlIlIIlIIIIlI));
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 4, 1);
            Set Player Variable At Index(Event Player, lllIIlllIIlIIlllIIIIlllIlI, Global.lIIlllIllllIlIIIIlIllIIIlI, Value In Array((Event Player).llIIllllIIlIIIIIIIlIlIlllI, Add((Event Player).lIlIIIIIIlIIlIlIlIIlIIIIlI, Global.lIIlllIllllIlIIIIlIllIIIlI)));
        End;
        Set Player Variable(Event Player, IllIlIIIllIlIlIIIlIIlIlIII, (Event Player).lIlIIIIIIlIIlIlIlIIlIIIIlI);
    }
}

rule ("llIIlIlIlllllllIlllIlIllII") {
    event {
        Subroutine;
        IIIIlIIlIIlIlllIIlIlIlIIIl;
    }
    actions {
        Set Global Variable(IIlllIIIIIllIlIllIlIlllIII, 9999);
        Set Global Variable(lllIllIlIlllIIIIlIIlIIllII, Vector(0, 0.6, 0));
        Set Global Variable(lIllIIlIlIIIIIlIIIlIlIlllI, Vector(0, 1000, 0));
        Set Global Variable(llIlIlIllIIllIlIlllIIlllIl, Array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9));
        Set Global Variable(IlIllIIIIIIIIllIIlIIllllII, -1);
        Set Global Variable(IIIIllIlIIlIIIlIIllIllIIlI, 1);
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 0, Array(Map(Eichenwalde), Map(Eichenwalde Halloween), Map(Blizzard World), Map(Blizzard World Winter), Map(Numbani), Map(Dorado), Map(Paris), Map(Havana), Map(Junkertown), Map(Hollywood), Map(Hollywood Halloween), Map(Hanamura), Map(Hanamura Winter), Map(Rialto), Map(Route 66), Map(Volskaya Industries), Map(Watchpoint: Gibraltar), Map(Horizon Lunar Colony), Map(King's Row), Map(King's Row Winter), Map(Temple of Anubis)));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 1, Array(0, 0, 1, 1, 2, 3, 4, 5, 6, 7, 7, 8, 8, 9, 10, 11, 12, 13, 14, 14, 15));
        Set Global Variable(IlIllIIlIIIIlIIlIlIIIlIIlI, Vector(0, 0, 0));
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 26);
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 1);
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -7);
        Set Global Variable(IIlIllIIlIIllIlIlIIllIIIIl, Array(Custom String("Monster"), Custom String("Champion"), Custom String("Boss"), Custom String("Great Evil"), Custom String("The Cow Lich King")));
        Skip(Multiply(Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 1), Index Of Array Value(First Of(Global.IIlIlllIlIIIIllIIlIlIlIlll), Current Map)), 14));
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(-24.6, 6.5, -88.55));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(-15.54, 1, 17.14));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(-8.45, 6, 8.3), Vector(-19.71, 6, 6.5), Vector(-10.84, 1, 23.33), Vector(-13.41, 1, 3.27), Vector(-20.55, 1, 16.35), Vector(-21.04, 1, 12.05), Vector(-7.73, 1, 8.98), Vector(-19.7, 1, 20.66), Vector(-13.01, 1, -0.56), Vector(-15.84, 1, 23.09)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(5.44, 0, -16.52), Vector(9.88, 5.81, -71.47), Vector(51.89, 9.21, -88.87), Vector(88.15, 12.67, -67.38), Vector(123.3, 8.72, -27.36)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, False);
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.45);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(-0.873, 0, 0.489));
        Set Global Variable(lllllIlIIlllIIIlIlllllllIl, Array(Vector(133.3, 13.64, 11.07), Vector(98.58, 10.72, -27.72)));
        Set Global Variable(lIllIllIIllIllllIIlllIIlIl, Array(16, 4));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, -7.075);
        Abort;
        Abort;
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(-38.66, -2.25, 146.22));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(2.86, -5, -42.39));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(0.6, -3.99, -33.62), Vector(0.6, -3.99, -24.11), Vector(11.79, -3.99, -28.74), Vector(19.64, -3.99, -34.11), Vector(8.76, -3.99, -22.8), Vector(15.25, -3.99, -22.8), Vector(12.98, -3.99, -35.41), Vector(7.55, -3.99, -35.73), Vector(19.58, -3.99, -28.95), Vector(-0.25, -3.99, -28.96)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(2.95, -0.1, 12.23), Vector(14.49, 1.9, 76), Vector(-39.28, -0.2, 81.35), Vector(-74.84, 0.9, 130.09), Vector(-128.86, 0.75, 108.56)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -5.25);
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 30);
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.85);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(-0.942, 0, 0.335));
        Set Global Variable(lllllIlIIlllIIIlIlllllllIl, Array(Vector(-168.73, 2.59, 105.16), Vector(-75.35, -0.25, 178.39)));
        Set Global Variable(lIllIllIIllIllllIIlllIIlIl, Array(19, 20));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, 1.538);
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 9, Vector(-54.57, -0.394, 110.151));
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(166.27, -5.75, 57.23));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(-28.192, 2.26, 6.019));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(-26.32, 2.28, -6.13), Vector(-27.28, 2.28, 17.9), Vector(-27.59, 2.28, -11.74), Vector(-21.53, 2.28, 18.12), Vector(-32.89, 2.28, 14.18), Vector(-32.6, 2.28, -4.83), Vector(-27.56, 2.28, 23.11), Vector(-36.3, 2.26, 5.98), Vector(-20.71, 2.28, -5.71), Vector(-17.2, 2.26, 5.92)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(14.65, 0.25, 26.47), Vector(74.11, 6.25, -15.08), Vector(114.02, -3.75, 36.34), Vector(144.33, -3.75, -18.01), Vector(210.63, 2.2, 50.86)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -8);
        Set Global Variable(IlIllIIlIIIIlIIlIlIIIlIIlI, Vector(-1, 0, 6));
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 37);
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.55);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(0.832, 0, -0.554));
        Set Global Variable At Index(lllllIlIIlllIIIlIlllllllIl, 0, Vector(256.98, 0.24, 22.73));
        Set Global Variable At Index(lIllIllIIllIllllIIlllIIlIl, 0, 30);
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, -179.791);
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(193.25, 7.01, 43.28));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(-34.64, -0.3, -21.23));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(-47.76, 0, -20.17), Vector(-36.63, 0, -34.29), Vector(-55.09, 0, -9.82), Vector(-16.49, -0.13, -20.22), Vector(-39.26, 0, -0.71), Vector(-36.83, 0, -3.71), Vector(-25.76, 0, -27.8), Vector(-36.16, 0, 5.01), Vector(-45.65, 0, -2.41), Vector(-39.04, -0.29, -20.97)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(23.22, 3.52, -8.58), Vector(65.99, 7, -8.55), Vector(118.59, 11.08, 30.37), Vector(157.17, 10.85, 33.27), Vector(194.93, 15, 43.73)));
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 56);
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.6);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(-0.98, 0, -0.199));
        Set Global Variable(lllllIlIIlllIIIlIlllllllIl, Array(Vector(186.69, -3.66, 39.63), Vector(235, 15.01, 46.35)));
        Set Global Variable(lIllIllIIllIllllIIlllIIlIl, Array(15, 15));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, -37.007);
        Abort;
        Abort;
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(-19.8, 9.99, 28.82));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(14.58, 11, -77.18));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(31.82, 11, -72.37), Vector(28, 11, -65.33), Vector(23.96, 11, -74.41), Vector(31.36, 11, -76.48), Vector(15.65, 11, -72.06), Vector(19.45, 11, -79.04), Vector(20.91, 11, -68.82), Vector(24.12, 12, -87.6), Vector(35.12, 12, -81.79), Vector(29.91, 11, -68.85)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(-10.58, 14, -39.55), Vector(-39.66, 13.99, -13.85), Vector(-53.05, 11.99, -24.02), Vector(-82.46, 12.02, -56.82), Vector(-100.68, 15, -93.7)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, 7.5);
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 25);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(0.992, 0, -0.127));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, 151.348);
        Abort;
        Abort;
        Abort;
        Abort;
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(185.9, 11.25, -46.59));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(-102.04, 4, -73.89));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(-91.28, 4, -68.56), Vector(-96.48, 4, -63.23), Vector(-94.49, 10, -56.51), Vector(-109.17, 4, -71.22), Vector(-115.64, 4, -77.21), Vector(-105.48, 4, -81.92), Vector(-86, 10, -64.99), Vector(-111.7, 4, -80.22), Vector(-93.21, 4, -72.08), Vector(-90.25, 10, -60.75)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(-84.74, 3.85, -43.64), Vector(-32.06, 5.85, -81.84), Vector(27.33, 6, -81.95), Vector(79.49, 7.01, -44.7), Vector(140.03, 6.06, -46.51)));
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.4);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(-0.99, 0, -0.14));
        Set Global Variable(lllllIlIIlllIIIlIlllllllIl, Array(Vector(77.22, 8.49, -11.1), Vector(184.77, 11.25, -46.61)));
        Set Global Variable(lIllIllIIllIllllIIlllIIlIl, Array(19, 30));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, 79.42);
        Abort;
        Abort;
        Abort;
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(-43.97, 4.27, -6.9));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(58.42, 9, -78.31));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(66.91, 9, -88.85), Vector(67.715, 9, -80.758), Vector(69.616, 12, -65.545), Vector(51.47, 9, -81.14), Vector(60.633, 9, -88.758), Vector(51.486, 9, -88.105), Vector(52.206, 9, -74.274), Vector(59.15, 9, -68.72), Vector(64.8, 9, -70.48), Vector(58.88, 12, -64.6)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(27.57, 9.07, -75.02), Vector(-15.69, 4.74, -35.88), Vector(-46.1, 12.54, -89.83), Vector(-76.232, 20, -144.851), Vector(-107.23, 6.44, -127.88)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -4);
        Set Global Variable(IlIllIIlIIIIlIIlIlIIIlIIlI, Vector(14.18, -6.63, -2.63));
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.55);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(0, 0, 1));
        Set Global Variable(lllllIlIIlllIIIlIlllllllIl, Array(Vector(-94.35, 7.88, -192.75), Vector(-91.67, 11.71, -70.81)));
        Set Global Variable(lIllIllIIllIllllIIlllIIlIl, Array(21, 25));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, 94.933);
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 9, Vector(-33.04, 4.427, -51.353));
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(-63.08, -0.25, -5.72));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(-12.17, 2, 86.42));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(-4.21, 2, 94.63), Vector(-20.12, 2, 94.62), Vector(-9.64, 2, 82.74), Vector(-8.96, 2, 92.29), Vector(-2.16, 2, 79.24), Vector(-22.14, 2, 79.24), Vector(-14.69, 2, 82.74), Vector(-22.77, 2, 89.04), Vector(-15.38, 2, 92.29), Vector(-1.57, 2, 89.24)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(-19.01, 0.01, 46.71), Vector(-42.02, -0.4, 17), Vector(6.5, 2, -63.35), Vector(-5.71, 1.52, -104.4), Vector(-18.17, 3.75, -149.28)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -30);
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.95);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(-0.97, 0, 0.23));
        Set Global Variable(lllllIlIIlllIIIlIlllllllIl, Array(Vector(-1.38, 3.75, -139.34), Vector(-35.77, 10.47, -191.98)));
        Set Global Variable(lIllIllIIllIllllIIlllIIlIl, Array(10, 40));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, 79.717);
        Abort;
        Abort;
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(2, -1, 16.23));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(112, 1, 0));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(81.58, 2, 7.68), Vector(96.93, -3, -6.04), Vector(90.67, 2, 0.76), Vector(107.88, 1, -8.85), Vector(95.97, -3, 5.39), Vector(88.07, -3, 8.04), Vector(90.2, 2, 9.58), Vector(90.87, -3, -9.02), Vector(113.83, 1, -3.76), Vector(86.08, -3, -9)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(36.47, 0.1, -7.16), Vector(18.37, -0.69, -8.6), Vector(18.75, -1.97, -39.21), Vector(9.62, -1.79, -64.21), Vector(-5.15, -0.9, -79.11)));
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 55);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(-0.61, 0, -0.79));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, -179.258);
        Abort;
        Abort;
        Abort;
        Abort;
        Abort;
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(-25.25, -0.23, -14.14));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(160.18, -1.24, -21));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(144, -1.24, -10.55), Vector(144, -1.24, -31.55), Vector(154.45, -1.24, -21), Vector(151.43, -1.24, -28.37), Vector(136.63, -1.24, -28.4), Vector(136.65, -1.24, -13.63), Vector(151.4, -1.24, -13.61), Vector(149.62, -1.49, -21), Vector(144, -1.49, -15.38), Vector(144.01, -1.49, -26.63)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(62.97, -1.25, -12), Vector(30.59, -0.25, -62.33), Vector(24.24, 1.57, -62.33), Vector(-57, -1.25, -62.33), Vector(-57, 4.75, -151.69)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -2.9);
        Set Global Variable(IlIllIIlIIIIlIIlIlIIIlIIlI, Vector(6, 0, -6));
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 55);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(0.93, 0, -0.36));
        Set Global Variable(lllllIlIIlllIIIlIlllllllIl, Array(Vector(-51.45, -63.45, -129.51), Vector(-56.96, 3.75, -186.62)));
        Set Global Variable(lIllIllIIllIllllIIlllIIlIl, Array(63, 32));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, 29.872);
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 10, Vector(-56.995, 2.6, -126.682));
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(-9.61, 4.02, 14.02));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(39.03, 2.35, 76.27));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(47.687, 2.35, 79.684), Vector(42.971, 2.35, 83.827), Vector(35.471, 2.35, 86.788), Vector(34.801, 2.35, 75.516), Vector(41.374, 2.35, 70.6), Vector(43.676, 2.35, 75.546), Vector(35.15, 2.35, 79.654), Vector(45.96, 2.35, 72.64), Vector(36.54, 2.35, 69.21), Vector(51.64, 2.35, 79.78)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(59.86, 1.87, 20.12), Vector(47.88, 2.15, 4.59), Vector(-29.89, 8.43, -17.28), Vector(-63.92, 6.5, 18.8), Vector(-105.66, 10.5, -7.23)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -6);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(-0.342, 0, -0.94));
        Set Global Variable At Index(lllllIlIIlllIIIlIlllllllIl, 0, Vector(-106.43, 4.5, -66.44));
        Set Global Variable At Index(lIllIllIIllIllllIIlllIIlIl, 0, 31);
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, -130.551);
        Abort;
        Abort;
        Abort;
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(-127.5, -0.98, 27.83));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(28.9, -2.98, -11.6));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(36.97, -0.98, -2.72), Vector(20.99, -0.98, -20.64), Vector(10.6, -4.98, 4.72), Vector(7, -4.98, -9.5), Vector(15.95, -4.98, -17.49), Vector(33.26, -4.98, 1.93), Vector(24.3, -4.98, 9.92), Vector(11.48, -4.98, -13.48), Vector(14.41, -4.98, 1.32), Vector(28.78, -4.98, 5.92)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(-19.29, -5.35, 27.98), Vector(-18.81, -1.91, 58.63), Vector(-30.3, -3.4, 71.44), Vector(-69.03, -2.98, 64.6), Vector(-90.72, -2.01, 51.42)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -7.2);
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 38);
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.5);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(-0.083, 0, 0.997));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, -48.373);
        Abort;
        Abort;
        Abort;
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(-27.64, -3, -105.5));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(-21.67, 5.93, -159.6));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(-13.16, 5.93, -145.14), Vector(7.89, 5.93, -127.53), Vector(11.2, 5.93, -153.89), Vector(-15.92, -0.07, -154.6), Vector(-4.37, -0.07, -166.56), Vector(3.64, -1.07, -154.26), Vector(-2.28, -0.07, -146.68), Vector(4.77, 5.93, -131.74), Vector(-6.37, -0.07, -153.28), Vector(-10.18, -0.07, -157.12)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(46.56, -4, -143.35), Vector(14.03, -5.16, -84.65), Vector(50.22, -5.15, -48.16), Vector(75.48, -3.18, -4.1), Vector(96.42, 1, 20.67)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -15);
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 51);
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.9);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(0.82, 0, -0.57));
        Set Global Variable(lllllIlIIlllIIIlIlllllllIl, Array(Vector(113.29, 0, 0.26), Vector(79.03, -52.74, 42.07)));
        Set Global Variable(lIllIllIIllIllllIIlllIIlIl, Array(9, 50));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, 94.12);
        Abort;
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(80.91, 9.5, -93.07));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(-3.64, 8, -1.08));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(5.74, 8, 9.34), Vector(-15.26, 8, 19.97), Vector(-9.6, 8.74, 0.64), Vector(-22.8, 8.25, -17.4), Vector(-3.26, 11, -23.61), Vector(5.79, 9, -5.97), Vector(-12.01, 8.04, -21.29), Vector(-7.14, 11, -25.91), Vector(-6.72, 8, -16.78), Vector(-18.55, 8.05, -6.54)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(48.48, 6, -35.99), Vector(62.42, 7, -49.5), Vector(45.91, 8.57, -90.25), Vector(-2.75, 6, -90.97), Vector(-24.04, 3, -130.82)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, 1);
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 47);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(0.999, 0, 0.049));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, -95.477);
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 10, Vector(-25.703, 2.914, -123.362));
        Abort;
        Abort;
        Abort;
        Abort;
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(21.42, -1, -48.83));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(0.43, 1, 39.2));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(7.74, 2, 54.65), Vector(-0.4, 2, 56.3), Vector(-1.16, 1, 31.17), Vector(-3.93, 1, 47.2), Vector(13.63, 1, 35.02), Vector(8.85, 1, 28.7), Vector(12.61, 1, 44.45), Vector(14.46, 1, 39.23), Vector(3.83, 2, 56.58), Vector(9.43, 1, 39.74)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(10.1, 6.11, 16.73), Vector(-9.026, 6, -43.133), Vector(-65.69, 0.42, -51.79), Vector(-78.41, 0.04, 6.73), Vector(-142.92, -3.11, 23.17)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -16);
        Set Global Variable(lIllllllIlIIlllIlllllIllll, Vector(-3.56, -0.11, -3.13));
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 30);
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.75);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(0.35, 0, 0.94));
        Set Global Variable At Index(lllllIlIIlllIIIlIlllllllIl, 0, Vector(-172.39, -0.07, 36.24));
        Set Global Variable At Index(lIllIllIIllIllllIIlllIIlIl, 0, 13);
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, -168.81);
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 9, Vector(-54.771, -0.321, -34.824));
        Abort;
        Set Global Variable(llIIllllIIIlIIIIIllIlIIIll, Vector(-74.24, 2.51, 15.21));
        Set Global Variable(IlIlIIIlIIllllIllIlllllIll, Vector(-1.095, 1.77, -42.075));
        Set Global Variable(IllIlIIIlIlIIIlIlllIIIllII, Array(Vector(3.93, 1.77, -43.07), Vector(-0.27, 1.77, -36.97), Vector(-4.11, 1.77, -44.05), Vector(-6.16, 1.77, -41.07), Vector(0.99, 1.77, -45.17), Vector(-3.18, 1.77, -38.98), Vector(-1.88, 1.77, -47.15), Vector(1.83, 1.77, -40.02), Vector(8.5, 0.77, -35.74), Vector(9.24, 0.77, -31.63)));
        Set Global Variable(lIIllIllIllIlIIIlllIlllIIl, Array(Vector(10.63, -1.77, -3.75), Vector(-11.88, 4.51, 41.96), Vector(-5.6, 1.46, 65.22), Vector(-9.59, 4.66, 84.85), Vector(-7.41, 4.66, 112.11)));
        Set Global Variable(IIIlIlllIlIllIIllllllIIIIl, -30);
        Set Global Variable(lIllllllIlIIlllIlllllIllll, Vector(-2.13, 1.62, 1.06));
        Set Global Variable(IIIlIIlIIIIIlIlIIIlIllIlII, 32);
        Set Global Variable(llIIIllIIIIlIlllIlIIIllIll, 0.65);
        Set Global Variable(IllIllllIIIIllIIIIIIIlIIIl, Vector(-0.867, 0, -0.498));
        Set Global Variable(IlIllllIIIIIIIIlllIIllIIII, -11.288);
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 9, Vector(-11.116, 1.39, 60.7));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 10, Vector(-7.748, 4.664, 108.356));
        Abort;
        Abort;
        Create HUD Text(If-Then-Else(Global.IllIlIIllIIIIllllIllIIIIlI, All Players(Team 2), Empty Array), Custom String("Raid starts in {0} seconds", Max(0, Round To Integer(Subtract(Global.IllIlIIllIIIIllllIllIIIIlI, Total Time Elapsed), Down))), Null, Null, Top, 2, Color(Aqua), Null, Null, Visible To and String, Visible Never);
        Set Global Variable(IlllllIlllIIIllIIllllIlllI, Last Text ID);
    }
}

rule ("IllIllIIIllllIllIlIllIllll") {
    event {
        Subroutine;
        IllllIlIlIllIIllIIIllllllI;
    }
    actions {
        If(Compare(Hero Of(Event Player), ==, Hero(Baptiste)));
            Set Max Ammo(Event Player, 0, Global.IIlllIIIIIllIlIllIlIlllIII);
            Set Ammo(Event Player, 0, Global.IIlllIIIIIllIlIllIlIlllIII);
        End;
        Skip(Multiply(Index Of Array Value(All Heroes, Hero Of(Event Player)), 3));
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.018, False, 237.11, 308.31, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(0, 4));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.02, False, 208.02, 307.135, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(0, 4));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(3.025, 102.025, 206.055, False, 405));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(3, 13));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.01, False, 208.14, 301.15, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(4, 16));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.015, 101.015, 201.16, 301.15, 411));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(2, 11));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.03, 101.025, 221.115, 301.06, 411));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(0, 4));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1, False, 208.11, 301.1, 431));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(7, 20.1));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.025, 1.012, 205.055, 308.13, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(1, 4));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.02, False, 218.13, 308.16, 408));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(12, 100.12));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.03, 101, 218.175, False, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(4, 24));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.025, 101.01, 208.105, 308.25, 401.006));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(5, 11));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.02, 101.027, 203.035, 301.035, 403));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(5, 24));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.008, 101.015, 201.09, 321.105, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(2, 7));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.02, 101.02, 211.08, 337.115, 421));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(0, 10));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.025, 101, 207.07, 301.11, 401.03));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(2, 13));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.03, 101, 201.085, 308.11, 411));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(2, 10));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.025, 101, 207.105, 303.105, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(3, 9));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.028, 101, 208.05, 307.16, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(5, 22));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.02, 101, 205.05, 308.145, 405));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(2, 7));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.02, 101.015, 208.08, 301.095, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(2, 8));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.03, 101.03, 247.165, 305.125, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(2, 8));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.015, 101.015, 238.13, 308.07, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(4, 10));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.02, 101.016, 201.095, 301.1, 401.03));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(0, 3));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(5, False, 201.28, 305.11, 402));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(3, 30.13));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.035, 101, 207.17, 308.095, 401.045));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(5, 25));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.02, 101.02, 201.05, 303.06, 405));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(2, 4));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(3.02, 101.015, 208.075, 305.105, 405.065));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(4, 11));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.034, 101.018, False, 307.16, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(3, 15));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.011, 101, 208.11, 311.17, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(4, 19));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1, False, 201.11, 301.13, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(3, 22.14));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.015, 101, 208.105, 301.11, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(3, 19));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.013, 103.02, 207.16, 303.26, 405.003));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(5, 20));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(3.024, 101.018, 203.08, 303.15, 403));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(5, 22));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.017, 101, 207.2, 321.1, 451));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(0, 4));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1, 101, 207.15, 301.11, 401.025));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(4, 13));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.02, 107.015, 208.17, 301.135, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(5, 12));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(3.011, 101.016, 208.13, 303.165, 403.003));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(7, 27));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.015, 101.015, 221.105, 305.16, 401));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(1, 14));
        Abort;
        Set Player Variable(Event Player, IllIlIllIIIIlIIllIllIllIlI, Array(1.013, 103.015, 202.085, 303.11, 401.015));
        Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Array(6, 12));
    }
}

rule ("lIIlIlIlIlllIlllIllIllIIII") {
    event {
        Subroutine;
        lllIIllIIIlIIllIIllIlllIlI;
    }
    actions {
        Set Global Variable(IIIlIlllIllllIlllllllIIlII, (Event Player).lllllIIlllIlllllIIlIIlllII);
        If(First Of((Event Player).lIlIlllIllIlIIIllllIllIlll));
            If(Compare((Event Player).IIIlIllIlIIllIlIlllllIlIll, ==, Empty Array));
                Small Message(Event Player, Custom String("Item cannot be rolled back"));
            Else;
                Big Message(Event Player, Custom String("Item rolled back"));
                If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), >=, 2));
                    Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Item rolled back!"));
                    Call Subroutine(llIlllIllIIllllIIIIIllIlII);
                End;
                For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 19, 1);
                    Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, Global.lIIlllIllllIlIIIIlIllIIIlI), Value In Array((Event Player).IIIlIllIlIIllIlIlllllIlIll, Global.lIIlllIllllIlIIIIlIllIIIlI));
                End;
                Set Player Variable(Event Player, IIIlIllIlIIllIlIlllllIlIll, Empty Array);
                Call Subroutine(lIIIIlIllIIIIlIIIIllIIlIlI);
                Call Subroutine(lllIllIlIIllllIlIlIlllllll);
                Call Subroutine(lllllIIIllIlIIIlIlIllllllI);
            End;
            Abort;
        End;
        If(And(And(And(Is True For All(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, 7), 4), Compare(Current Array Element, ==, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(6, Global.IIIlIlllIllllIlllllllIIlII)))), Or(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, 6)), ==, 50), Not(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, 6))))), Or(Or((Event Player).llllIIlIlllllllIIllIlIllII, Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 4)), Not((Event Player).IIlIIIIllllIllIIlIIIIlIlll))), Is True For All(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(11, Global.IIIlIlllIllllIlllllllIIlII), 3), Or(Not(Current Array Element), Compare(Current Array Element, >=, 7)))));
            Small Message(Event Player, Custom String("No stats to reroll"));
            Abort;
        End;
        Call Subroutine(IIIlIlllIlIIIlIlllIllIIllI);
        Set Player Variable(Event Player, IIllIIllIIIIIlIlIIllIllllI, (Event Player).IIllIIllIllllllllIIlIIIIll);
        If(Compare((Event Player).IlIIllllIlllIllIIIllIlIlll, <, (Event Player).lIllIIlIllllIlIIIllIIllIlI));
            Small Message(Event Player, Custom String("Not enough gold to reroll (cost: {0})", (Event Player).lIllIIlIllllIlIIIllIIllIlI));
            Abort;
        End;
        If(Compare((Event Player).IlllIlIIIIIlIlllIIIIlIllll, <, (Event Player).IIllIIllIIIIIlIlIIllIllllI));
            Call Subroutine(IlllIIIIlIIlIIIIllllllllIl);
            Abort;
        End;
        Call Subroutine(IIIllIlIIllIllllIIIlllIlIl);
        Modify Player Variable(Event Player, IlIIllllIlllIllIIIllIlIlll, Subtract, (Event Player).lIllIIlIllllIlIIIllIIllIlI);
        Set Player Variable(Event Player, IIIlIllIlIIllIlIlllllIlIll, Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Global.IIIlIlllIllllIlllllllIIlII, 19));
        If((Event Player).llllIIlIlllllllIIllIlIllII);
            Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, 2), 4));
        Else;
            Modify Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, 2), Modulo, 2);
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, 5), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, 5)), ==, True));
            Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, Randomized Array(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, 2), 4)));
        End;
        Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, 0);
        For Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 6, 11, 1);
            Modify Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Add, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, Global.IlllllIIlIIllIlIlIIIlIlIlI)));
        End;
        If(Compare(Global.IIIIlllIIIIlIIIlIIIIllllIl, >=, 250));
            Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Array(50, 50, 50, 50, 50));
        Else;
            Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Array(0, 0, 0, 0, 0));
            For Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 0, 67, 1);
                Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Random Value In Array(Filtered Array(Array Slice(Global.llIlIlIllIIllIlIlllIIlllIl, 0, 5), Compare(Value In Array(Global.llIlIIlIlIlIllIllllIllIllI, Current Array Element), <, 50))));
                Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, Round To Integer(Multiply(Global.IIIIlllIIIIlIIIlIIIIllllIl, 0.05), Up));
                Modify Global Variable At Index(llIlIIlIlIlIllIllllIllIllI, Global.lIIIIIllllIlIIIIlIIIlIIIll, Add, Global.lIlIlIIlIIIIlIllIIllllllll);
                Modify Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Subtract, Global.lIlIlIIlIIIIlIllIIllllllll);
                If(Compare(Value In Array(Global.llIlIIlIlIlIllIllllIllIllI, Global.lIIIIIllllIlIIIIlIIIlIIIll), >, 50));
                    Modify Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Add, Subtract(Value In Array(Global.llIlIIlIlIlIllIllllIllIllI, Global.lIIIIIllllIlIIIIlIIIlIIIll), 50));
                    Set Global Variable At Index(llIlIIlIlIlIllIllllIllIllI, Global.lIIIIIllllIlIIIIlIIIlIIIll, 50);
                End;
                If(Compare(Global.IIIIlllIIIIlIIIlIIIIllllIl, <=, 0));
                    Break;
                End;
            End;
        End;
        Modify Global Variable(lIIlllIllllIlIIIIlIllIIIlI, Append To Array, Global.llIlIIlIlIlIllIllllIllIllI);
        Big Message(Event Player, Custom String("Item rerolled"));
        If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), >=, 2));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Item rerolled!"));
            Call Subroutine(llIlllIllIIllllIIIIIllIlII);
        End;
        For Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 0, 9, 1);
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Add(2, Global.IIIlIlllIllllIlllllllIIlII), Global.IlllllIIlIIllIlIlIIIlIlIlI), Value In Array(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.IlllllIIlIIllIlIlIIIlIlIlI));
        End;
        If(Not((Event Player).llllIIlIlllllllIIllIlIllII));
            Modify Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, 2), Add, Multiply((Event Player).llIIllIlIlIlIIlllIllllIIIl, 2));
            Modify Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIIlIlllIllllIlllllllIIlII, 5), Multiply, 2);
        End;
        For Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Add(Global.IIIlIlllIllllIlllllllIIlII, 11), Add(Global.IIIlIlllIllllIlllllllIIlII, 14), 1);
            If(And(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Global.IlllllIIlIIllIlIlIIIlIlIlI), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Global.IlllllIIlIIllIlIlIIIlIlIlI), <, 7)));
                Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Global.IlllllIIlIIllIlIlIIIlIlIlI, Random Integer(1, 6));
            End;
        End;
        Call Subroutine(lIIIIlIllIIIIlIIIIllIIlIlI);
        Call Subroutine(lllIllIlIIllllIlIlIlllllll);
        Call Subroutine(lllllIIIllIlIIIlIlIllllllI);
        Set Player Variable At Index(Event Player, lIlIlllIllIlIIIllllIllIlll, 4, True);
        Call Subroutine(IIlIllIIllIlIIIIlIIIIllIll);
    }
}

rule ("IllIllIIllIIIlllIIIIllIIlI") {
    event {
        Subroutine;
        lIIIllIlIlIIllIlIIlIlIIlIl;
    }
    actions {
        Abort If(Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 3)));
        If(Modulo(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1));
            Play Effect(Event Player, Good Explosion, Value In Array(Array(Color(Lime Green), Color(Turquoise), Color(Blue)), Subtract(Multiply(Modulo(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1), 10), 1)), Global.IIIIlllIIIIlIIIlIIIIllllIl, 1);
            Abort;
        End;
        Play Effect(Event Player, Good Explosion, Value In Array(Array(Color(Yellow), Color(White), Color(Green), Color(Blue), Color(Purple), Color(Orange), Color(Red), Color(Aqua), Color(Orange)), Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1)), Global.IIIIlllIIIIlIIIlIIIIllllIl, 1);
    }
}

rule ("lIIIllIIlIllIIIIllIlIIlIIl") {
    event {
        Subroutine;
        lIllIlIlIllIIIIIlIlllIllIl;
    }
    actions {
        If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 8));
            If(Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 17)), 100), <, 30));
                Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 18), Value In Array(Array(Custom String("Hellslayer"), Custom String("Baranar's Star"), Custom String("Guardian Angel"), Custom String("Jalal's Mane"), Custom String("The Cranium Basher"), Custom String("Tyrael's Might"), Custom String("Windforce"), Custom String("Arreat's Face"), Custom String("Ghostflame"), Custom String("Arkaine's Valor"), Custom String("The Oculus"), Custom String("Que-Hegan's Wisdom"), Custom String("Gore Rider"), Custom String("The Minotaur"), Custom String("Ribcracker"), Custom String("Rattlecage"), Custom String("Thunderstroke"), Custom String("Azurewrath"), Custom String("Blade of Ali Baba"), Custom String("Spire of Honor"), Custom String("Frostburn"), Custom String("Nightsmoke"), Custom String("The Gladiator's Bane"), Custom String("Wizardspike"), Custom String("The Ward"), Custom String("Herald of Zakarum"), Custom String("Nightwing's Veil"), Custom String("Toothrow"), Custom String("Buriza-Do Kyanon"), Custom String("Stormspire"), Custom String("Harlequin Crest"), Custom String("Vampire Gaze")), Index Of Array Value(All Heroes, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Global.lIIlllIllllIlIIIIlIllIIIlI))));
            Else;
                Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 18), Value In Array(Array(Custom String("The Ultimate Weapon"), Custom String("Lightsaber"), Custom String("Soul Crusher"), Custom String("Dragon Slayer"), Custom String("Yawarakai-Te"), Custom String("Blade Of the Immortal"), Custom String("Arm Cannon"), Custom String("Progressive Knife"), Custom String("Juuchi Yosamu"), Custom String("Blood Scythe"), Custom String("Thunderfury, Blessed Blade of the Windseeker"), Custom String("Master Sword"), Custom String("Galatine"), Custom String("Q Weapon"), Custom String("Sulfuras, Hand of Ragnaros"), Custom String("Mega Buster"), Custom String("Excalibur"), Custom String("Laevateinn"), Custom String("Swiss Army Knife"), Custom String("Aiglos"), Custom String("Tell's Crossbow"), Custom String("Hero's Bow"), Custom String("Ashbringer"), Custom String("Spear Of Longinus"), Custom String("Phaser"), Custom String("Bovine Bardiche"), Custom String("Ice Queen's Tiara"), Custom String("Sword of Damascus"), Custom String("Frostmourne"), Custom String("Ghost"), Custom String("Shadow"), Custom String("Spirit")), Subtract(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 17)), 100), 31)));
            End;
            Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 18)));
            Abort;
        End;
        If(Or(Or(Or(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 100), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 5)), >, 2)), And(And(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 1), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 60)), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 17)), 100), >=, 26))), Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 5)));
            Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, 2000);
        Else;
            Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, Multiply(Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1), 500));
        End;
        For Global Variable(IIIlIlllIllllIlllllllIIlII, 11, 14, 1);
            Modify Global Variable(lIlIlIIlIIIIlIllIIllllllll, Add, Multiply(Multiply(Add(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.IIIlIlllIllllIlllllllIIlII), 3)), 1), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.IIIlIlllIllllIlllllllIIlII)), ==, True)), 80));
        End;
        For Global Variable(IIIlIlllIllllIlllllllIIlII, 6, 11, 1);
            Modify Global Variable(lIlIlIIlIIIIlIllIIllllllll, Add, Multiply(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.IIIlIlllIllllIlllllllIIlII)), 20));
        End;
        If(And(And(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 1), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 60)), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 17)), 100), >=, 26)));
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(18, Global.lIIlllIllllIlIIIIlIllIIIlI), Add(Add(Add(Global.lIlIlIIlIIIIlIllIIllllllll, 3000), Multiply(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 13)), >=, 7), Add(-2400, Multiply(Subtract(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(13, Global.lIIlllIllllIlIIIIlIllIIIlI)), 6), 10000)))), Multiply(And(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 13)), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(13, Global.lIIlllIllllIlIIIIlIllIIIlI)), <=, 6)), 87599)));
        Else;
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 18), Add(Round To Integer(Multiply(Value In Array(Array(0.01, 0.025, 0.05, 0.15, 0.5, 1, 1), Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1)), Add(Global.lIlIlIIlIIIIlIllIIllllllll, Multiply(And(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 17)), 100), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 17)), 100), !=, 26)), 599))), To Nearest), Multiply(5, Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, <=, 1))));
        End;
        Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, 18)));
    }
}

rule ("IlIIllIlIllIllIlllIIIIllll") {
    event {
        Subroutine;
        lIlIlIIIIllllIlIIIIIIlllIl;
    }
    actions {
        If(Modulo(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1));
            Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, Subtract(Multiply(Modulo(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1), 10), 1));
            Skip(Multiply(Round To Integer(Divide(Global.lIIlllIllllIlIIIIlIllIIIlI, 2), Down), 2));
            Create Effect(Event Player, Sphere, Value In Array(Array(Color(Lime Green), Color(Aqua)), Global.lIIlllIllllIlIIIIlIllIIIlI), Global.IIIIlllIIIIlIIIlIIIIllllIl, 0.3, None);
            Abort;
            Create Effect(Event Player, Orb, Color(Blue), Global.IIIIlllIIIIlIIIlIIIIllllIl, 0.3, None);
            Abort;
        End;
        Skip(Multiply(Round To Integer(Divide(Global.IlllllIIlIIllIlIlIIIlIlIlI, 8), Down), 2));
        Create Effect(Event Player, Sphere, Value In Array(Array(Color(Yellow), Color(White), Color(Green), Color(Blue), Color(Purple), Color(Orange), Color(Red)), Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1)), Global.IIIIlllIIIIlIIIlIIIIllllIl, 0.3, None);
        Abort;
        Create Effect(Event Player, Orb, Value In Array(Array(Color(Aqua), Color(Orange)), Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 8)), Global.IIIIlllIIIIlIIIlIIIIllllIl, 0.3, None);
    }
}

rule ("llIllIIIIlIIlIllIIlIlllIII") {
    event {
        Subroutine;
        llIlIIlIlIllIIIIlllIIIlIlI;
    }
    actions {
        Skip(Subtract(Multiply(7, Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, !=, 7)), Multiply(4, Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 5.3))));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Primal Drop!"));
        Big Message(Event Player, Custom String("Primal Drop!"));
        Skip(2);
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Arcane Crystal Fragment Drop!"));
        Big Message(Event Player, Custom String("Arcane Crystal Fragment Drop!"));
        //lbl_0:
        Abort If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), <, 2));
        Call Subroutine(llIlllIllIIllllIIIIIllIlII);
    }
}

rule ("llIIIlIIIllIlIllllIIlIIlll") {
    event {
        Subroutine;
        IIIlIlllIlIIIlIlllIllIIllI;
    }
    actions {
        If(And(And(Not((Event Player).IIlIIIIllllIllIIlIIIIlIlll), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 11))), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 11)), <=, 6)));
            Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, 3000);
            Set Player Variable(Event Player, IIllIIllIllllllllIIlIIIIll, 3);
            Abort;
        End;
        Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Round To Integer(Multiply(Value In Array(Array(2.5, 12.5, 87.5, 200, 750, 750, 1500, 1500), (Event Player).IIlIIIIllllIllIIlIIIIlIlll), Add(1, Divide(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 0.02), 1.2))), To Nearest));
        Set Player Variable(Event Player, IIllIIllIllllllllIIlIIIIll, Max(1, Round To Integer(Multiply((Event Player).IIlIIIIllllIllIIlIIIIlIlll, 0.3), Up)));
    }
}

rule ("IlIIlIllIIlIlIIIIIlIlIIllI") {
    event {
        Subroutine;
        IlIIlllIllIIllIIIIlIlIllll;
    }
    actions {
        Set Player Variable(Event Player, IIllIIllIIIIIlIlIIllIllllI, Value In Array(Array(1, 2, 3, 4, 2, 2, 2, 2), (Event Player).IIlIIIIllllIllIIlIIIIlIlll));
        If(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, <, 4));
            Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, Round To Integer(Multiply(Multiply(71.016, Raise To Power(4, (Event Player).IIlIIIIllllIllIIlIIIIlIlll)), Add(0.5, Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 0.01))), To Nearest));
            Abort;
        End;
        Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, 0);
        For Global Variable(IIllIIIlIllIlIlllIlllIlllI, 6, 11, 1);
            Modify Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, Add, Max(0, Subtract(50, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIllIIIlIllIlIlllIlllIlllI, (Event Player).lllllIIlllIlllllIIlIIlllII)))));
        End;
        For Global Variable(IIllIIIlIllIlIlllIlllIlllI, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 11), Add((Event Player).lllllIIlllIlllllIIlIIlllII, 14), 1);
            Modify Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, Add, Multiply(And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Global.IIllIIIlIllIlIlllIlllIlllI), <, 7), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Global.IIllIIIlIllIlIlllIlllIlllI), >, 0)), Max(0, Subtract(9, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.IIllIIIlIllIlIlllIlllIlllI, 3))))));
        End;
        If(Not((Event Player).lIlIlIIIIllIlllIIIIIlIlIll));
            Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, 0);
            Abort;
        End;
        If(Compare((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, >, 50));
            Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, 200);
            Abort;
        End;
        Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, Add(200, Multiply(Round To Integer(Divide(Raise To Power(Subtract(51, (Event Player).lIlIlIIIIllIlllIIIIIlIlIll), 3), 10000), Up), 100)));
    }
}

rule ("IIlIlllllIlIIIllllIlIIIIII") {
    event {
        Subroutine;
        llIIIlIIIIllIlIllIIllllIlI;
    }
    actions {
        Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Add((Event Player).IIlIIIIllllIllIIlIIIIlIlll, 1));
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Random Integer(0, 9));
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Add(Add(1, Compare(Global.llIlIIlIlIlIllIllllIllIllI, >=, 6)), Multiply(3, Compare(Global.llIlIIlIlIlIllIllllIllIllI, >=, 9))));
        Set Player Variable(Event Player, lIIllllIlIIIllIIllllIIIlll, Random Integer(6, 10));
        Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, Value In Array(Array(Custom String("Sol"), Custom String("Nef"), Custom String("Io"), Custom String("Shael"), Custom String("El"), Custom String("Fal"), Custom String("Pul"), Custom String("Dol"), Custom String("Ko"), Custom String("Gul"), Custom String("Ohm"), Custom String("Ber"), Custom String("Jah"), Custom String("Cham"), Custom String("Vex")), Subtract(Add(Multiply(Subtract(Round To Integer(Multiply(Global.llIlIIlIlIlIllIllllIllIllI, 0.55), Up), 1), 5), (Event Player).lIIllllIlIIIllIIllllIIIlll), 6)));
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Global.llIlIIlIlIlIllIllllIllIllI);
        Set Player Variable(Event Player, lIlIlllIIlIlllIIIIllIIlIlI, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 5), Subtract((Event Player).lIIllllIlIIIllIIllllIIIlll, 6)));
        Big Message(Event Player, Custom String("{0} Rune: +{1} {2}", (Event Player).lIlIlIIIIllIlllIIIIIlIlIll, (Event Player).llIlIIllIIIIIIIIlIlIlIIlII, (Event Player).lIlIlllIIlIlllIIIIllIIlIlI));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 4, False);
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("{0} Rune: ", (Event Player).lIlIlIIIIllIlllIIIIIlIlIll));
        If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), >=, 2));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("{0} Rune: +{1} {2}", (Event Player).lIlIlIIIIllIlllIIIIIlIlIll, (Event Player).llIlIIllIIIIIIIIlIlIlIIlII, (Event Player).lIlIlllIIlIlllIIIIllIIlIlI));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 4, True);
        End;
        If(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, (Event Player).lIIllllIlIIIllIIllllIIIlll)), <, 50));
            Set Player Variable(Event Player, IIIlIllIlIIllIlIlllllIlIll, Empty Array);
        End;
        Modify Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, (Event Player).lIIllllIlIIIllIIllllIIIlll), Add, Global.llIlIIlIlIlIllIllllIllIllI);
        If(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, (Event Player).lIIllllIlIIIllIIllllIIIlll)), >, 50));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 5, Multiply(Subtract(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, (Event Player).lIIllllIlIIIllIIllllIIIlll)), 50), Add(Multiply(0.05, Raise To Power(Add(Divide((Event Player).llIlIIIlIlIIlIIIllllIlllII, 3), 1), 2)), Multiply(Add(Divide((Event Player).llIlIIIlIlIIlIIIllllIlllII, 3), 1), 0.95))));
            Modify Player Variable(Event Player, llIIIIIIllIIlIIlIlIIIIllII, Add, Multiply(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 5), Subtract(1, Multiply(Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True), 0.9))));
            If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), ==, 1));
                Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("{0}{1} EXP (+0%)", Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 3), Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 5)));
                Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 4, True);
            Else;
                Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("{0} / {1} EXP (+0%)", Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 3), Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 5)));
            End;
        End;
        If(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 4));
            Call Subroutine(llIlllIllIIllllIIIIIllIlII);
        End;
        If(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, (Event Player).lIIllllIlIIIllIIllllIIIlll)), >, 50));
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, (Event Player).lIIllllIlIIIllIIllllIIIlll), 50);
            Call Subroutine(IlllllIlIllllIIlllIllllllI);
        End;
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, (Event Player).lllllIIlllIlllllIIlIIlllII);
        Call Subroutine(lIllIlIlIllIIIIIlIlllIllIl);
        Call Subroutine(lIIIIlIllIIIIlIIIIllIIlIlI);
    }
}

rule ("lIllIIIlllIlIIIIlIIllIlIlI") {
    event {
        Subroutine;
        lIIlIlIIlIlIIllIllIIlIIIlI;
    }
    actions {
        Create HUD Text(All Players(Team 2), Custom String("Calibration failed!\r\nPlease try again with default settings.\r\nYou may deselect maps to play on a specific map."), Null, Null, Top, -2, Color(Red), Null, Null, Visible To, Default Visibility);
        Set Global Variable(IllIIlIllllIIIllIlllIIlIIl, 4);
    }
}

rule ("lllIIlllIlIlIlIlIlIIlllIlI") {
    event {
        Subroutine;
        lIIllllIIIlIlIIIIllIIIIIll;
    }
    actions {
        Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Modulo(Value In Array((Event Player).llIIIlllIIIlllllIIllIIIIIl, Global.lIIIIIllllIlIIIIlIIIlIIIll), 10));
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        If(And(And(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, >=, 2), Not(Modulo(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1))), Compare((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, >=, 5)));
            Small Message(Event Player, Custom String("Inventory full"));
            Abort;
        End;
        If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 5.3));
            If(And(And((Event Player).llllIIlIlllllllIIllIlIllII, Compare((Event Player).IIlIIllIIIllIllllIIIIlIIll, <, 5)), Or((Event Player).IIllIIlIIllIIlIIlIlllIIllI, Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 4))));
                If(Compare((Event Player).IllIIIIlIlIIlIIllIllIIIlll, <, 9));
                    Modify Player Variable(Event Player, IllIIIIlIlIIlIIllIllIIIlll, Add, 1);
                    Big Message(Event Player, Custom String("Infused item with Arcane Crystal Fragment ({0}/9)", (Event Player).IllIIIIlIlIIlIIllIllIIIlll));
                    Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 3), (Event Player).IllIIIIlIlIIlIIllIllIIIlll);
                    If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), >=, 2));
                        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Infused item with Arcane Crystal Fragment ({0}/9)", (Event Player).IllIIIIlIlIIlIIllIllIIIlll));
                        Call Subroutine(llIlllIllIIllllIIIIIllIlII);
                    End;
                Else;
                    Small Message(Event Player, Custom String("Item cannot be infused with more Arcane Crystals Fragments"));
                    Abort;
                End;
            Else;
                Small Message(Event Player, If-Then-Else(Compare((Event Player).IIlIIllIIIllIllllIIIIlIIll, >=, 5), Custom String("Item has reached maximum enchantment level"), Custom String("Item does not meet requirements")));
                Abort;
            End;
        End;
        Modify Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Add, Global.lllIllIlIlllIIIIlIIlIIllII);
        Call Subroutine(lIIIllIlIlIIllIlIIlIlIIlIl);
        Play Effect(Event Player, Buff Explosion Sound, Null, Event Player, 75);
        Destroy Effect(Value In Array((Event Player).IIIlIlIIlllIIlIIlllIIIIlII, Global.lIIIIIllllIlIIIIlIIIlIIIll));
        Modify Player Variable(Event Player, lIIIlIIIlllllIIllIllIIIIll, Subtract, 1);
        Set Player Variable At Index(Event Player, lIIIIllIIIIIlIIIIllllIlIlI, Global.lIIIIIllllIlIIIIlIIIlIIIll, Global.lIllIIlIlIIIIIlIIIlIlIlllI);
        Set Player Variable At Index(Event Player, llIlIlIllIIllIlllIlIIlIllI, Global.lIIIIIllllIlIIIIlIIIlIIIll, 0);
        Set Player Variable(Event Player, lIIIIIlIlIllIlIIIIIlIlIIlI, First Of(Sorted Array(Remove From Array((Event Player).llIlIlIllIIllIlllIlIIlIllI, 0), Current Array Element)));
        If(Not(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4)));
            Call Subroutine(IIlIIlllIIIIIlIIIIllIIIIIl);
        End;
        If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 1));
            Set Player Variable(Event Player, lIIllllIlIIIllIIllllIIIlll, Value In Array((Event Player).IlIIllIlllllIlIIlIlIlllllI, Global.lIIIIIllllIlIIIIlIIIlIIIll));
            Set Player Variable(Event Player, IlIIllllIlllIllIIIllIlIlll, Min(Add((Event Player).IlIIllllIlllIllIIIllIlIlll, (Event Player).lIIllllIlIIIllIIllllIIIlll), Global.IIlllIIIIIllIlIllIlIlllIII));
            Small Message(Event Player, Custom String("Picked up {0} gold", (Event Player).lIIllllIlIIIllIIllllIIIlll));
            If(Compare((Event Player).lIlllllllllIllllIIIIlllIlI, ==, 4));
                Call Subroutine(llIIIllllIlIllIlIIIlIlIIIl);
            End;
            Abort If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), <, 2));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Picked up {0} gold", (Event Player).lIIllllIlIIIllIIllllIIIlll));
            Call Subroutine(llIlllIllIIllllIIIIIllIlII);
            Abort;
        End;
        If(Not(Modulo(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1)));
            Modify Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Subtract, 1);
            Set Player Variable(Event Player, lIIllllIlIIIllIIllllIIIlll, Random Value In Array(All Heroes));
            Set Player Variable(Event Player, lIllIIIIlIIlllIllIllIIIlII, Add(0.22, Multiply(Multiply(0.013, Value In Array((Event Player).IlIIllIlllllIlIIlIlIlllllI, Global.lIIIIIllllIlIIIIlIIIlIIIll)), 3)));
            Modify Player Variable(Event Player, lIlIIlIlIlIIIlIlllllIlIIII, Add, 1);
            Set Player Variable(Event Player, IlIllIIlllllllllIIIIllllll, Multiply((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, 19));
            Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, (Event Player).IlIllIIlllllllllIIIIllllll);
            Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII);
            Call Subroutine(lIIlllIIlIIlIlIIllIllIIIIl);
            Abort;
        End;
        If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 4.2));
            Call Subroutine(llIIIlIIIIllIlIllIIllllIlI);
            Abort;
        End;
        If(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 4.1));
            Set Player Variable(Event Player, IllIlIlIIlIIIIIIIIlIlIlIlI, Add(Total Time Elapsed, 0.25));
            Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Random Integer(0, 9));
            Set Global Variable(llIlIIlIlIlIllIllllIllIllI, Add(Add(2, Multiply(Compare(Global.llIlIIlIlIlIllIllllIllIllI, >=, 6), 3)), Multiply(Compare(Global.llIlIIlIlIlIllIllllIllIllI, >=, 9), 5)));
            Set Player Variable(Event Player, IIIllIIllIIIIllIlIlIIIIIII, Max(Add((Event Player).IIIllIIllIIIIllIlIlIIIIIII, Multiply(Global.llIlIIlIlIlIllIllllIllIllI, 60)), Add(Total Time Elapsed, Multiply(Global.llIlIIlIlIlIllIllllIllIllI, 60))));
            Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Global.llIlIIlIlIlIllIllllIllIllI);
            Big Message(Event Player, Custom String("Lucky Charm - Experience & Magic Find Bonus: {0} Minutes", (Event Player).llIlIIllIIIIIIIIlIlIlIIlII));
            Abort If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), <, 2));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Lucky Charm: +{0} seconds", Multiply(60, (Event Player).llIlIIllIIIIIIIIlIlIlIIlII)));
            Call Subroutine(llIlllIllIIllllIIIIIllIlII);
            Abort;
        End;
    }
}

rule ("llllIlIllIllIlllIIIIIlllIl") {
    event {
        Subroutine;
        lIlIIlIllllllIIllllllIIIIl;
    }
    actions {
        Skip(Multiply(Subtract((Event Player).lIlllllllllIllllIIIIlllIlI, 6), 2));
        Play Effect(Event Player, Buff Impact Sound, Null, Event Player, 50);
        Skip(3);
        Play Effect(Event Player, Explosion Sound, Null, Event Player, 50);
        Skip(1);
        Play Effect(Event Player, Buff Impact Sound, Null, Event Player, 50);
        //lbl_0:
        //lbl_1:
        If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 3));
            Play Effect(Event Player, Good Pickup Effect, Value In Array(Array(Color(Sky Blue), Color(Red), Color(Green)), Subtract((Event Player).lIlllllllllIllllIIIIlllIlI, 6)), Add((Event Player).IIIllIIlIlIIIlllllllIIIlIl, Multiply(Vector(0, 1, 0), Value In Array(Array(0, 2.5, 1.5), Subtract((Event Player).lIlllllllllIllllIIIIlllIlI, 6)))), True);
        End;
        If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), >=, 2));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("{0} ({1}/{2})", Value In Array(Array(Custom String("Crystals charged with Moonlight"), Custom String("Demonic Portals closed"), Custom String("Corruption Tumors destroyed")), Subtract((Event Player).lIlllllllllIllllIIIIlllIlI, 6)), Add((Event Player).IIIIlllIllIIIllIllIlIlIlll, 1), (Event Player).IllllIIlllllIIllIIllIlIlIl));
            Call Subroutine(llIlllIllIIllllIIIIIllIlII);
        End;
        Call Subroutine(llIIIllllIlIllIlIIIlIlIIIl);
        If(Compare((Event Player).IIIIlllIllIIIllIllIlIlIlll, <, (Event Player).IllllIIlllllIIllIIllIlIlIl));
            Call Subroutine(IIIlIlllIIIIIllIlIllIIlIII);
        Else;
            Set Player Variable(Event Player, IIIllIIlIlIIIlllllllIIIlIl, Global.lIllIIlIlIIIIIlIIIlIlIlllI);
            Destroy Effect((Event Player).IlIlIlIIIlIIlIIlIlIlIIllll);
        End;
        Abort If(Compare(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4), >, 1));
        Call Subroutine(IIlIIlllIIIIIlIIIIllIIIIIl);
    }
}

rule ("IlIIlIllIIllllllllIlIlIllI") {
    event {
        Subroutine;
        IIlllllIllIIlIIIIIlllIlIIl;
    }
    actions {
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Add(1, Multiply((Event Player).lIIllIIIlIlIlIllIIIlIllIII, 0.001)));
        Set Global Variable(llIlIIlIlIlIllIllllIllIllI, 1);
        If(Compare(Random Real(0, 10000), <=, Global.lIIIIIllllIlIIIIlIIIlIIIll));
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 8);
        Else;
            Set Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 2);
            Call Subroutine(llIlIlllIIIIIlIIllIlIIIIlI);
            Modify Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Add, And(And(Compare(Global.IlllllIIlIIllIlIlIIIlIlIlI, ==, 5), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, 59)), Compare(Random Integer(0, 23), <, Round To Integer(Global.lIIIIIllllIlIIIIlIIIlIIIll, Down))));
        End;
        Set Player Variable(Event Player, lIIllllIlIIIllIIllllIIIlll, Random Value In Array(All Heroes));
        Modify Player Variable(Event Player, lIlIIlIlIlIIIlIlllllIlIIII, Add, 1);
        Set Player Variable(Event Player, IlIllIIlllllllllIIIIllllll, Multiply((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, 19));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, (Event Player).IlIllIIlllllllllIIIIllllll);
        Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII);
        Call Subroutine(lIIlllIIlIIlIlIIllIllIIIIl);
    }
}

rule ("llIlIllIIIIlIIIlIIlllIIlIl") {
    event {
        Subroutine;
        llIlIlllIIIIIlIIllIlIIIIlI;
    }
    actions {
        Set Global Variable(IlIIlIIIlllIIlIllIIIIIllIl, Multiply(Global.lIIIIIllllIlIIIIlIIIlIIIll, Value In Array(Array(200, 210, 265, 275, 285), Global.llIlIIlIlIlIllIllllIllIllI)));
        For Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, 0, 3, 1);
            If(Compare(Random Real(0, 1000), >, Global.IlIIlIIIlllIIlIllIIIIIllIl));
                Break;
            End;
            Modify Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, Add, 1);
        End;
    }
}

rule ("IIIIlllIlIlIIlIIIlIIIIlIlI") {
    event {
        Subroutine;
        lIIlIllllIIlIlIIIIIIlIIlII;
    }
    actions {
        Wait(1.5, Ignore Condition);
        Abort If(Or(Compare((Global.lIlIIlIIlIlIIlIlllllIlIIII).lllIlIIllIIllIIIIlllIIllII, >=, 3), Compare(Global.lIIlIlIlllllIllIIllIlllIIl, <=, 0)));
        Small Message(All Players(Team 2), If-Then-Else(Compare(Global.lIIlIlIlllllIllIIllIlllIIl, >, 1), Custom String("{0} Stones of Jordan sold to merchants", Global.lIIlIlIlllllIllIIllIlllIIl), Custom String("1 Stone of Jordan sold to merchants")));
    }
}

rule ("IlIIIIIlIlIlIIllIIlIIIlIll") {
    event {
        Subroutine;
        IlIllIIIIIlIlIIllIIIlllIll;
    }
    actions {
        Set Player Variable(Event Player, lIIIIlIlIIlIIlIllllllIIllI, Add(Total Time Elapsed, If-Then-Else(Is Dead(Event Player), 1.5, Multiply(Add(Raise To Power((Event Player).lllIlIIllIIllIIIIlllIIllII, 2), 1), 20))));
    }
}

rule ("IlIIlIIIlllIIIlllIIIIIllII") {
    event {
        Subroutine;
        lIIlIIlIlllIIlllIlIllIllIl;
    }
    actions {
        Abort If(Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 4)));
        Play Effect(All Players(Team 2), Good Pickup Effect, Color(White), Add(Position Of(Event Player), Up), True);
    }
}

rule ("lllllIlIlIIllllIllIIIlIIlI") {
    event {
        Subroutine;
        lllIlllIIIlIllllIIIIIIlIlI;
    }
    actions {
        Play Effect(All Players(Team 2), Buff Explosion Sound, Null, Event Player, 50);
    }
}

rule ("IlllIllIIIIlIlIlIllllIllII") {
    event {
        Subroutine;
        llIIlIllIllIIIIlIlllIlIlll;
    }
    actions {
        Abort If(Compare(Global.IllIIlIllllIIIllIlllIIlIIl, >, 2));
        Set Global Variable(IllIIlIllllIIIllIlllIIlIIl, 3);
        Set Global Variable(IIlIlllIlIIIIllIIlIlIlIlll, Array Slice(Global.IIlIlllIlIIIIllIIlIlIlIlll, 0, 7));
        Destroy Dummy Bot(Team 2, Slot Of(Global.IIIllIIlllIlllllllllIlIllI));
        Destroy Dummy Bot(Team 1, Slot Of(Event Player));
    }
}

rule ("llIllllIlIIIllIIIllIllIIIl") {
    event {
        Subroutine;
        IlllIlIIIIIllllIlllllIlllI;
    }
    actions {
        Set Status(Event Player, Null, Unkillable, 16000);
        Set Status(Global.IIIllIIlllIlllllllllIlIllI, Null, Unkillable, 16000);
        Start Facing(Event Player, Multiply(Global.IIlIllIIllIIlIllIIIIIIIIlI, -1), 1080, To World, None);
        Start Facing(Global.IIIllIIlllIlllllllllIlIllI, Multiply(Global.IllIllllIIIIllIIIIIIIlIIIl, -1), 1080, To World, None);
        Wait(0.5, Ignore Condition);
        Start Throttle In Direction(Event Player, Global.IIlIllIIllIIlIllIIIIIIIIlI, 1, To World, Replace existing throttle, None);
        Start Throttle In Direction(Global.IIIllIIlllIlllllllllIlIllI, Global.IllIllllIIIIllIIIIIIIlIIIl, 1, To World, Replace existing throttle, None);
        Start Holding Button(Event Player, Button(Primary Fire));
        Start Holding Button(Global.IIIllIIlllIlllllllllIlIllI, Button(Primary Fire));
        Wait(0.25, Ignore Condition);
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 7, Array(250, 150, 200, 200, 250, 450, 200, 400, 175, 300, 200, 225, 200, 550, 225, 200, 325, 200, 200, 500, 250, 200, 300, 200, 400, 200, 200, 550, 200, 200, 200, 200, 200, 300, 400, 300, 225, 500, 200));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 8, Array(8, 40, 25, False, 18, False, 6, 100, 35, 25, 100, 25, 30, 6, 6, 5, 100, 30, 20, False, 120, 60, 4, 15, False, False, False, 80, 45, 12, 12, 36, False, 8, False, 100, False, False, 16));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 11, Array(4.95, 5.4, 4.95, 3.465, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 5.4, 4.95, 4.95, 4.95, 4.95, 4.95, 6.188, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.95, 4.21, 4.95));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 12, Array(False, False, False, False, 21.43, 30, False, 30, False, 30, False, False, False, False, False, False, False, False, False, 30, False, False, False, False, 30, 21.43, False, False, False, False, False, False, False, False, False, 30, False, 30));
        Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 13, Array(5, 16, 16, 20, 18, 17, 19, 17, 22, 16, 20, 19, 20, 16, 20, 20, 18, 19, 19, 18, 20, 21, 18, 19, 17, 15, 18, 19, 19, 19, 20, 19, 19, 17, 18, 17, 20, 17, 19));
        While(Compare((Event Player).IIIllIlIIIIlIlllIlllIlIIlI, <, Count Of(All Heroes)));
            Start Forcing Player To Be Hero(Event Player, Value In Array(All Heroes, (Event Player).IIIllIlIIIIlIlllIlllIlIIlI));
            Start Forcing Player To Be Hero(Global.IIIllIIlllIlllllllllIlIllI, Value In Array(All Heroes, (Event Player).IIIllIlIIIIlIlllIlllIlIIlI));
            Set Weapon(Global.IIIllIIlllIlllllllllIlIllI, Add(1, Compare(Hero Of(Event Player), ==, Hero(Mercy))));
            Teleport(Event Player, Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 10));
            Teleport(Global.IIIllIIlllIlllllllllIlIllI, Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 9));
            Wait(0.25, Ignore Condition);
            If(Or(Compare(Max Health(Event Player), !=, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 7), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI)), Compare(Max Health(Global.IIIllIIlllIlllllllllIlIllI), !=, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 7), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI))));
                Call Subroutine(llIIlIllIllIIIIlIlllIlIlll);
                Abort;
            End;
            If(Or(Compare(Max Ammo(Event Player, 0), !=, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 8), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI)), Compare(Max Ammo(Global.IIIllIIlllIlllllllllIlIllI, 0), !=, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 8), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI))));
                Call Subroutine(llIIlIllIllIIIIlIlllIlIlll);
                Abort;
            End;
            Damage(Event Player, Null, 100);
            Damage(Global.IIIllIIlllIlllllllllIlIllI, Null, 100);
            If(Or(Compare(Absolute Value(Add(Subtract(Subtract(Max Health(Event Player), Health(Event Player)), 100), Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 12), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI))), >, 0.01), Compare(Absolute Value(Add(Subtract(Subtract(Max Health(Global.IIIllIIlllIlllllllllIlIllI), Health(Global.IIIllIIlllIlllllllllIlIllI)), 100), Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 12), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI))), >, 0.01)));
                Call Subroutine(llIIlIllIllIIIIlIlllIlIlll);
                Abort;
            End;
            Heal(Event Player, Null, 90);
            Heal(Global.IIIllIIlllIlllllllllIlIllI, Null, 90);
            If(Or(Compare(Absolute Value(Add(Subtract(Subtract(Max Health(Event Player), Health(Event Player)), 10), Multiply(Compare(Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 12), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI), ==, True), 10))), >, 0.01), Compare(Absolute Value(Add(Subtract(Subtract(Max Health(Global.IIIllIIlllIlllllllllIlIllI), Health(Global.IIIllIIlllIlllllllllIlIllI)), 10), Multiply(Compare(Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 12), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI), ==, True), 10))), >, 0.01)));
                Call Subroutine(llIIlIllIllIIIIlIlllIlIlll);
                Abort;
            End;
            If(Not((Event Player).IIIllIlIIIIlIlllIlllIlIIlI));
                Set Healing Dealt(Event Player, 0);
                Set Healing Dealt(Global.IIIllIIlllIlllllllllIlIllI, 0);
            End;
            Damage(Event Player, Global.IIIllIIlllIlllllllllIlIllI, 100);
            Damage(Global.IIIllIIlllIlllllllllIlIllI, Event Player, 100);
            If(Or(Compare(Absolute Value(Add(Subtract(Subtract(Max Health(Event Player), Health(Event Player)), 110), Multiply(Compare(Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 12), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI), ==, True), Add(Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 12), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI), 10)))), >, 0.01), Compare(Absolute Value(Add(Subtract(Subtract(Max Health(Global.IIIllIIlllIlllllllllIlIllI), Health(Global.IIIllIIlllIlllllllllIlIllI)), 110), Multiply(Compare(Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 12), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI), ==, True), Add(Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 12), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI), 10)))), >, 0.01)));
                Call Subroutine(llIIlIllIllIIIIlIlllIlIlll);
                Abort;
            End;
            If(Not((Event Player).IIIllIlIIIIlIlllIlllIlIIlI));
                Set Healing Dealt(Event Player, 100);
                Set Healing Dealt(Global.IIIllIIlllIlllllllllIlIllI, 100);
            End;
            Heal(Event Player, Event Player, 95);
            Heal(Global.IIIllIIlllIlllllllllIlIllI, Global.IIIllIIlllIlllllllllIlIllI, 95);
            If(Or(Compare(Absolute Value(Add(Subtract(Subtract(Max Health(Event Player), Health(Event Player)), 15), Multiply(Compare(Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 12), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI), ==, True), 15))), >, 0.01), Compare(Absolute Value(Add(Subtract(Subtract(Max Health(Global.IIIllIIlllIlllllllllIlIllI), Health(Global.IIIllIIlllIlllllllllIlIllI)), 15), Multiply(Compare(Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 12), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI), ==, True), 15))), >, 0.01)));
                Call Subroutine(llIIlIllIllIIIIlIlllIlIlll);
                Abort;
            End;
            If(Or(Compare(Absolute Value(Subtract(Horizontal Speed Of(Global.IIIllIIlllIlllllllllIlIllI), Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 11), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI))), >, 0.01), Compare(Absolute Value(Subtract(Horizontal Speed Of(Event Player), Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 11), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI))), >, 0.01)));
                Call Subroutine(llIIlIllIllIIIIlIlllIlIlll);
                Abort;
            End;
            Wait(0.25, Ignore Condition);
            If(And(And(Compare((Event Player).IIIllIlIIIIlIlllIlllIlIIlI, !=, 24), Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 8), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI)), Compare(Ammo(Global.IIIllIIlllIlllllllllIlIllI, 0), >=, Max Ammo(Global.IIIllIIlllIlllllllllIlIllI, 0))));
                Call Subroutine(llIIlIllIllIIIIlIlllIlIlll);
                Abort;
            End;
            If(Or(Compare(Ultimate Charge Percent(Event Player), !=, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 13), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI)), Compare(Ultimate Charge Percent(Global.IIIllIIlllIlllllllllIlIllI), !=, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 13), (Event Player).IIIllIlIIIIlIlllIlllIlIIlI))));
                Call Subroutine(llIIlIllIllIIIIlIlllIlIlll);
                Abort;
            End;
            Modify Player Variable(Event Player, IIIllIlIIIIlIlllIlllIlIIlI, Add, 1);
        End;
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 18, 1);
            Damage(Global.IIIllIIlllIlllllllllIlIllI, Event Player, 50);
            Damage(Event Player, Global.IIIllIIlllIlllllllllIlIllI, 50);
            Heal(Event Player, Global.IIIllIIlllIlllllllllIlIllI, 50);
            Heal(Global.IIIllIIlllIlllllllllIlIllI, Event Player, 50);
        End;
        Wait(5, Ignore Condition);
        If(Or(Compare(Ultimate Charge Percent(Event Player), !=, 57), Compare(Ultimate Charge Percent(Global.IIIllIIlllIlllllllllIlIllI), !=, 57)));
            Call Subroutine(llIIlIllIllIIIIlIlllIlIlll);
            Abort;
        End;
        If(Compare(Global.IllIIlIllllIIIllIlllIIlIIl, <, 2));
            Set Global Variable(IllIIlIllllIIIllIlllIIlIIl, 2);
        End;
        Set Global Variable(IIlIlllIlIIIIllIIlIlIlIlll, Array Slice(Global.IIlIlllIlIIIIllIIlIlIlIlll, 0, 7));
        Destroy Dummy Bot(Team 2, Slot Of(Global.IIIllIIlllIlllllllllIlIllI));
        Destroy Dummy Bot(Team 1, Slot Of(Event Player));
    }
}

rule ("lllIIIlIllIIIIllIllIIlIIll") {
    event {
        Subroutine;
        lIIllIllllIlIIIlllIIllIllI;
    }
    actions {
        If(Not(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 9)));
            Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 9, Value In Array(Global.lIIllIllIllIlIIIlllIlllIIl, 2));
        End;
        If(Not(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 10)));
            Set Global Variable At Index(IIlIlllIlIIIIllIIlIlIlIlll, 10, Value In Array(Global.lIIllIllIllIlIIIlllIlllIIl, 4));
        End;
        Create Dummy Bot(Hero(Reaper), Team 2, 6, Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 9), Multiply(Global.IllIllllIIIIllIIIIIIIlIIIl, -1));
        Create Dummy Bot(Hero(Reaper), Team 1, -1, Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 10), Multiply(Global.IIlIllIIllIIlIllIIIIIIIIlI, -1));
        Wait Until(Compare(Global.IllIIlIllllIIIllIlllIIlIIl, >, 1), 16000);
        Start Damage Modification(All Players(Team 1), All Players(Team 1), False, Receivers and Damagers);
    }
}

rule ("IIIIIlIIIIIllllIIllIlIIlIl") {
    event {
        Subroutine;
        IlIllIllIllIlIlIIlIIIlllIl;
    }
    actions {
        Clear Status(Event Player, Invincible);
        Clear Status(Event Player, Rooted);
        Allow Button(Event Player, Button(Primary Fire));
        Allow Button(Event Player, Button(Secondary Fire));
        Allow Button(Event Player, Button(Ability 1));
        Allow Button(Event Player, Button(Ability 2));
        Allow Button(Event Player, Button(Ultimate));
        Allow Button(Event Player, Button(Interact));
        Allow Button(Event Player, Button(Crouch));
        Allow Button(Event Player, Button(Melee));
        Allow Button(Event Player, Button(Reload));
        If(Compare((Event Player).IlllIllIlIlllIlIlIIlIllIlI, ==, 2));
            Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, False);
            Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        End;
        Set Player Variable(Event Player, IlllIllIlIlllIlIlIIlIllIlI, 0);
        Set Player Variable(Event Player, lIlIIlllIIIlIllllIllIIlIlI, Null);
        Call Subroutine(lIlllIlIIIllllIIllIlIlIIIl);
    }
}

rule ("IlIIlIllllIlIlIllIlIlIlllI") {
    event {
        Subroutine;
        IlIllIIIlllIIIllIIlllllllI;
    }
    actions {
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 3));
        Call Subroutine(IlIIlllIllIIllIIIIlIlIllll);
        Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, If-Then-Else(And(Or((Event Player).IIlIIIIllllIllIIlIIIIlIlll, Not(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 17)), 100))), (Event Player).lIlIlIIIIllIlllIIIIIlIlIll), Custom String("{0} Gold ({1} Favor)", (Event Player).lIlIlIIIIllIlllIIIIIlIlIll, (Event Player).IIllIIllIIIIIlIlIIllIllllI), Custom String("Not available")));
        Call Subroutine(IIIlIlllIlIIIlIlllIllIIllI);
        Big Message(Event Player, Custom String("Quest: {0} Gold\r\nSoul Stone: {1} Gold (1 Favor)\r\n{2}", Add(27, Round To Integer(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 2.25), Up)), Add(36, Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 3)), Custom String("Gamble: {0} Gold (1 Favor)\r\nImbue: {1}\r\nReroll: {2}", Add(18, Round To Integer(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 1.5), Up)), (Event Player).lIlIlIIIIllIlllIIIIIlIlIll, Custom String("{0} Gold ({1} Favor)", (Event Player).lIllIIlIllllIlIIIllIIllIlI, (Event Player).IIllIIllIllllllllIIlIIIIll))));
    }
}

rule ("lIIIIIlIllllIIIlIlllIlIllI") {
    event {
        Subroutine;
        IlIlllllIlIIIlIlllIlIlIIll;
    }
    actions {
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 4));
        Set Player Variable(Event Player, IlIllIlIlIlllIIlIllllllllI, Add(Total Time Elapsed, Multiply(2, Number Of Players(Team 2))));
        Set Global Variable(IIIlllllIIIllllllIIllIlIIl, Add(Total Time Elapsed, 5));
        Set Player Variable(Event Player, IllIlIlIIlIIIIIIIIlIlIlIlI, Add(Total Time Elapsed, 0.25));
    }
}

rule ("lllIIIIlIIIllIllIIlIllllll") {
    event {
        Subroutine;
        llIIlIIllllllIIlIIIIIIlIll;
    }
    actions {
        Set Player Variable(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Global.lIIIIIllllIlIIIIlIIIlIIIll);
        Set Player Variable(Event Player, IIIlIlIllIlllIllllIlIllIll, Global.IIIIlllIIIIlIIIlIIIIllllIl);
        Set Player Variable(Event Player, llllIIlIlllllllIIllIlIllII, Global.IIllIIIlIllIlIlllIlllIlllI);
    }
}

rule ("IIlllIIlIlIIllIIIIIIIlllIl") {
    event {
        Subroutine;
        llIlIlIlIllIlIIIlIlllllIII;
    }
    actions {
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, Global.llIlIIlIlIlIllIllllIllIllI, Round To Integer(Multiply(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, Global.lIIlllIllllIlIIIIlIllIIIlI), 0.1), Down));
        Set Global Variable At Index(lllIIllllIlIIlllIlIIIIlIIl, Add(Global.llIlIIlIlIlIllIllllIllIllI, 1), Modulo(Value In Array(Global.lllIIllllIlIIlllIlIIIIlIIl, Global.lIIlllIllllIlIIIIlIllIIIlI), 10));
    }
}

rule ("llllIllIIlIIIIIIIlIIlIllII") {
    event {
        Subroutine;
        IlllIIIIlIIlIIIIllllllllIl;
    }
    actions {
        Small Message(Event Player, Custom String("Not enough Horadric Favor (required: {0})", (Event Player).IIllIIllIIIIIlIlIIllIllllI));
    }
}

rule ("IlIIlIlIIIIIlllllllIlIIIII") {
    event {
        Subroutine;
        IIIllIlIIllIllllIIIlllIlIl;
    }
    actions {
        Set Player Variable(Event Player, IllIlIlIIlIIIIIIIIlIlIlIlI, Add(Total Time Elapsed, 0.25));
        Modify Player Variable(Event Player, IlllIlIIIIIlIlllIIIIlIllll, Subtract, (Event Player).IIllIIllIIIIIlIlIIllIllllI);
    }
}

rule ("IllIlllIIIIllIIllIllIIIIIl") {
    event {
        Subroutine;
        IllllllIlIlIIIlIlIIIlIIlII;
    }
    actions {
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 1));
    }
}

rule ("lIllIllllllllIlIllIllIlIlI") {
    event {
        Subroutine;
        llIIlIIIIIIIllIlllIIIIlIII;
    }
    actions {
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 1.5));
    }
}

rule ("llIlllIIlIIlIllIIIIlIIIiIl") {
    event {
        Subroutine;
        llIlIIIlIIlIIIIIllIlIIllIl;
    }
    actions {
        Teleport(Event Player, (Event Player).IIIIIlIlIlIllIlllllIIllIll);
        Abort If(Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 4)));
        Play Effect(All Players(Team 2), Good Pickup Effect, Color(White), (Event Player).IIIIIlIlIlIllIlllllIIllIll, True);
    }
}

rule ("lIilIIIIIIIllIiIlIlIIllIlI") {
    event {
        Subroutine;
        IIlIIIlllIIIllIlllIllllIII;
    }
    actions {
        If(And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 5)), <, 3), Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True)));
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(5, (Event Player).lllllIIlllIlllllIIlIIlllII), Add((Event Player).llllIIlIlllllllIIllIlIllII, 2));
            For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 2, 5, 1);
                Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, (Event Player).lllllIIlllIlllllIIlIIlllII), 0);
            End;
        End;
        Set Player Variable(Event Player, IIlIIllIIIllIllllIIIIlIIll, Multiply(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 2)), Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True)));
        Set Player Variable(Event Player, IllIIIIlIlIIlIIllIllIIIlll, Multiply(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 3)), Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True)));
        Set Player Variable(Event Player, IIIIlIIIIllllIlllIIIlllIIl, Multiply(Add(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 4)), 1), And((Event Player).llllIIlIlllllllIIllIlIllII, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(1, (Event Player).lllllIIlllIlllllIIlIIlllII)), ==, 6))));
    }
}

rule ("IlllIlIIIlIiIlIllIIliIIlll") {
    event {
        Subroutine;
        IlllIIlIllIlllllIlIIllIlIl;
    }
    actions {
        Set Global Variable(llllIIIIllIIlIlIIllIIllIll, Or(Or(Or(Or(Or(Or(Or(Or(Is True For Any(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 6, 5), Compare(Current Array Element, >, 50)), Not(First Of((Event Player).IIlIlIlIIlIIIllIllIlIIllll))), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 1), >, 7)), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 17), >=, 63)), And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 1), !=, 7), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 17), >, 29))), And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 1), >=, 6), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 13), !=, 7))), And(Not(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 1)), Or(And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 13), ==, 9), Is True For Any(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 11, 2), And(Current Array Element, Compare(Current Array Element, <, 7)))), And(And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 13), ==, 8), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 12)), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 12), <, 7))))), And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 1), ==, 6), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <=, 99))), And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 5), >=, 3), Or(Or(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 121), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 2), >=, 6)), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, 4), >=, 5)))));
        Modify Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, 17, Add, 100);
    }
}

rule ("lIIIIIIlIiIllIIIIIlIllIili") {
    event {
        Subroutine;
        lllIllIlIIllllIlIlIlllllll;
    }
    actions {
        Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, 0);
        Set Global Variable(llllIIIIllIIlIlIIllIIllIll, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 13)));
        If((Event Player).IIllIIlIIllIIlIIlIlllIIllI);
            If(Or(Compare(Global.llllIIIIllIIlIlIIllIIllIll, ==, 9), And(Compare(Global.llllIIIIllIIlIlIIllIIllIll, >=, 7), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 11)), <, 7))));
                Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, 1);
            Else If(And(Is True For All(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 11), 3), And(Current Array Element, Compare(Current Array Element, <=, 6))), Is True For All(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 14), 3), Compare(Current Array Element, ==, 9))));
                Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, 2);
            End;
        Else If(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, ==, 4));
            If(And(Is True For All(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 12), 2), And(And(Current Array Element, Compare(Current Array Element, <=, 6)), Compare(Current Array Element, ==, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 11))))), Is True For All(Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 14), 3), Compare(Current Array Element, ==, 9))));
                Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, 3);
            End;
        Else If(And(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, ==, 5), Compare(Global.llllIIIIllIIlIlIIllIIllIll, ==, 9)));
            Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, 4);
        Else If(Compare((Event Player).IIlIIIIllllIllIIlIIIIlIlll, >=, 6));
            Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, Add(Subtract((Event Player).IIlIIIIllllIllIIlIIIIlIlll, 1), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 17)), 100), >=, 30)));
        End;
        Set Player Variable At Index(Event Player, llIIIIIIIlIIIIlIlIIIIlIllI, 0, Round To Integer(Global.lIlIlIIlIIIIlIllIIllllllll, To Nearest));
        Set Player Variable At Index(Event Player, llIIIIIIIlIIIIlIlIIIIlIllI, 1, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 1), First Of((Event Player).llIIIIIIIlIIIIlIlIIIIlIllI)));
    }
}

rule ("lIIlIiIllIlilIlIIlilIIllIl") {
    event {
        Subroutine;
        IIIlIIIIllllIllllIlIIlIlll;
    }
    actions {
        If(Compare((Event Player).lIIIIIIlIIllllIllIlIIllIlI, ==, Empty Array));
            Small Message(Event Player, Custom String("No item to buy back"));
            Abort;
        End;
        Set Global Variable(IIllllIlIIlIIIllIllIIIIlII, Subtract(Count Of((Event Player).lIIIIIIlIIllllIllIlIIllIlI), 19));
        Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Multiply(Round To Integer(Multiply(Value In Array((Event Player).lIIIIIIlIIllllIllIlIIllIlI, Add(Global.IIllllIlIIlIIIllIllIIIIlII, 18)), 0.125), Up), Compare(Value In Array((Event Player).lIIIIIIlIIllllIllIlIIllIlI, Add(Global.IIllllIlIIlIIIllIllIIIIlII, 17)), <, 100)));
        If(Compare((Event Player).IlIIllllIlllIllIIIllIlIlll, <, (Event Player).lIllIIlIllllIlIIIllIIllIlI));
            Small Message(Event Player, Custom String("Not enough gold to buy back item (cost: {0})", (Event Player).lIllIIlIllllIlIIIllIIllIlI));
            Abort;
        End;
        Modify Player Variable(Event Player, IlIIllllIlllIllIIIllIlIlll, Subtract, (Event Player).lIllIIlIllllIlIIIllIIllIlI);
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Value In Array(Global.lIIlIllllllIlllIlIIlIIllll, Value In Array((Event Player).lIIIIIIlIIllllIllIlIIllIlI, Add(Global.IIllllIlIIlIIIllIllIIIIlII, 1))));
        Set Player Variable(Event Player, lIIllllIlIIIllIIllllIIIlll, Value In Array((Event Player).lIIIIIIlIIllllIllIlIIllIlI, Global.IIllllIlIIlIIIllIllIIIIlII));
        Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Value In Array((Event Player).lIIIIIIlIIllllIllIlIIllIlI, Add(Global.IIllllIlIIlIIIllIllIIIIlII, 18)));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 4, (Event Player).lIllIIlIllllIlIIIllIIllIlI);
        If(Compare(Value In Array((Event Player).lIIIIIIlIIllllIllIlIIllIlI, Add(Global.IIllllIlIIlIIIllIllIIIIlII, 1)), <, 7));
            Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Custom String("Item Power {0}", (Event Player).lIllIIlIllllIlIIIllIIllIlI));
        End;
        Modify Player Variable(Event Player, lIlIIlIlIlIIIlIlllllIlIIII, Add, 1);
        Set Player Variable(Event Player, IlIllIIlllllllllIIIIllllll, Multiply((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, 19));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, (Event Player).IlIllIIlllllllllIIIIllllll);
        Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII);
        Modify Player Variable(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Append To Array, Array Slice((Event Player).lIIIIIIlIIllllIllIlIIllIlI, Global.IIllllIlIIlIIIllIllIIIIlII, 19));
        Set Player Variable(Event Player, lIIIIIIlIIllllIllIlIIllIlI, Array Slice((Event Player).lIIIIIIlIIllllIllIlIIllIlI, 0, Global.IIllllIlIIlIIIllIllIIIIlII));
        Call Subroutine(lllIlllIlIlIllIlIllIIlllIl);
        Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
    }
}

rule ("IIlIIllIIlIIIlIIlIlIIIlIlI") {
    event {
        Subroutine;
        llIIIllllIlIllIlIIIlIlIIIl;
    }
    actions {
        Abort If(Compare((Event Player).IIIIlllIllIIIllIllIlIlIlll, >=, (Event Player).IllllIIlllllIIllIIllIlIlIl));
        If(Compare((Event Player).lIlllllllllIllllIIIIlllIlI, ==, 4));
            Set Player Variable(Event Player, IIIIlllIllIIIllIllIlIlIlll, Min(Add((Event Player).IIIIlllIllIIIllIllIlIlIlll, (Event Player).lIIllllIlIIIllIIllllIIIlll), (Event Player).IllllIIlllllIIllIIllIlIlIl));
        Else;
            Modify Player Variable(Event Player, IIIIlllIllIIIllIllIlIlIlll, Add, 1);
        End;
        If(Compare((Event Player).IIIIlllIllIIIllIllIlIlIlll, <, (Event Player).IllllIIlllllIIllIIllIlIlIl));
            Set Player Variable At Index(Event Player, IIlllIlIIIlIlIlIlIIIIIllII, 1, Custom String("{0} {1}/{2}", First Of((Event Player).IIlllIlIIIlIlIlIlIIIIIllII), (Event Player).IIIIlllIllIIIllIllIlIlIlll, (Event Player).IllllIIlllllIIllIIllIlIlIl));
            Abort;
        End;
        If(Compare((Event Player).IlIIIlIIlIIIIlIlIlIlIIlIll, <=, 42));
            Set Player Variable(Event Player, IlIIIlIIlIIIIlIlIlIlIIlIll, 43);
            Call Subroutine(llIIIIlllIIIIIllllllIllllI);
            Set Player Variable(Event Player, IlIIIIIlllIlIIlIlIlllIlllI, Global.IlIlIIIlIIllllIllIlllllIll);
        End;
        Big Message(Event Player, Custom String("Quest complete"));
        Set Player Variable At Index(Event Player, IIlllIlIIIlIlIlIlIIIIIllII, 1, Custom String("Quest complete"));
        Abort If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), <, 2));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Quest completed!"));
        Call Subroutine(llIlllIllIIllllIIIIIllIlII);
    }
}

rule ("llIlIIlIlIIIllIllllIlIIlll") {
    event {
        Subroutine;
        IIIlIlllIIIIIllIlIllIIlIII;
    }
    actions {
        Set Player Variable(Event Player, IIIllIIlIlIIIlllllllIIIlIl, Nearest Walkable Position(Add(Random Value In Array(Global.lIIllIllIllIlIIIlllIlllIIl), Vector(Random Integer(-17, 17), Random Integer(-15, 15), Random Integer(-17, 17)))));
        Set Player Variable(Event Player, IlIIIllIIlIIllllIlIIllllIl, 18);
    }
}

rule ("llIllIllIIIlllllIIIlllIIIl") {
    event {
        Subroutine;
        IIlIIIIIllIIlIIIIlIlIlllII;
    }
    actions {
        If(And(Compare((Event Player).lIlllllllllIllllIIIIlllIlI, >=, 6), Compare((Event Player).IIIIlllIllIIIllIllIlIlIlll, <, (Event Player).IllllIIlllllIIllIIllIlIlIl)));
            Destroy Effect((Event Player).IlIlIlIIIlIIlIIlIlIlIIllll);
            If(Compare(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4), <, 2));
                Set Player Variable(Event Player, lIlllllllllIllllIIIIlllIlI, False);
                Call Subroutine(IIlIIlllIIIIIlIIIIllIIIIIl);
            End;
        End;
        Destroy HUD Text((Event Player).lIIllIlIlllIIllIlIIllllIIl);
        Set Player Variable(Event Player, lIlllllllllIllllIIIIlllIlI, False);
    }
}

rule ("llllllllllllIIllIIIIllIlll") {
    event {
        Subroutine;
        IIllllIlIIIllllllIlIIIlllI;
    }
    actions {
        If(First Of((Event Player).lIlIlllIllIlIIIllllIllIlll));
            If((Event Player).lIlllllllllIllllIIIIlllIlI);
                Big Message(Event Player, Custom String("Quest abandoned"));
                Call Subroutine(IIlIIIIIllIIlIIIIlIlIlllII);
            End;
            Abort;
        End;
        If((Event Player).lIlllllllllIllllIIIIlllIlI);
            If(Compare((Event Player).IIIIlllIllIIIllIllIlIlIlll, <, (Event Player).IllllIIlllllIIllIIllIlIlIl));
                Small Message(Event Player, Custom String("Quest not complete yet"));
                Abort;
            End;
            If(Compare((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, >=, 5));
                Small Message(Event Player, Custom String("Inventory full"));
                Abort;
            End;
            Big Message(Event Player, Custom String("Quest turned in"));
            Play Effect(Event Player, Ring Explosion Sound, Null, Event Player, 75);
            Call Subroutine(IIlIIIIIllIIlIIIIlIlIlllII);
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 8, Multiply(2.5, Add(1, Multiply(Compare((Event Player).IIIIlIIIIllllIlllIIIlllIIl, ==, 4), Add(0.5, Multiply(0.1, (Event Player).IIlIIllIIIllIllllIIIIlIIll))))));
            Set Player Variable(Event Player, IlllIlIIIIIlIlllIIIIlIllll, Min(Add((Event Player).IlllIlIIIIIlIlllIIIIlIllll, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 8)), 40));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 4, Add(1, Multiply((Event Player).IIIlIlIIlIIlIIIlllllIIIlIl, 0.01)));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 5, Multiply(Multiply(12.5, Add(Multiply(0.05, Raise To Power(Add(Multiply((Event Player).IIIlIlIllIlllIllllIlIllIll, 0.333), 1), 2)), Multiply(Add(Multiply((Event Player).IIIlIlIllIlllIllllIlIllIll, 0.333), 1), 0.95))), Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 4)));
            Modify Player Variable(Event Player, llIIIIIIllIIlIIlIlIIIIllII, Add, Multiply(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 5), Subtract(1, Multiply(Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True), 0.9))));
            If(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2));
                Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Quest Reward: {0} EXP (+{1}%) / {2} HF", Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 5), Round To Integer(Multiply(100, Subtract(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 4), 1)), To Nearest), Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 8)));
                Call Subroutine(llIlllIllIIllllIIIIIllIlII);
            End;
            Call Subroutine(IlllllIlIllllIIlllIllllllI);
            Call Subroutine(IIlllllIllIIlIIIIIlllIlIIl);
            Abort;
        End;
        Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Add(27, Round To Integer(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 2.25), Up)));
        If(Compare((Event Player).IlIIllllIlllIllIIIllIlIlll, <, (Event Player).lIllIIlIllllIlIIIllIIllIlI));
            Small Message(Event Player, Custom String("Not enough gold (cost: {0})", (Event Player).lIllIIlIllllIlIIIllIIllIlI));
            Abort;
        End;
        Modify Player Variable(Event Player, IlIIllllIlllIllIIIllIlIlll, Subtract, (Event Player).lIllIIlIllllIlIIIllIIllIlI);
        Set Player Variable(Event Player, IIIIlllIllIIIllIllIlIlIlll, 0);
        If(And(And(Not(Random Integer(0, 5)), Compare((Event Player).llIIlIIIIlIllIIIIIlIIlIIll, !=, 1)), Or(And((Event Player).IIlIllllllIIlIIIllllIIllII, Compare((Event Player).IlllIlIIIIIlIlllIIIIlIllll, >=, 1)), And(Compare((Event Player).IlllIlIIIIIlIlllIIIIlIllll, >=, 2), Compare((Event Player).IlIIllllIlllIllIIIllIlIlll, >=, Add(36, Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 3)))))));
            Set Player Variable(Event Player, lIlllllllllIllllIIIIlllIlI, 1);
        Else;
            Set Player Variable(Event Player, lIlllllllllIllllIIIIlllIlI, Random Value In Array(Remove From Array(Array(2, 3, 4, 5, 6, 7, 8), (Event Player).llIIlIIIIlIllIIIIIlIIlIIll)));
        End;
        Set Player Variable(Event Player, llIIlIIIIlIllIIIIIlIIlIIll, (Event Player).lIlllllllllIllllIIIIlllIlI);
        Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Add(3, Round To Integer(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 0.017), To Nearest)));
        Set Player Variable(Event Player, IllllIIlllllIIllIIllIlIlIl, Value In Array(Array(1, Add(4, Round To Integer(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 0.6), To Nearest)), 40, Round To Integer(Multiply(Add(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 0.083), 0.625), Add(18, Multiply(0.687, (Event Player).llIlIIIlIlIIlIIIllllIlllII))), Up), Add(2, Round To Integer(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 0.033), To Nearest)), Global.IIIIlllIIIIlIIIlIIIIllllIl, Global.IIIIlllIIIIlIIIlIIIIllllIl, Global.IIIIlllIIIIlIIIlIIIIllllIl), Subtract((Event Player).lIlllllllllIllllIIIIlllIlI, 1)));
        Set Player Variable At Index(Event Player, IIlllIlIIIlIlIlIlIIIIIllII, 0, Value In Array(Array(Custom String("Kill {0}", Value In Array(Global.IIlIllIIlIIllIlIlIIllIIIIl, 2)), Custom String("Kill {0}s", Value In Array(Global.IIlIllIIlIIllIlIlIIllIIIIl, 1)), Custom String("Kill enemies"), Custom String("Pick up gold"), Custom String("Obtain equippable items"), Custom String("Charge Crystal with Moonlight"), Custom String("Close Demonic Portals"), Custom String("Destroy Corruption Tumors")), Subtract((Event Player).lIlllllllllIllllIIIIlllIlI, 1)));
        Set Player Variable At Index(Event Player, IIlllIlIIIlIlIlIlIIIIIllII, 1, Custom String("{0} {1}/{2}", First Of((Event Player).IIlllIlIIIlIlIlIlIIIIIllII), (Event Player).IIIIlllIllIIIllIllIlIlIlll, (Event Player).IllllIIlllllIIllIIllIlIlIl));
        Create HUD Text(Event Player, Null, Null, Value In Array((Event Player).IIlllIlIIIlIlIlIlIIIIIllII, 1), Top, -2, Null, Null, Color(Aqua), String, Visible Never);
        Set Player Variable(Event Player, lIIllIlIlllIIllIlIIllllIIl, Last Text ID);
        Big Message(Event Player, Value In Array(Array(Custom String("Quest started - Kill {0} {1}", (Event Player).IllllIIlllllIIllIIllIlIlIl, Value In Array(Global.IIlIllIIlIIllIlIlIIllIIIIl, 2)), Custom String("Quest started - Kill {0} {1}s", (Event Player).IllllIIlllllIIllIIllIlIlIl, Value In Array(Global.IIlIllIIlIIllIlIlIIllIIIIl, 1)), Custom String("Quest started - Kill {0} enemies", (Event Player).IllllIIlllllIIllIIllIlIlIl), Custom String("Quest started - Pick up {0} gold", (Event Player).IllllIIlllllIIllIIllIlIlIl), Custom String("Quest started - Obtain {0} equippable items", (Event Player).IllllIIlllllIIllIIllIlIlIl), Custom String("Quest started - Charge {0} Crystals with Moonlight", (Event Player).IllllIIlllllIIllIIllIlIlIl), Custom String("Quest started - Close {0} Demonic Portals", (Event Player).IllllIIlllllIIllIIllIlIlIl), Custom String("Quest started - Destroy {0} Corruption Tumors", (Event Player).IllllIIlllllIIllIIllIlIlIl)), Subtract((Event Player).lIlllllllllIllllIIIIlllIlI, 1)));
        Abort If(Compare((Event Player).lIlllllllllIllllIIIIlllIlI, <, 6));
        Call Subroutine(IIIlIlllIIIIIllIlIllIIlIII);
        Skip(Multiply(Subtract((Event Player).lIlllllllllIllllIIIIlllIlI, 6), 2));
        Create Effect(Event Player, Light Shaft, Color(Sky Blue), Add((Event Player).IIIllIIlIlIIIlllllllIIIlIl, Down), 1, Position and Radius);
        Skip(3);
        Create Effect(Event Player, Good Aura, Color(Red), Add((Event Player).IIIllIIlIlIIIlllllllIIIlIl, Multiply(Up, 2.5)), 1.75, Position and Radius);
        Skip(1);
        Create Effect(Event Player, Bad Aura, Color(Green), Add((Event Player).IIIllIIlIlIIIlllllllIIIlIl, Multiply(Up, 1.5)), 1.25, Position and Radius);
        //lbl_0:
        //lbl_1:
        Set Player Variable(Event Player, IlIlIlIIIlIIlIIlIlIlIIllll, Last Created Entity);
        Abort If(Compare(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4), >=, 2));
        Call Subroutine(IIlIIlllIIIIIlIIIIllIIIIIl);
    }
}

rule ("llllIlIlIIIlIllllIIIlIIlll") {
    event {
        Subroutine;
        llIllIlIIIllIIlIlIlllIIllI;
    }
    actions {
        If(And(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 4), Or(Not(Is Using Ultimate(Event Player)), Is Duplicating(Event Player))));
            If(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 10));
                Play Effect(Event Player, Bad Explosion, Color(Blue), Add(Position Of(Global.lIIlllIllllIlIIIIlIllIIIlI), Up), 1);
            End;
            Set Ultimate Charge(Event Player, Min(Add(Add(Ultimate Charge Percent(Event Player), 3), Multiply(Multiply(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 4), Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 2)), Add(1, Multiply(5, Is Duplicating(Event Player))))), 100));
        End;
        Abort If(Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 1)));
        Set Global Variable(IlIIlIIIlllIIlIllIIIIIllIl, First Of((Event Player).llllllIllIIlllllIlIIlIIllI));
        Set Player Variable At Index(Event Player, llllllIllIIlllllIlIIlIIllI, 8, Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 7));
        If((Event Player).IIllIIlIIllIIlIIlIlllIIllI);
            Set Global Variable(IlIIlIIIlllIIlIllIIIIIllIl, Random Integer(1, 10));
            Set Player Variable At Index(Event Player, llllllIllIIlllllIlIIlIIllI, 8, Random Integer(1, 3));
        End;
        Abort If(Not(Global.IlIIlIIIlllIIlIllIIIIIllIl));
        Skip(Multiply(Subtract(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 8), 1), 2));
        Play Effect(Filtered Array(All Players(Team 2), Value In Array((Current Array Element).lIlIIIIlIIlIIlIIlIIIllllII, 11)), Good Pickup Effect, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 4), Subtract(Global.IlIIlIIIlllIIlIllIIIIIllIl, 1)), Position Of(Global.lIIlllIllllIlIIIIlIllIIIlI), True);
        Abort;
        Play Effect(Filtered Array(All Players(Team 2), Value In Array((Current Array Element).lIlIIIIlIIlIIlIIlIIIllllII, 11)), Bad Pickup Effect, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 4), Subtract(Global.IlIIlIIIlllIIlIllIIIIIllIl, 1)), Position Of(Global.lIIlllIllllIlIIIIlIllIIIlI), True);
        Abort;
        Play Effect(Filtered Array(All Players(Team 2), Value In Array((Current Array Element).lIlIIIIlIIlIIlIIlIIIllllII, 11)), Ring Explosion, Value In Array(Value In Array(Global.IIlIlllIlIIIIllIIlIlIlIlll, 4), Subtract(Global.IlIIlIIIlllIIlIllIIIIIllIl, 1)), Add(Position Of(Global.lIIlllIllllIlIIIIlIllIIIlI), Up), 4);
    }
}

rule ("IIlIIlIlIlIIIIIlllIlIlllll") {
    event {
        Subroutine;
        lIIlllIlIIlIIIllIllllIlllI;
    }
    actions {
        If(Compare((Event Player).lIIIlIIllIIIlllllIIIIllIlI, <, 0));
            Set Player Variable(Event Player, lIIIlIIllIIIlllllIIIIllIlI, 41);
        End;
        Skip(Multiply((Event Player).lIIIlIIllIIIlllllIIIIllIlI, 2));
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Welcome to Loot Quest!"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("This is a regular map, recommended for player level 1-60."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("If you are new to the game mode, consider trying the tutorial:\r\nShare Code - CTHE4"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Or read the following instructions:"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Greetings, Adventurer!"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("I will teach you everything you need to know\r\nabout fighting the Great Evils that are\r\nhaunting these lands."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("To grow stronger, you must earn experience\r\nby defeating evil creatures."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Along the way, you will find gold and\r\npowerful equipment."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Press *Crouch* to pick up gold or an item\r\nleft behind by a monster."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("You can also press *Crouch* to use any of\r\nthe stations in town."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("See your currently equipped item on the\r\nleft side and items in your inventory on the\r\nright side of your screen."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("You can carry up to five items in your\r\ninventory. Press *Melee* to select the\r\nnext one if you have more than one."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("To equip the selected inventory item, use\r\n*Communicate: Acknowledge or Yes*."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("You can also sell the selected inventory\r\nitem for gold by pressing *Interact*."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("(Alternatively you can sell items with\r\n*Crouch + Melee*.)"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("(To change selling method, press *Interact* or *Melee*\r\nwhile standing inside the white station in town.)"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("When fighting enemies, use *Communicate:\r\nNeed healing or Fall back* to cast a\r\ntown portal spell and return to town."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Items determine which hero you are and\r\ngrant bonuses to your base stats:\r\n'Attack, Defense, Health, Speed, Sustain'"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("An item's power value is an indicator of its\r\noverall value and rarity."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("The quality (color) of an item determines\r\nhow many default abilities you have\r\naccess to."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("High quality items can even grant you\r\none or more powerful special abilities."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("*Communicate: Ultimate status or Ready* will\r\nshow you the base stat bonuses and special\r\nabilities of your equipped item."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("*Communicate: Thanks or You are Welcome*\r\nwill inform you about the prices of all\r\nservices you can use in town."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Most services cost both gold and\r\nHoradric Favor to use."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("You can slowly earn Horadric Favor by\r\ndefeating enemies within your level range."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("It will also grant you a temporary bonus\r\n to your experience gain and Magic Find."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Magic Find increases your chance to find\r\ngold and high quality equippable items."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Do not fight enemies that are too far above\r\nor below your level, or there will be\r\ndiminished returns for your endeavors."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("(The penalty sets in with a difference\r\nof 7 levels, it reaches full strength\r\nwith a difference of 16 levels.)"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("To save your progress, use the green station\r\nin town and keep an image of your save code."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Inventory items and Horadric Favor\r\ncannot be saved, but your equipped item\r\nwill be included in the code."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("To load your progress from a save code,\r\nuse the white station in town, and enter\r\nall 40 digits correctly."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Hold *Reload* while using the white station\r\nto load only the item of a save code\r\nand keep your current progress."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("You cannot load items from a save state\r\nthat is higher than your current level."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Now I can only wish you good luck,\r\nadventurer, for Great Evils await you..."));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("But greater is the power of the true heroes!"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("You can find the latest Loot Quest news\r\nand the full game mode manual on:"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("https://lootquest.shivtr.com"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Share Codes - 1/4 (Lv 1-60):\r\n\r\nTutorial - CTHE4\r\nRegular Maps - 4QV99\r\nAdventure Maps - JSTPC\r\nFishing and Herbalism - BGM95"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Share Codes - 2/4 (Lv 60+):\r\n\r\nSecret Cow Level - HH3XY\r\nArreat Summit - CATCH\r\nElite Maps - XPCRY\r\nSecret Bazaar - AHMNA"));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Share Codes - 3/4 (Lv 85+):\r\n\r\nUnstable Core - HYPVE\r\nFrozen Factory - VTMND\r\nStarship Assault - T3RAS\r\nGrail Castle - 0FHER\r{0}", Custom String("\nFinal Raid - TTHNG")));
        Abort;
        Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Custom String("Share Codes - 4/4 (Tool):\r\n\r\nConversion Tool - EGHGE\r\n\r\n(Converts save codes from v3.2 - v5.1.2\r\nto the current version.)"));
        Abort;
        Set Player Variable(Event Player, lIIIlIIllIIIlllllIIIIllIlI, 0);
        Call Subroutine(IlIllIllIllIlIlIIlIIIlllIl);
    }
}

rule ("lIIIIlIlIlIIIlllIIlIlIIlll") {
    event {
        Subroutine;
        IlIlIllIIlIlIlllIIIIIIIlII;
    }
    actions {
        Set Player Variable(Event Player, IIllIIllIllllllllIIlIIIIll, Value In Array(Array(Value In Array(Global.IllIlIIIlIlIIIlIlllIIIllII, 2), Global.IlIlIIIlIIllllIllIlllllIll), Subtract((Event Player).IlllIllIlIlllIlIlIIlIllIlI, 1)));
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, 16000);
        Set Status(Event Player, Null, Invincible, 16000);
        Set Status(Event Player, Null, Rooted, 16000);
        Disallow Button(Event Player, Button(Primary Fire));
        Disallow Button(Event Player, Button(Secondary Fire));
        Disallow Button(Event Player, Button(Ability 1));
        Disallow Button(Event Player, Button(Ability 2));
        Disallow Button(Event Player, Button(Ultimate));
        Disallow Button(Event Player, Button(Interact));
        Disallow Button(Event Player, Button(Crouch));
        Disallow Button(Event Player, Button(Melee));
        Disallow Button(Event Player, Button(Reload));
    }
}

rule ("lIllIIlIIlIIlIlllIlIlllIll") {
    event {
        Subroutine;
        llllIlIIlIIIIlIllIlIlIIlll;
    }
    actions {
        Abort If(Compare(Count Of(Global.IIllIllIllllIIlIlIlIIIIlIl), <=, 16));
        Modify Global Variable(IIllIllIllllIIlIlIlIIIIlIl, Remove From Array By Index, 0);
        Modify Global Variable(lllllIIIlIlIlllllIlllIlllI, Remove From Array By Index, 0);
    }
}

rule ("IIllllIIlIllIIIIlllIIIIIll") {
    event {
        Subroutine;
        IIIlIIllllIlIlIlIlIlIlIIlI;
    }
    actions {
        Abort If(Or((Event Player).llllIIlIlllllllIIllIlIllII, Not((Event Player).llIIllIlIlIlIIlllIllllIIIl)));
        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 2), Add(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 2)), 2), 2));
    }
}

rule ("llIIIlllIIIlIIlIllIlIlIIIl") {
    event {
        Subroutine;
        lIllIIIIIIllllIIlllIllllIl;
    }
    actions {
        If(Is Duplicating(Event Player));
            Set Global Variable(IIllllIlIIlIIIllIllIIIIlII, Hero Being Duplicated(Event Player));
        Else;
            Set Global Variable(IIllllIlIIlIIIllIllIIIIlII, (Event Player).IIIllIlIIIIlIlllIlllIlIIlI);
        End;
        Set Player Variable(Event Player, lIIlIlllIIlllIIlIlIlIIllll, Value In Array(Array(0.48, 0.34, 0.39, 0.46, 0.52, 0.63, 0.52, 0.88, 0.4, 0.64, 0.41, 0.53, 0.48, 0.8, 0.53, 0.58, 0.61, 0.51, 0.51, 0.87, 0.57, 0.49, 0.61, 0.54, 0.7, 0.66, 0.55, 0.83, 0.55, 0.62, 0.62, 0.66), Index Of Array Value(All Heroes, Global.IIllllIlIIlIIIllIllIIIIlII)));
        Set Player Variable At Index(Event Player, IIlllllIIlIIlIIIIIIIIlIlII, 2, Value In Array(Array(0.439, 0.731, 0.506, 0.548, 0.43, 0.598, 0.439, 0.598, 0.598, 0.399, 0.548, 0.399, 0.477, 0.411, 0.548, 0.479, 0.439, 0.399, 0.313, 0.598, 0.572, 0.658, 0.548, 0.439, 0.548, 0.329, 0.329, 0.598, 0.411, 0.409, 0.399, 0.47), Index Of Array Value(All Heroes, Global.IIllllIlIIlIIIllIllIIIIlII)));
        Set Knockback Dealt(Event Player, Multiply(100, Compare(Global.IIllllIlIIlIIIllIllIIIIlII, !=, Hero(Reinhardt))));
        Set Player Variable At Index(Event Player, IIllIlIIIIIIllIIIllIlIllII, 0, Round To Integer(Multiply(Value In Array(Array(8, 40, 25, False, 18, False, 6, 100, 35, 25, 100, 25, 30, 6, 6, 5, 100, 30, 20, False, 150, 60, 4, 15, 50, False, False, 80, 45, 12, 12, 45, 5, 8, False, 100, 20, False, 16), Index Of Array Value(All Heroes, Global.IIllllIlIIlIIIllIllIIIIlII)), Add(Add(1, Multiply(0.01, (Event Player).IIIlIlIllIlllIllllIlIllIll)), Multiply(0.04, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 10))))), Up));
        Set Player Variable At Index(Event Player, IIllIlIIIIIIllIIIllIlIllII, 1, Round To Integer(Multiply(Value In Array(Array(False, 13, 15, False, False, False, 70), Subtract(Index Of Array Value(All Heroes, Global.IIllllIlIIlIIIllIllIIIIlII), 30)), Add(Add(1, Multiply(0.01, (Event Player).IIIlIlIllIlllIllllIlIllIll)), Multiply(0.04, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 10))))), Up));
        Set Max Ammo(Event Player, 0, First Of((Event Player).IIllIlIIIIIIllIIIllIlIllII));
        Set Max Ammo(Event Player, 1, Value In Array((Event Player).IIllIlIIIIIIllIIIllIlIllII, 1));
    }
}

rule ("lIlIIIllllIIllIlIllIllIIlI") {
    event {
        Subroutine;
        lIIIIllIIlIllIlllllIlllIII;
    }
    actions {
        Set Global Variable(IlIllIIIlIIIIIIllIIIIIIIIl, Empty Array);
        Set Global Variable At Index(IIllIIIlIllIlIlllIlllIlllI, 0, 0);
        If(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 1)), !=, 5));
            For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 11), Add(Global.lIlIlIIlIIIIlIllIIllllllll, 14), 1);
                Set Global Variable(IIIlIlllIllllIlllllllIIlII, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Global.lIIlllIllllIlIIIIlIllIIIlI));
                If(And(Global.IIIlIlllIllllIlllllllIIlII, Compare(Global.IIIlIlllIllllIlllllllIIlII, <, 7)));
                    Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Value In Array(Global.IlIllIIIlIIIIIIllIIIIIIIIl, Global.IIIlIlllIllllIlllllllIIlII));
                    Set Global Variable At Index(IIllIIIlIllIlIlllIlllIlllI, 1, And(Compare(Global.lIIIIIllllIlIIIIlIIIlIIIll, ==, True), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 1)), ==, 4)));
                    Modify Global Variable At Index(IIllIIIlIllIlIlllIlllIlllI, 0, Add, Compare(Value In Array(Global.IIllIIIlIllIlIlllIlllIlllI, 1), ==, True));
                    Set Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, Global.IIIlIlllIllllIlllllllIIlII, Multiply(Add(Add(Global.lIIIIIllllIlIIIIlIIIlIIIll, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(3, Global.lIIlllIllllIlIIIIlIllIIIlI))), 1), Add(1, Compare(Value In Array(Global.IIllIIIlIllIlIlllIlllIlllI, 1), ==, True))));
                End;
            End;
        End;
        Set Global Variable(IIIlIlllIllllIlllllllIIlII, False);
        If(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 13)), >=, 7));
            Set Global Variable(IIIlIlllIllllIlllllllIIlII, Multiply(Round To Integer(Multiply(Add(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 1)), 1), 0.834), To Nearest), Subtract(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 13)), 6)));
            If(And(And(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 60), Not(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 1)))), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 17)), 100), >=, 26)));
                Modify Global Variable(IIIlIlllIllllIlllllllIIlII, Add, Subtract(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 13)), 7));
            End;
        End;
        Set Global Variable At Index(IIllIIIlIllIlIlllIlllIlllI, 2, Multiply(0.5, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 1)), ==, 5)));
        Set Global Variable At Index(IIllIIIlIllIlIlllIlllIlllI, 0, Multiply(Compare(First Of(Global.IIllIIIlIllIlIlllIlllIlllI), ==, True), Round To Integer(Multiply(Multiply(0.834, Subtract(3, First Of(Global.IIllIIIlIllIlIlllIlllIlllI))), Add(Global.IIIllIIIlllIllIIlIIIllllII, 1)), To Nearest)));
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 1, 7, 1);
            Modify Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI, Add, Global.IIIlIlllIllllIlllllllIIlII);
            Modify Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI, Multiply, Add(Add(1, Multiply(0.1, Global.IIIllIIIlllIllIIlIIIllllII)), Value In Array(Global.IIllIIIlIllIlIlllIlllIlllI, 2)));
            If(Compare(Modulo(Value In Array(Global.IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI), 1), >, 0.001));
                Set Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI, Round To Integer(Value In Array(Global.IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI), Up));
                Modify Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI, Add, Multiply(Not(Value In Array(Global.IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI)), First Of(Global.IIllIIIlIllIlIlllIlllIlllI)));
            Else;
                Set Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI, Round To Integer(Value In Array(Global.IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI), To Nearest));
                Modify Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI, Add, Multiply(Not(Value In Array(Global.IlIllIIIlIIIIIIllIIIIIIIIl, Global.lIIlllIllllIlIIIIlIllIIIlI)), First Of(Global.IIllIIIlIllIlIlllIlllIlllI)));
            End;
        End;
        Set Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, 0, Value In Array(Array(0, 2, 3, 4, 5, 6, 1, 2, 3, 4, 5, 6, 2, 3, 4, 5, 6, 7, 7, 7, 8, 8, 8, 9, 9, 9, 0, 10, 10, 10), Modulo(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 17)), 100), 30)));
        If(And(And(Not(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 1))), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 60)), Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 17)), 100)));
            Set Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, 0, 0);
        End;
        Set Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, 7, Multiply(Add(Value In Array(Array(0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 0, 1, 2, 0, 1, 2, 0, 1, 2, 0, 0, 1, 2), Modulo(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 17)), 100), 30)), 1), Compare(First Of(Global.IlIllIIIlIIIIIIllIIIIIIIIl), ==, True)));
        Abort If(Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 17)), 100), <, 60));
        Set Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, 0, 11);
        Set Global Variable At Index(IlIllIIIlIIIIIIllIIIIIIIIl, 7, Subtract(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 17)), 100), 59));
    }
}

rule ("IIlIIlIlllIlIIlllIllIIllll") {
    event {
        Subroutine;
        lIlIlllllIIIlllllIIIllIIII;
    }
    actions {
        If(Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 17)), 100), ==, 56));
            Set Player Variable At Index(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, 8, Custom String("Moo"));
            Abort;
        End;
        If(And(And(Not(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 1))), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >=, 60)), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 17)), 100), >=, 26)));
            Set Player Variable At Index(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, 8, Custom String("Everchanging"));
            Abort;
        End;
        If(First Of((Event Player).lIlIlIIIIllIlllIIIIIlIlIll));
            Set Player Variable At Index(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, 8, Custom String("{0} {1}", Value In Array(Array(Custom String("White"), Custom String("Yellow"), Custom String("Green"), Custom String("Purple"), Custom String("Red"), Custom String("Blue"), Custom String("Aqua"), Custom String("Lime Green"), Custom String("Orange"), Custom String("Sky Blue"), Custom String("Black")), Subtract(First Of((Event Player).lIlIlIIIIllIlllIIIIIlIlIll), 1)), Value In Array(Array(Custom String("Mist"), Custom String("Cuts"), Custom String("Ring")), Subtract(Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 7), 1))));
            Abort;
        End;
        Set Player Variable At Index(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, 8, Custom String("None"));
    }
}

rule ("llIIllIllIlIllllIIlllIllll") {
    event {
        Subroutine;
        IIllllIlIllIllIlIlIIlIllII;
    }
    actions {
        Abort If(Or(Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 10)), Compare((Event Player).lllIlIIllIIllIIIIlllIIllII, <, 3)));
        Create Progress Bar HUD Text(All Players(Team 2), Divide(Multiply(100, Health(Event Player)), Max Health(Event Player)), Null, Top, -3, Custom Color(127, 0, 0, 255), Null, Visible To and Values, Default Visibility);
        Set Player Variable(Event Player, lIlllllllIlIlIlIIIIIlllIII, Last Text ID);
    }
}

rule ("IIlllllIllllIIIIlIlIllIlII") {
    event {
        Subroutine;
        llllIlIllIIIlIIIlllIIlIIIl;
    }
    actions {
        Set Player Variable At Index(Event Player, llIIllllIIlIIIIIIIlIlIlllI, (Event Player).IIIlIIIIlIlllllIllIlIIlllI, Modulo(Add(Value In Array((Event Player).llIIllllIIlIIIIIIIlIlIlllI, (Event Player).IIIlIIIIlIlllllIllIlIIlllI), 10), 10));
        Set Player Variable At Index(Event Player, lllIIlllIIlIIlllIIIIlllIlI, Subtract((Event Player).IIIlIIIIlIlllllIllIlIIlllI, (Event Player).lIlIIIIIIlIIlIlIlIIlIIIIlI), Value In Array((Event Player).llIIllllIIlIIIIIIIlIlIlllI, (Event Player).IIIlIIIIlIlllllIllIlIIlllI));
    }
}

rule ("llIlIIIIlIlllIIllIIlIlIllI") {
    event {
        Subroutine;
        IlllllllIIlllllllllllIlIlI;
    }
    actions {
        Set Player Variable At Index(Event Player, IlIIlIIIIIllIlIlIlIIIlIIIl, Slot Of(Victim), Add(Total Time Elapsed, 0.25));
        If(Not((Victim).llllllIlIIlIIllIIlllIlIIII));
            Set Player Variable(Victim, lIIIIlIlIIlIIlIllllllIIllI, Add(Total Time Elapsed, Multiply(Add(Raise To Power((Victim).lllIlIIllIIllIIIIlllIIllII, 2), 1), 20)));
            Set Player Variable At Index(Event Player, lllIlIIllIIllIIIIlllIIllII, Slot Of(Victim), True);
            If(Compare((Event Player).IIIIlIIIIllllIlllIIIlllIIl, ==, 1));
                If(Not(Array Contains((Victim).IlllIIlilllIilIIIIIIlIlIil, Event Player)));
                    Modify Player Variable(Victim, IlllIIlilllIilIIIIIIlIlIil, Append To Array, Event Player);
                End;
                If(Compare((Victim).IIIllIIllIIIIllIlIlIIIIIII, <=, Add((Event Player).IIlIIllIIIllIllllIIIIlIIll, Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 3))));
                    Set Player Variable(Victim, IIIllIIllIIIIllIlIlIIIIIII, Add((Event Player).IIlIIllIIIllIllllIIIIlIIll, Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 3)));
                End;
            End;
        End;
        If(And(First Of((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII), Compare(Random Integer(0, 9), <, 7)));
            Damage(Victim, Null, Divide(Multiply(Multiply(Multiply(Health(Victim), Add(0.65, Multiply(0.05, (Event Player).IIlIIllIIIllIllllIIIIlIIll))), Value In Array(Global.llIIIllIllIlllIlllIIIlllll, (Victim).lllIlIIllIIllIIIIlllIIllII)), (Victim).IIIIIIIIlIIlIIIIIIIllIIIII), Global.IIIlIIIlIIllIIlllIlIIllIll));
        End;
        Abort If(Compare((Event Player).IllIlIllIlllIlIlIIIIIlllll, >, Total Time Elapsed));
        Set Player Variable(Event Player, IllIlIllIlllIlIlIIIIIlllll, Add(Total Time Elapsed, 2));
        Call Subroutine(IlIIIIIlIllIIllIlIIlIlIIII);
    }
}

rule ("IllIIlIIIIIIIIllIllllIIlII") {
    event {
        Subroutine;
        IlIIIIIlIllIIllIlIIlIlIIII;
    }
    actions {
        Call Subroutine(lllIllllIllIIlIllIIIIIIllI);
        If(Compare(Random Integer(0, Add(24, Multiply(55, Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 11)))), <, Multiply(4, Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1))));
            If(Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 10));
                Set Status(Victim, Null, Frozen, 1.5);
            Else If(Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 4));
                Set Status(Victim, Null, Hacked, 3);
            Else If(Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 11));
                Damage(Victim, Null, 100000000);
            End;
        End;
        If(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 1));
            If(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 10));
                Play Effect(Event Player, Bad Explosion, Color(Purple), If-Then-Else(Event Was Critical Hit, Eye Position(Victim), Add(Position Of(Victim), Up)), Add(0.5, Multiply(1.35, Event Was Critical Hit)));
            End;
            Damage(Victim, Null, Multiply(Multiply(Multiply(1.421, Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 1)), Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 3)), Add(0.95, Multiply(Event Was Critical Hit, 0.3))));
        End;
        If(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 2));
            If(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 10));
                Set Status(Victim, Null, Burning, 2);
            End;
            Start Damage Over Time(Victim, Null, 2, Multiply(Multiply(0.711, Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 2)), Value In Array((Event Player).IIlllllIIlIIlIIIIIIIIlIlII, 3)));
        End;
        If(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 3));
            If(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 10));
                Play Effect(Event Player, Bad Explosion, Color(Red), Add(Position Of(Victim), Up), 1);
            End;
            Heal(Event Player, Null, Multiply(Multiply(Multiply(0.1, Max Health(Event Player)), 0.016), Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 3)));
        End;
        If(Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 5));
            If(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 10));
                Play Effect(Event Player, Bad Explosion, Color(Green), Position Of(Victim), 1);
            End;
            Modify Player Variable At Index(Victim, lllllIIlllIlllllIIlIIlllII, 1, Append To Array, Subtract(0.9, Divide(Raise To Power(Subtract(150, Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 5)), 2), 37500)));
            Modify Player Variable At Index(Victim, lllllIIlllIlllllIIlIIlllII, 2, Append To Array, Add(Add(Total Time Elapsed, 2), Multiply(0.02, Value In Array((Event Player).llllllIllIIlllllIlIIlIIllI, 5))));
            If(Not((Victim).lllllIIlllIlllllIIlIIlllII));
                Set Player Variable At Index(Victim, lllllIIlllIlllllIIlIIlllII, 0, True);
            End;
        End;
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, Victim);
        Call Subroutine(llIllIlIIIllIIlIlIlllIIllI);
    }
}

rule ("IIlIllIIlIIIlIlIIlllIIIIIl") {
    event {
        Subroutine;
        IIlllIIlllIllllllIIIIIIlII;
    }
    actions {
        Abort If(Or(Not(Is Using Ultimate(Event Player)), And(And(Compare(Hero Of(Event Player), !=, Hero(Sigma)), Compare(Hero Being Duplicated(Event Player), !=, Hero(Sigma))), Compare(Event Direction, !=, 0))));
        Wait(0.2, Ignore Condition);
        Set Player Variable(Event Player, lIIIllIIllIIIllIlIIllIlIll, True);
    }
}

rule ("llIIllIlIlllIIIIIIIlllIlII") {
    event {
        Subroutine;
        llIIlIllIllIlIIIIlIlIIIlII;
    }
    actions {
        Set Player Variable(Event Player, IllIIIlIlllIllIlIIllIllIII, Not((Event Player).IllIIIlIlllIllIlIIllIllIII));
        Small Message(Event Player, If-Then-Else((Event Player).IllIIIlIlllIllIlIIllIllIII, Custom String("You now sell items with Crouch + Melee"), Custom String("You now sell items with Interact (default)")));
    }
}

rule ("IlIIlIIIlIIIllIllIIIIIlIIl") {
    event {
        Subroutine;
        lllIllllIllIIlIllIIIIIIllI;
    }
    actions {
        Set Player Variable(Event Player, llIllIIIlIllllIIlIlIIIlllI, Add(Total Time Elapsed, 3));
        Stop All Heal Over Time(Event Player);
        Set Player Variable(Event Player, IIlllllIIIIlllIIIlllIllIlI, Total Time Elapsed);
    }
}

rule ("IllllllIIIIIIIlIlllllIIIlI") {
    event {
        Subroutine;
        llIlllIllIIllllIIIIIllIlII;
    }
    actions {
        Set Global Variable(IIllllIlIIlIIIllIllIIIIlII, 0);
        While(Compare(Subtract(Add(Add(String Length(First Of((Event Player).lIlIIIIlIIlIIlIIlIIIllllII)), String Length(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 3))), 2), Global.IIllllIlIIlIIIllIllIIIIlII), >, 507));
            Modify Global Variable(IIllllIlIIlIIIllIllIIIIlII, Add, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 1));
            Modify Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 1, Remove From Array By Index, 0);
            Modify Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 13, Remove From Array By Index, 0);
        End;
        Modify Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 1, Append To Array, Add(String Length(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 3)), 2));
        Modify Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 13, Append To Array, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 3));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 0, Custom String(" "));
        For Global Variable(IIllllIlIIlIIIllIllIIIIlII, 0, Count Of(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 1)), 1);
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 0, Custom String("{0}\r\n{1}", First Of((Event Player).lIlIIIIlIIlIIlIIlIIIllllII), Value In Array(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 13), Global.IIllllIlIIlIIIllIllIIIIlII)));
        End;
    }
}

rule ("lIIIIlIIIlIIlllIllllIIIIIl") {
    event {
        Subroutine;
        lIIIllIIIlllllIllIIlllIIll;
    }
    actions {
        If(Compare(Global.IllIIlIllllIIIllIlllIIlIIl, <=, 1));
            Small Message(Event Player, Custom String("Calibrating - please wait a few seconds"));
            Abort;
        End;
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        Set Player Variable(Event Player, lllIlllIllIIIlIIIIlllllIIl, False);
        Set Player Variable(Event Player, IllIlIlIIlIIIIIIIIlIlIlIlI, Add(Total Time Elapsed, 0.25));
        Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Value In Array(Global.lIIllIllIllIlIIIlllIlllIIl, Add(Multiply(2, Global.IlIIlIIIlllIIlIllIIIIIllIl), 1)));
        Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
        Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, Nearest Walkable Position(Add(Global.IIIIlllIIIIlIIIlIIIIllllIl, Global.IlIllIIlIIIIlIIlIlIIIlIIlI)));
        Call Subroutine(llIlIIIlIIlIIIIIllIlIIllIl);
        Call Subroutine(lllIlllIIIlIllllIIIIIIlIlI);
    }
}

rule ("lIlllllIllIllIlIllIIllIlll") {
    event {
        Subroutine;
        llllIlIllIlllIllllIllIIllI;
    }
    actions {
        Set Player Variable(Event Player, IlIIlllllIIlIIllIIlllIIIll, First Of((Event Player).lIlIlllIllIlIIIllllIllIlll));
        Set Player Variable(Event Player, IlllIllIlIlllIlIlIIlIllIlI, 1);
        Call Subroutine(IlIlIllIIlIlIlllIIIIIIIlII);
        Set Facing(Event Player, Direction From Angles(Add(Global.IlIllllIIIIIIIIlllIIllIIII, Multiply(0.412, First Of((Event Player).IIlIllllIllIIllIlIIlIIlIll))), Multiply(-4.636, First Of((Event Player).IIlIllllIllIIllIlIIlIIlIll))), To World);
        Set Player Variable(Event Player, IIIlIIIIlIlllllIllIlIIlllI, False);
        Set Player Variable(Event Player, lIlIIIIIIlIIlIlIlIIlIIIIlI, False);
        Set Player Variable(Event Player, lIlIIlllIIIlIllllIllIIlIlI, Event Player);
        For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 4, 1);
            Set Player Variable At Index(Event Player, lllIIlllIIlIIlllIIIIlllIlI, Global.lIIlllIllllIlIIIIlIllIIIlI, Value In Array((Event Player).llIIllllIIlIIIIIIIlIlIlllI, Global.lIIlllIllllIlIIIIlIllIIIlI));
        End;
        Set Player Variable(Event Player, IllIlIIIllIlIlIIIlIIlIlIII, False);
        Set Player Variable At Index(Event Player, lllIIlllIIlIIlllIIIIlllIlI, 4, Custom String("^___"));
        Set Player Variable At Index(Event Player, lllIIlllIIlIIlllIIIIlllIlI, 5, If-Then-Else((Event Player).IlIIlllllIIlIIllIIlllIIIll, Custom String("Load item only"), Custom String("Load full save state")));
        If((Event Player).llIIlllIllIIIllIllIIIIIIll);
            Call Subroutine(IIllIIllllIIIlIlIIllIIlIII);
            Create HUD Text(Event Player, Custom String("{0}{1}{2}", First Of((Event Player).lllIIlllIIlIIlllIIIIlllIlI), Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 1), Custom String("{0}{1}\r\n{2}", Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 2), Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 3), Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 4))), Null, Custom String("{0}\r\nBlock {1}/10", Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 5), Add(Multiply((Event Player).lIlIIIIIIlIIlIlIlIIlIIIIlI, 0.25), 1)), Top, 1, If-Then-Else((Event Player).IlIIlllllIIlIIllIIlllIIIll, Color(Aqua), Color(White)), Null, If-Then-Else((Event Player).IlIIlllllIIlIIllIIlllIIIll, Color(Aqua), Color(White)), String, Visible Never);
            Set Player Variable(Event Player, llllllIlIIIIllIllIlIIIllII, Last Text ID);
            Abort;
        End;
        Set Objective Description(Event Player, Custom String("{0}\r\n\r\nBlock {1}/10\r\n{2}", Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 5), Add(Multiply((Event Player).lIlIIIIIIlIIlIlIlIIlIIIIlI, 0.25), 1), Custom String("{0}{1}{2}", First Of((Event Player).lllIIlllIIlIIlllIIIIlllIlI), Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 1), Custom String("{0}{1}\r\n{2}", Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 2), Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 3), Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 4)))), String);
        Enable Game Mode HUD(Event Player);
    }
}

rule ("lllllIIlIlllIIlIlIlllIllIl") {
    event {
        Subroutine;
        IlllllIIlIIIlIlIIIlllIllII;
    }
    actions {
        If(Compare((Event Player).IIlIllllllIIlIIIllllIIllII, >=, 9));
            Small Message(Event Player, Custom String("Cannot carry more Soul Stones"));
            Abort;
        End;
        Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, Add(36, Round To Integer(Multiply((Event Player).llIlIIIlIlIIlIIIllllIlllII, 3), Up)));
        Set Player Variable(Event Player, IIllIIllIIIIIlIlIIllIllllI, 1);
        If(Compare((Event Player).IlIIllllIlllIllIIIllIlIlll, <, (Event Player).lIllIIlIllllIlIIIllIIllIlI));
            Small Message(Event Player, Custom String("Not enough gold (cost: {0})", (Event Player).lIllIIlIllllIlIIIllIIllIlI));
            Abort;
        End;
        If(Compare((Event Player).IlllIlIIIIIlIlllIIIIlIllll, <, 1));
            Call Subroutine(IlllIIIIlIIlIIIIllllllllIl);
            Abort;
        End;
        Call Subroutine(IIIllIlIIllIllllIIIlllIlIl);
        Modify Player Variable(Event Player, IlIIllllIlllIllIIIllIlIlll, Subtract, (Event Player).lIllIIlIllllIlIIIllIIllIlI);
        Small Message(Event Player, Custom String("Purchased 1 Soul Stone (use with Group Up)"));
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        Modify Player Variable(Event Player, IIlIllllllIIlIIIllllIIllII, Add, 1);
        Abort If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), <, 2));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Purchased 1 Soul Stone"));
        Call Subroutine(llIlllIllIIllllIIIIIllIlII);
    }
}

rule ("IllllIIIIIIlIllIllIIllIIIl") {
    event {
        Subroutine;
        IlllIlIIlIllllIlllIIlIlllI;
    }
    actions {
        If(Compare((Event Player).IlIllIlIlIlllIIlIllllllllI, >, Total Time Elapsed));
            Set Player Variable(Event Player, IllIlIIlIIlIlIlIllIllllllI, Total Time Elapsed);
            Small Message(Event Player, Custom String("Wait {0} second(s) to get another code", Round To Integer(Subtract((Event Player).IlIllIlIlIlllIIlIllllllllI, (Event Player).IllIlIIlIIlIlIlIllIllllllI), Up)));
            Abort;
        End;
        If(Compare(Global.IllIlIllIllIllIIlIIIIllIIl, >, Total Time Elapsed));
            Small Message(Event Player, Custom String("Another code was just created, please wait a few seconds"));
            Abort;
        End;
        Set Player Variable(Event Player, IlIIlllllIIlIIllIIlllIIIll, First Of((Event Player).lIlIlllIllIlIIIllllIllIlll));
        Call Subroutine(lllIlllllIlIIIllIlIlIIIlIl);
    }
}

rule ("IllllIllIllIIlllIIlIIIIlll") {
    event {
        Subroutine;
        llIllIIIIlIIIIlIlIlIIllIll;
    }
    actions {
        Call Subroutine(IlIlIllIIlIlIlllIIIIIIIlII);
        Set Player Variable(Event Player, IlllIllIlIlllIlIlIIlIllIlI, 2);
        Call Subroutine(lIIlllIlIIlIIIllIllllIlllI);
        If((Event Player).llIIlllIllIIIllIllIIIIIIll);
            Call Subroutine(IIllIIllllIIIlIlIIllIIlIII);
            Create HUD Text(Event Player, Custom String(" \r\n{0}\r\n", (Event Player).llIlIIllIIIIIIIIlIlIlIIlII), Null, Custom String("Instructions - Page {0}/42\r\n{1}", Add((Event Player).lIIIlIIllIIIlllllIIIIllIlI, 1), If-Then-Else((Event Player).IIlIIIIIIllIIlIlIIIlllllIl, Custom String("Next: Crouch / Ability 2\r\nBack: Ability 1\r\nCancel: Secondary Fire"), Custom String("Next: Ability 2\r\nBack: Ability 1\r\nCancel: Ultimate"))), Top, 1, Color(Aqua), Null, Color(Aqua), String, Visible Never);
            Set Player Variable(Event Player, llllllIlIIIIllIllIlIIIllII, Last Text ID);
            Abort;
        End;
        Set Objective Description(Event Player, Custom String("Instructions - Page {0}/42\r\n\r\n{1}\r\n\r\n{2}", Add((Event Player).lIIIlIIllIIIlllllIIIIllIlI, 1), (Event Player).llIlIIllIIIIIIIIlIlIlIIlII, If-Then-Else((Event Player).IIlIIIIIIllIIlIlIIIlllllIl, Custom String("Next: Crouch or Ability 2 / Back: Ability 1 / Cancel: Secondary Fire"), Custom String("Next: Ability 2 / Back: Ability 1 / Cancel: Ultimate"))), String);
        Enable Game Mode HUD(Event Player);
    }
}

rule ("lIllIIlIlllIIllIIlllIIlIll") {
    event {
        Subroutine;
        lIlllIlIIIllllIIllIlIlIIIl;
    }
    actions {
        If((Event Player).llIIlllIllIIIllIllIIIIIIll);
            Call Subroutine(IIllIIllllIIIlIlIIllIIlIII);
            Abort;
        End;
        Set Objective Description(Event Player, Custom String(""), String);
        Abort If(Modulo(Global.lllllIIIllIIIllIlIIllIllII, 1));
        Disable Game Mode HUD(Event Player);
    }
}

rule ("IIlIlIIllIlIIllIIIIIIIIIll") {
    event {
        Subroutine;
        IIllIIllllIIIlIlIIllIIlIII;
    }
    actions {
        Abort If(Not((Event Player).llllllIlIIIIllIllIlIIIllII));
        Destroy HUD Text((Event Player).llllllIlIIIIllIllIlIIIllII);
        Set Player Variable(Event Player, llllllIlIIIIllIllIlIIIllII, False);
    }
}

rule ("llIIIIIIIIIlllllllIllllIlI") {
    event {
        Subroutine;
        lIIlllIlllIIllIllllllIllII;
    }
    actions {
        Abort If(Or(Not(Global.IllIIlIllllIIIllIlllIIlIIl), Compare(Global.IllIIlIllllIIIllIlllIIlIIl, >, 2)));
        Abort If(Or(Not(Global.IllIIlIllllIIIllIlllIIlIIl), Compare(Global.IllIIlIllllIIIllIlllIIlIIl, >, 2)));
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        Skip(Multiply(Subtract(Global.IlIIlIIIlllIIlIllIIIIIllIl, 1), 2));
        Abort;
        Abort;
        Call Subroutine(llIIlIllIllIlIIIIlIlIIIlII);
        Abort;
        Call Subroutine(lllIIlllllIlllIllllIllIIll);
        Abort;
        Call Subroutine(IIIIIIlIIIlIIIIIIIIlIIIlIl);
        Abort;
        Call Subroutine(IllIIIIllIIllIIllIlIlIIlll);
        Abort;
        Call Subroutine(IIIlIIlIIIlIIllIlllIlIllII);
        Abort;
        Call Subroutine(IlllIlIlIlllIIlIllIlllllll);
        Abort;
        Call Subroutine(IllIlIlIllIlIlIllIlllIlIIl);
        Abort;
        Call Subroutine(lIIlllIIlllllIIlIIlIIIIIlI);
        Abort;
        Call Subroutine(IllllIIIlllIlIIlIlIlllIllI);
    }
}

rule ("llllIlIIlIlIIlIIIIIlllIlII") {
    event {
        Subroutine;
        IIIlIIlIIIlIIllIlllIlIllII;
    }
    actions {
        If(Compare(Global.IlIllllIllllllIIlIIlIllIII, >=, 6));
            Small Message(Event Player, Custom String("Autosave disabled (lobby settings)"));
            Abort;
        End;
        Modify Player Variable(Event Player, lIllIlllIlllIIlIIlllllIllI, Add, Subtract(1, Multiply(7, Compare((Event Player).lIllIlllIlllIIlIIlllllIllI, >=, 6))));
        If((Event Player).lIllIlllIlllIIlIIlllllIllI);
            Modify Player Variable(Event Player, lIllIlllIlllIIlIIlllllIllI, Max, Add(Global.IlIllllIllllllIIlIIlIllIII, 1));
        End;
        If((Event Player).lIllIlllIlllIIlIIlllllIllI);
            Small Message(Event Player, Custom String("Autosave enabled (every {0} minutes)", Value In Array(Array(0, 5, 10, 15, 20, 25, 30), (Event Player).lIllIlllIlllIIlIIlllllIllI)));
            Abort;
        End;
        Small Message(Event Player, Custom String("Autosave disabled (default)"));
    }
}

rule ("lIIIIIIllllIllllIlIllIllIl") {
    event {
        Subroutine;
        lIIlllIIlllllIIlIIlIIIIIlI;
    }
    actions {
        If(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 9));
            Small Message(Event Player, Custom String("Text log disabled (lobby settings)"));
            Abort;
        End;
        Modify Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 2, Add, Subtract(1, Multiply(3, Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), >=, 2))));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 7, Value In Array(Array(Null, Color(White), Color(White)), Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2)));
        Small Message(Event Player, Value In Array(Array(Custom String("Text log - disabled (default)"), Custom String("Text log - EXP only"), Custom String("Text log - full log")), Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2)));
    }
}

rule ("IIIIIIllIIlIlIIIIIIIIlIlII") {
    event {
        Subroutine;
        IIIIIIlIIIlIIIIIIIIlIIIlIl;
    }
    actions {
        Modify Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 4, Add, Subtract(1, Multiply(3, Compare(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4), >=, 2))));
        Small Message(Event Player, Value In Array(Array(Custom String("Position Indicator - Loot and Quest Objectives (default)"), Custom String("Position Indicator - Quest Objectives only"), Custom String("Position indicator - Off")), Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4)));
        If(Compare(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4), >=, 2));
            Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 2, Null);
            Abort;
        End;
        Call Subroutine(IIlIIlllIIIIIlIIIIllIIIIIl);
    }
}

rule ("IllIIIlIlIllIIlIllIIlIIIll") {
    event {
        Subroutine;
        IllllIIIlllIlIIlIlIlllIllI;
    }
    actions {
        If(Workshop Setting Combo(Custom String("General"), Custom String("Traditional code display (large font)"), 0, Array(Custom String("Allowed"), Custom String("Disabled")), 4));
            Small Message(Event Player, Custom String("Traditional Code Display disabled (lobby settings)"));
            Abort;
        End;
        Call Subroutine(lIlllIlIIIllllIIllIlIlIIIl);
        Set Player Variable(Event Player, llIIlllIllIIIllIllIIIIIIll, Not((Event Player).llIIlllIllIIIllIllIIIIIIll));
        If((Event Player).llIIlllIllIIIllIllIIIIIIll);
            Small Message(Event Player, Custom String("Traditional Code Display - Large Font"));
            Abort;
        End;
        Small Message(Event Player, Custom String("New Code Display - Small Font"));
    }
}

rule ("IllIlIllIlIlIllllIlIlIIlll") {
    event {
        Subroutine;
        lllIlllIlIlIllIlIllIIlllIl;
    }
    actions {
        Small Message(Event Player, Custom String("Obtained {0} {1} - {2}", (Event Player).llIlIIllIIIIIIIIlIlIlIIlII, Hero Icon String((Event Player).lIIllllIlIIIllIIllllIIIlll), (Event Player).lIllIIlIllllIlIIIllIIllIlI));
        Abort If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 2), <, 2));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Obtained {0} {1} ({2})", (Event Player).llIlIIllIIIIIIIIlIlIlIIlII, (Event Player).lIIllllIlIIIllIIllllIIIlll, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 4)));
        Call Subroutine(llIlllIllIIllllIIIIIllIlII);
    }
}

rule ("IllIIIIllIIlllIIIIIIIlllII") {
    event {
        Subroutine;
        IIlIIlllIIIIIlIIIIllIIIIIl;
    }
    actions {
        Abort If(Compare(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4), >=, 2));
        If(Compare(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 4), ==, 1));
            If(And(Compare((Event Player).lIlllllllllIllllIIIIlllIlI, >=, 6), Compare((Event Player).IIIIlllIllIIIllIllIlIlIlll, <, (Event Player).IllllIIlllllIIllIIllIlIlIl)));
                Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 3, (Event Player).IIIllIIlIlIIIlllllllIIIlIl);
                Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 2, Color(Gray));
            Else;
                Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 2, Null);
            End;
            Abort;
        End;
        If(And(Compare((Event Player).lIlllllllllIllllIIIIlllIlI, >=, 6), Compare((Event Player).IIIIlllIllIIIllIllIlIlIlll, <, (Event Player).IllllIIlllllIIllIIllIlIlIl)));
            Set Global Variable(IIIlIlllIllllIlllllllIIlII, Append To Array((Event Player).lIIIIllIIIIIlIIIIllllIlIlI, (Event Player).IIIllIIlIlIIIlllllllIIIlIl));
        Else;
            Set Global Variable(IIIlIlllIllllIlllllllIIlII, (Event Player).lIIIIllIIIIIlIIIIllllIlIlI);
        End;
        Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 3, First Of(Sorted Array(Remove From Array(Global.IIIlIlllIllllIlllllllIIlII, Global.lIllIIlIlIIIIIlIIIlIlIlllI), Angle Between Vectors(Facing Direction Of(Event Player), Direction Towards(Eye Position(Event Player), Add(Current Array Element, Global.lllIllIlIlllIIIIlIIlIIllII))))));
        If(And(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 3), Compare(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 3), ==, (Event Player).IIIllIIlIlIIIlllllllIIIlIl)));
            Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 2, Color(Gray));
            Abort;
        End;
        If(Not(Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 3)));
            Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 2, Null);
            Abort;
        End;
        Set Global Variable(IIIlIlllIllllIlllllllIIlII, Modulo(Value In Array((Event Player).llIIIlllIIIlllllIIllIIIIIl, Index Of Array Value((Event Player).lIIIIllIIIIIlIIIIllllIlIlI, Value In Array((Event Player).IlIIlIIlIIlIIIIlIlIllllllI, 3))), 10));
        If(Modulo(Global.IIIlIlllIllllIlllllllIIlII, 1));
            Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 2, Value In Array(Array(Color(Lime Green), Color(Turquoise), Custom Color(0, 0, 255, 255)), Subtract(Multiply(Modulo(Global.IIIlIlllIllllIlllllllIIlII, 1), 10), 1)));
            Abort;
        End;
        If(Compare(Global.IIIlIlllIllllIlllllllIIlII, <=, 1));
            Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 2, Color(Yellow));
            Abort;
        End;
        Set Player Variable At Index(Event Player, IlIIlIIlIIlIIIIlIlIllllllI, 2, Value In Array(First Of(Global.IIlIlllIlIIIIllIIlIlIlIlll), Subtract(Global.IIIlIlllIllllIlllllllIIlII, 1)));
    }
}

rule ("IlIlIlIlllllIIIIllllllIlIl") {
    event {
        Subroutine;
        IllIlIlIllIlIlIllIlllIlIIl;
    }
    actions {
        If(Compare(Event Player, !=, Host Player));
            Small Message(Event Player, Custom String("Only the host can change match duration."));
            Call Subroutine(llIIlIIIIIIIllIlllIIIIlIII);
            Abort;
        End;
        Abort If(And(Value In Array(Global.IIIlIlIIIIllIlllllIIIIllIl, 1), Compare(Value In Array(Global.IIIlIlIIIIllIlllllIIIIllIl, 1), !=, 2)));
        Abort If(Modulo(Global.lllllIIIllIIIllIlIIllIllII, 1));
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Subtract(Total Time Elapsed, 0.1));
        If(Is Button Held(Event Player, Button(Ultimate)));
            If(And(Is Button Held(Event Player, Button(Jump)), Not(Modulo(Global.lllllIIIllIIIllIlIIllIllII, 1))));
                Set Global Variable(lllllIIIllIIIllIlIIllIllII, Round To Integer(Add(Total Time Elapsed, 1), Up));
                Abort;
            Else;
                If(Compare(Global.lllllIIIllIIIllIlIIllIllII, >=, Add(Total Time Elapsed, 660)));
                    Modify Global Variable(lllllIIIllIIIllIlIIllIllII, Subtract, 600);
                End;
            End;
        Else;
            Set Global Variable(lllllIIIllIIIllIlIIllIllII, Min(Add(Global.lllllIIIllIIIllIlIIllIllII, 600), 15600));
        End;
        Set Global Variable At Index(IIIlIlIIIIllIlllllIIIIllIl, 0, Add(Total Time Elapsed, 2));
        Set Global Variable At Index(IIIlIlIIIIllIlllllIIIIllIl, 1, 2);
    }
}

rule ("IIlllIIIIlIIlIIIIIllIIIIlI") {
    event {
        Subroutine;
        lllIIlllllIlllIllllIllIIll;
    }
    actions {
        If(Compare(Event Player, !=, Host Player));
            Small Message(Event Player, Custom String("Only the host can change enemy levels."));
            Call Subroutine(llIIlIIIIIIIllIlllIIIIlIII);
            Abort;
        End;
        Abort If(And(Value In Array(Global.IIIlIlIIIIllIlllllIIIIllIl, 1), Compare(Value In Array(Global.IIIlIlIIIIllIlllllIIIIllIl, 1), !=, 1)));
        If(Global.IlllIIIIlIIIlIllIIlIlIlllI);
            Small Message(Event Player, Custom String("Cannot change Enemy Levels while boss is summoned/up"));
            Call Subroutine(llIIlIIIIIIIllIlllIIIIlIII);
            Abort;
        End;
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Subtract(Total Time Elapsed, 0.1));
        If(Is Button Held(Event Player, Button(Jump)));
            Set Global Variable(IIIllIIIlIIllIIIIlIllllllI, Not(Global.IIIllIIIlIIllIIIIlIllllllI));
            Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 3, Not(Global.IIIllIIIlIIllIIIIlIllllllI));
        Else If(Global.IIIllIIIlIIllIIIIlIllllllI);
            Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 1, Min(Max(Subtract(Add(Value In Array(Global.IlIIIIllIllIllllIlIlIllllI, 1), 1), Multiply(2, Is Button Held(Event Player, Button(Ultimate)))), 0), 20));
        Else;
            Set Global Variable At Index(IlIIIIllIllIllllIlIlIllllI, 0, Min(Max(Subtract(Add(First Of(Global.IlIIIIllIllIllllIlIlIllllI), 1), Multiply(2, Is Button Held(Event Player, Button(Ultimate)))), -5), 5));
        End;
        Set Global Variable At Index(IIIlIlIIIIllIlllllIIIIllIl, 0, Add(Total Time Elapsed, 2));
        Set Global Variable At Index(IIIlIlIIIIllIlllllIIIIllIl, 1, 1);
    }
}

rule ("lllIIllIIIIlllIIIIlIlllllI") {
    event {
        Subroutine;
        IlllIlIlIlllIIlIllIlllllll;
    }
    actions {
        If(Compare(Event Player, !=, Host Player));
            Small Message(Event Player, Custom String("Only the host can change enemy health/exp."));
            Call Subroutine(llIIlIIIIIIIllIlllIIIIlIII);
            Abort;
        End;
        Abort If(And(Value In Array(Global.IIIlIlIIIIllIlllllIIIIllIl, 1), Compare(Value In Array(Global.IIIlIlIIIIllIlllllIIIIllIl, 1), !=, 3)));
        If(Global.IlllIIIIlIIIlIllIIlIlIlllI);
            Small Message(Event Player, Custom String("Cannot change enemy health/EXP while boss is summoned."));
            Call Subroutine(llIIlIIIIIIIllIlllIIIIlIII);
            Abort;
        End;
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Subtract(Total Time Elapsed, 0.1));
        Set Global Variable(IIIlIIIlIIllIIlllIlIIllIll, Min(Max(Subtract(Add(Global.IIIlIIIlIIllIIlllIlIIllIll, 0.1), Multiply(0.2, Is Button Held(Event Player, Button(Ultimate)))), 1), 2));
        Set Global Variable At Index(IIIlIlIIIIllIlllllIIIIllIl, 0, Add(Total Time Elapsed, 2));
        Set Global Variable At Index(IIIlIlIIIIllIlllllIIIIllIl, 1, 3);
    }
}

rule ("lllIIIIlIIlIlllIIIlIllIlII") {
    event {
        Subroutine;
        IllIIIIllIIllIIllIlIlIIlll;
    }
    actions {
        If(And(Not(First Of(Global.IlllIlllllIIllIlIlIIlIllll)), Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 1))));
            Small Message(Event Player, Custom String("On hit ability and visual effects disabled (lobby settings)"));
            Abort;
        End;
        Modify Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 9, Add, 1);
        If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 9), >, 3));
            Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 9, 0);
        End;
        If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 9), ==, 0));
            Modify Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 9, Add, Add(Multiply(2, Not(First Of(Global.IlllIlllllIIllIlIlIIlIllll))), Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 1))));
        Else If(Compare(Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 9), ==, 2));
            Modify Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 9, Add, Not(Value In Array(Global.IlllIlllllIIllIlIlIIlIllll, 1)));
        End;
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 10, Value In Array(Array(True, True, False, False), Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 9)));
        Set Player Variable At Index(Event Player, lIlIIIIlIIlIIlIIlIIIllllII, 11, Value In Array(Array(True, False, True, False), Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 9)));
        Skip(Multiply(2, Value In Array((Event Player).lIlIIIIlIIlIIlIIlIIIllllII, 9)));
        Small Message(Event Player, Custom String("On hit effects: show all"));
        Abort;
        Small Message(Event Player, Custom String("On hit effects: show ability / hide visual"));
        Abort;
        Small Message(Event Player, Custom String("On hit effects: show visual / hide ability"));
        Abort;
        Small Message(Event Player, Custom String("On hit effects: hide all"));
    }
}

rule ("IllIIIllIlIlIllIIIIlIIIlIl") {
    event {
        Subroutine;
        IIIlIllIIIIllIIlllIIlIlIll;
    }
    actions {
        Set Global Variable(lllIIIIllIIlIIllIlIIllllII, Round To Integer(Divide(Subtract(Add(Global.lllllIIIllIIIllIlIIllIllII, Multiply(600, Not(Modulo(Global.lllllIIIllIIIllIlIIllIllII, 1)))), Total Time Elapsed), 60), To Nearest));
        Set Global Variable(lllIIIIllIIlIIllIlIIllllII, Custom String("{0}h {1}{2}min", Round To Integer(Divide(Global.lllIIIIllIIlIIllIlIIllllII, 60), Down), If-Then-Else(Compare(Modulo(Global.lllIIIIllIIlIIllIlIIllllII, 60), <, 10), 0, Custom String("")), Modulo(Global.lllIIIIllIIlIIllIlIIllllII, 60)));
    }
}

rule ("lIIllIIllllIIIllIIlllIlIII") {
    event {
        Subroutine;
        lIIIIlIllllIIIlIIllllIllll;
    }
    actions {
        Set Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, Compare((Event Player).IllIlllllIIIlIllIllllllIII, <=, Add(Total Time Elapsed, 1.5)));
    }
}

rule ("IIIIIIlIIIIllllIIIlIlIIlll") {
    event {
        Subroutine;
        lIlIlIIllIIlllIlllllllllll;
    }
    actions {
        Set Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, False);
        If(Is In Spawn Room(Event Player));
            Call Subroutine(IlIllIIIlllIIIllIIlllllllI);
            Abort;
        End;
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        If(Compare((Event Player).llIllIIIlIllllIIlIlIIIlllI, >, Total Time Elapsed));
            Small Message(Event Player, Custom String("Cannot use Town Portal in combat"));
            Abort;
        End;
        Call Subroutine(lIIlIIlIlllIIlllIlIllIllIl);
        Set Player Variable(Event Player, IIIIIlIlIlIllIlllllIIllIll, Global.IlIlIIIlIIllllIllIlllllIll);
        Call Subroutine(llIlIIIlIIlIIIIIllIlIIllIl);
        Call Subroutine(lllIlllIIIlIllllIIIIIIlIlI);
        Set Player Variable(Event Player, lllIlllIllIIIlIIIIlllllIIl, 2);
    }
}

rule ("llIIlIllIlIlllIlIllIllIlIl") {
    event {
        Subroutine;
        llIlIIIlllllIllIlIIIlllIIl;
    }
    actions {
        Set Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, False);
        Call Subroutine(IlIllIIIlllIIIllIIlllllllI);
    }
}

rule ("lIllIllIllllIlIlIIIIIIlIIl") {
    event {
        Subroutine;
        IIIIlIllIlIIIlIlllllIIIllI;
    }
    actions {
        Set Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, False);
        Call Subroutine(llIIlIIIIIIIllIlllIIIIlIII);
        Set Player Variable(Event Player, IIllIIllIIIIIlIlIIllIllllI, 1);
        If(Is In Spawn Room(Event Player));
            Small Message(Event Player, Custom String("Cannot use Soul Stone in town"));
            Abort;
        End;
        If(Compare((Event Player).IlllIlIIIIIlIlllIIIIlIllll, <, 1));
            Call Subroutine(IlllIIIIlIIlIIIIllllllllIl);
            Abort;
        End;
        Set Global Variable(IlllIIIIlIIIlIllIIlIlIlllI, Event Player);
        Modify Player Variable(Event Player, IIlIllllllIIlIIIllllIIllII, Subtract, 1);
        Small Message(All Players(Team 2), Custom String("{0} is summoning a boss", Event Player));
        Call Subroutine(IIIllIlIIllIllllIIIlllIlIl);
    }
}

rule ("lIlIIllllIIlIlllIllIllllIl") {
    event {
        Subroutine;
        IllllIIllIllllIIIIIIllIlII;
    }
    actions {
        Set Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, False);
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        If(Is Duplicating(Event Player));
            Small Message(Event Player, Custom String("Cannot equip item while Duplicate is active"));
            Abort;
        End;
        If(Not((Event Player).lIlIIlIlIlIIIlIlllllIlIIII));
            Small Message(Event Player, Custom String("No item to equip in inventory"));
            Abort;
        End;
        If(Or(Compare((Event Player).llIllIIIlIllllIIlIlIIIlllI, >, Total Time Elapsed), Compare(Health(Event Player), <, Round To Integer(Multiply(Max Health(Event Player), 0.95), Down))));
            Small Message(Event Player, Custom String("Cannot equip item when injured or in combat"));
            Abort;
        End;
        Set Global Variable(IIIlllllIIIllllllIIllIlIIl, Add(Total Time Elapsed, 2));
        Set Player Variable(Event Player, IIllIIlIIllIIlIIlIlllIIllI, False);
        Set Player Variable(Event Player, IIIlIllIlIIllIlIlllllIlIll, Empty Array);
        If(And(Not((Event Player).IIlIIIIllllIllIIlIIIIlIlll), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, <=, 59)));
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 17), Multiply(100, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).lllllIIlllIlllllIIlIIlllII, 17)), >=, 100)));
        End;
        Set Player Variable(Event Player, IIIllIIIlIlIlIlIlIllIIIlIl, (Event Player).lllllIIlllIlllllIIlIIlllII);
        Set Player Variable(Event Player, lllllIIlllIlllllIIlIIlllII, (Event Player).IlIllIIlllllllllIIIIllllll);
        Set Player Variable(Event Player, IlIllIIlllllllllIIIIllllll, (Event Player).IIIllIIIlIlIlIlIlIllIIIlIl);
        Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, Add(Divide((Event Player).IlIllIIlllllllllIIIIllllll, 19), Compare((Event Player).lllllIIlllIlllllIIlIIlllII, >=, (Event Player).IlIllIIlllllllllIIIIllllll)));
        Call Subroutine(IIlIIIlllIIIllIlllIllllIII);
        Call Subroutine(lIIIIlIllIIIIlIIIIllIIlIlI);
        Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
        Call Subroutine(lllIllIlIIllllIlIlIlllllll);
        Call Subroutine(IIIlIIllllIlIlIlIlIlIlIIlI);
        Set Ability Charge(Event Player, Button(Ability 1), 0);
        Set Ability Charge(Event Player, Button(Ability 2), 0);
        Set Player Variable(Event Player, IllIlIlIIlIIIIIIIIlIlIlIlI, Add(Total Time Elapsed, 0.25));
        Call Subroutine(lllllIIIllIlIIIlIlIllllllI);
        Call Subroutine(IIlIIlllIIIIIlIIIIllIIIIIl);
        Set Player Variable At Index(Event Player, IlIlIlIlIIIlIIllIIlllllIIl, 1, True);
    }
}

rule ("IIlIlIllIllllllllIlIlIlIlI") {
    event {
        Subroutine;
        IIlIllIIllIlIIIIlIIIIllIll;
    }
    actions {
        Set Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, False);
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 6));
        Set Global Variable(lIlIlIIlIIIIlIllIIllllllll, (Event Player).IlIllIIlllllllllIIIIllllll);
        If(And(Is Button Held(Event Player, Button(Crouch)), Not(Value In Array((Event Player).lIlIlllIllIlIIIllllIllIlll, 4))));
            If(Not((Event Player).lIlIIlIlIlIIIlIlllllIlIIII));
                Call Subroutine(llIIlIIIIIIIllIlllIIIIlIII);
                Small Message(Event Player, Custom String("No item in inventory"));
                Abort;
            Else;
                Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, Global.lIlIlIIlIIIIlIllIIllllllll);
                Set Player Variable(Event Player, IIllIIllIllllllllIIlIIIIll, Custom String("Inventory:"));
                If(And((Event Player).llllIIlIlllllllIIllIlIllII, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 5)), <, 3)));
                    Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(5, Global.lIlIlIIlIIIIlIllIIllllllll), Add((Event Player).llllIIlIlllllllIIllIlIllII, 2));
                    For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 2, 5, 1);
                        Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIIlllIllllIlIIIIlIllIIIlI, Global.lIlIlIIlIIIIlIllIIllllllll), 0);
                    End;
                End;
                Set Global Variable(IIIllIIIlllIllIIlIIIllllII, Round To Integer(Multiply(Compare((Event Player).llllIIlIlllllllIIllIlIllII, ==, True), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add(Global.lIlIlIIlIIIIlIllIIllllllll, 2))), Down));
                Call Subroutine(lIIIIllIIlIllIlllllIlllIII);
                Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, Global.IlIllIIIlIIIIIIllIIIIIIIIl);
            End;
        Else;
            Set Player Variable At Index(Event Player, lIlIlllIllIlIIIllllIllIlll, 4, 0);
            Set Player Variable(Event Player, llIlIIllIIIIIIIIlIlIlIIlII, (Event Player).lllllIIlllIlllllIIlIIlllII);
            Set Player Variable(Event Player, lIlIlIIIIllIlllIIIIIlIlIll, (Event Player).llllllIllIIlllllIlIIlIIllI);
            Set Player Variable(Event Player, IIllIIllIllllllllIIlIIIIll, Custom String("Equipped:"));
        End;
        Set Player Variable(Event Player, lIllIIlIllllIlIIIllIIllIlI, If-Then-Else(And(And((Event Player).llllIIlIlllllllIIllIlIllII, Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 2)), <, 5)), Or(Not(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 1))), Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 1)), >=, 4))), Custom String("Arcane Crystal Fragments: {0}", Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 3))), Custom String("")));
        Big Message(Event Player, Custom String("{0}\r\nAttack: {1}\r\nDefense: {2}", (Event Player).IIllIIllIllllllllIIlIIIIll, Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 6)), Custom String("{0}\r\nHealth: {1}\r\nSpeed: {2}", Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 7)), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 8)), Custom String("{0}\r\nSustain: {1}\r\n{2}", Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 9)), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).llIlIIllIIIIIIIIlIlIlIIlII, 10)), (Event Player).lIllIIlIllllIlIIIllIIllIlI))));
        Wait(3, Ignore Condition);
        Call Subroutine(lIlIlllllIIIlllllIIIllIIII);
        Big Message(Event Player, Custom String("Crit: {0}\r\nBurning: {1}\r\n{2}", Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 1), Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 2), Custom String("Lifesteal: {0}\r\nUlt Charge: {1}\r\n{2}", Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 3), Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 4), Custom String("Root: {0}\r\nTeleport: {1}\r\nVisual Effect: {2}", Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 5), Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 6), Value In Array((Event Player).lIlIlIIIIllIlllIIIIIlIlIll, 8)))));
        Wait(3, Ignore Condition);
    }
}

rule ("IlllllIlIlIIlIlllllIlIllIl") {
    event {
        Subroutine;
        llIIlIlIIIIIllIIlIllIIIlII;
    }
    actions {
        Set Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, False);
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 0.25));
        Call Subroutine(lIIIIIIllIIllIlIIIlIlIlIll);
        If(Compare(Distance Between(Event Player, Global.IIIIlllIIIIlIIIlIIIIllllIl), <=, Add(2.5, Multiply(Multiply(Multiply(15, Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), ==, 2)), Not(Modulo(Value In Array((Event Player).llIIIlllIIIlllllIIllIIIIIl, Global.lIIIIIllllIlIIIIlIIIlIIIll), 1))), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1)))));
            Skip If(And(First Of((Event Player).lIlIlIIIlllIIIIlIIlIlllllI), Compare(First Of((Event Player).lIlIlIIIlllIIIIlIIlIlllllI), !=, Global.IIIIlllIIIIlIIIlIIIIllllIl)), 2);
            Call Subroutine(lIIllllIIIlIlIIIIllIIIIIll);
            Abort;
            //lbl_0:
        End;
        If(And(And(Compare((Event Player).lIlllllllllIllllIIIIlllIlI, >=, 6), Compare((Event Player).IIIIlllIllIIIllIllIlIlIlll, <, (Event Player).IllllIIlllllIIllIIllIlIlIl)), Compare(Distance Between(Event Player, (Event Player).IIIllIIlIlIIIlllllllIIIlIl), <=, Add(1.75, Compare((Event Player).lIlllllllllIllllIIIIlllIlI, >=, 7)))));
            Call Subroutine(lIlIIlIllllllIIllllllIIIIl);
            Abort;
        End;
        Abort If(Or(Is Duplicating(Event Player), Compare(Distance Between(Event Player, Global.IlIlIIIlIIllllIllIlllllIll), >, Global.IIIlIIlIIIIIlIlIIIlIllIlII)));
        Call Subroutine(lIlIllllIllllIIIllllIIIIlI);
        Abort If(Compare(Distance Between(Event Player, Global.IIIlIlllIllllIlllllllIIlII), >, 1.75));
        Abort If(And(First Of((Event Player).lIlIlIIIlllIIIIlIIlIlllllI), Compare(First Of((Event Player).lIlIlIIIlllIIIIlIIlIlllllI), !=, Global.IIIlIlllIllllIlllllllIIlII)));
        Set Global Variable(IlIIlIIIlllIIlIllIIIIIllIl, Index Of Array Value(Global.IllIlIIIlIlIIIlIlllIIIllII, Global.IIIlIlllIllllIlllllllIIlII));
        Call Subroutine(llIIlIIIIIIIllIlllIIIIlIII);
        Call Subroutine(llllIllIlIIIIIllIlIIIIIIIl);
    }
}

rule ("llIIlIlIIlIIIlIlIlllllIIII") {
    event {
        Subroutine;
        lIIIIIIllIIllIlIIIlIlIlIll;
    }
    actions {
        Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, First Of(Sorted Array((Event Player).lIIIIllIIIIIlIIIIllllIlIlI, Distance Between(Current Array Element, Position Of(Event Player)))));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, Index Of Array Value((Event Player).lIIIIllIIIIIlIIIIllllIlIlI, Global.IIIIlllIIIIlIIIlIIIIllllIl));
        Abort If(Or(Compare(First Of((Event Player).llllllIllIIlllllIlIIlIIllI), !=, 2), Compare(Distance Between(Global.IIIIlllIIIIlIIIlIIIIllllIl, Event Player), <=, 2.5)));
        Set Global Variable(lIIIIIllllIlIIIIlIIIlIIIll, First Of(Sorted Array(Array Slice(Global.llIlIlIllIIllIlIlllIIlllIl, 0, 3), Subtract(Distance Between(Value In Array((Event Player).lIIIIllIIIIIlIIIIllllIlIlI, Current Array Element), Event Player), Multiply(Multiply(15, Not(Modulo(Value In Array((Event Player).llIIIlllIIIlllllIIllIIIIIl, Current Array Element), 1))), Value In Array((Event Player).IIIIIIIIlIIlIIIIIIIllIIIII, 1))))));
        Set Global Variable(IIIIlllIIIIlIIIlIIIIllllIl, Value In Array((Event Player).lIIIIllIIIIIlIIIIllllIlIlI, Global.lIIIIIllllIlIIIIlIIIlIIIll));
    }
}

rule ("IIIIIlIIIllIIlIlllIIIllIlI") {
    event {
        Subroutine;
        lIlIllllIllllIIIllllIIIIlI;
    }
    actions {
        Set Global Variable(IIIlIlllIllllIlllllllIIlII, First Of(Sorted Array(Global.IllIlIIIlIlIIIlIlllIIIllII, Distance Between(Current Array Element, Event Player))));
    }
}

rule ("IlIIlIllllIllIllIllIlllIII") {
    event {
        Subroutine;
        IllIIIIllIlIIIIIlIlIlIlIll;
    }
    actions {
        Set Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, False);
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 0.25));
        Call Subroutine(lIlIllllllllIIIIllIlIlIIlI);
        Abort If(Global.llllIIIIllIIlIlIIllIIllIll);
        Abort If(And(First Of((Event Player).lIlIlIIIlllIIIIlIIlIlllllI), Compare(First Of((Event Player).lIlIlIIIlllIIIIlIIlIlllllI), !=, 1)));
        Abort If((Event Player).IllIIIlIlllIllIlIIllIllIII);
        Call Subroutine(IIIIlIIlIllIlllIIIIlIlllII);
    }
}

rule ("IlllllIIllIIIIIIIlIllIIlll") {
    event {
        Subroutine;
        lIIIlllIlIIllIlllllllIlllI;
    }
    actions {
        Set Player Variable(Event Player, lIlIIlIIlIllIIIIIlIlIIIIll, False);
        Call Subroutine(lIlIllllllllIIIIllIlIlIIlI);
        Abort If(Global.llllIIIIllIIlIlIIllIIllIll);
        Abort If(And(First Of((Event Player).lIlIlIIIlllIIIIlIIlIlllllI), Compare(First Of((Event Player).lIlIlIIIlllIIIIlIIlIlllllI), !=, 1)));
        If(And(Value In Array((Event Player).lIlIlllIllIlIIIllllIllIlll, 2), (Event Player).IllIIIlIlllIllIlIIllIllIII));
            Call Subroutine(IIIIlIIlIllIlllIIIIlIlllII);
            Abort;
        End;
        Abort If(Not((Event Player).lIlIIlIlIlIIIlIlllllIlIIII));
        If(Not(First Of((Event Player).lIlIlllIllIlIIIllllIllIlll)));
            If(Compare((Event Player).lIlIIlIlIlIIIlIlllllIlIIII, >=, 2));
                Modify Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, Add, 1);
                Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
                Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 0.5));
            End;
            Abort;
        End;
        Set Player Variable(Event Player, IllIlllllIIIlIllIllllllIII, Add(Total Time Elapsed, 0.25));
        Abort If(Not((Event Player).IIIlIlIllIlllIllllIlIllIll));
        Set Global Variable(IIIlIlllIllllIlllllllIIlII, Add(Ray Cast Hit Position(Eye Position(Event Player), Add(Eye Position(Event Player), Multiply(Facing Direction Of(Event Player), 1.5)), All Players(Team 2), Event Player, False), Vector(0, -1.25, 0)));
        Set Player Variable(Event Player, IIIIlIIlIIlIlIIllIIlIIIIII, First Of(Sorted Array(Filtered Array(Remove From Array(All Players(Team 2), Event Player), And((Current Array Element).IIIlIlIllIlllIllllIlIllIll, Compare(Distance Between(Current Array Element, Global.IIIlIlllIllllIlllllllIIlII), <=, 1.25))), Distance Between(Current Array Element, Global.IIIlIlllIllllIlllllllIIlII))));
        Abort If(Not(Array Contains(All Players(Team 2), (Event Player).IIIIlIIlIIlIlIIllIIlIIIIII)));
        Set Player Variable(Event Player, IIllIIllIIIIIlIlIIllIllllI, (Event Player).lIIIIIllIlIIlIlIIIlIlIIlII);
        If(And(And(Not((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII), Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, 59)), Compare(Modulo(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 17)), 100), >, 25)));
            Small Message(Event Player, Custom String("Item cannot be gifted (Super Novice)"));
            Abort;
        End;
        If(Compare((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII, >=, 5));
            Small Message(Event Player, Custom String("Item cannot be gifted ({0})", Value In Array(Global.lIIlIllllllIlllIlIIlIIllll, (Event Player).lIIIIIllIlIIlIlIIIlIlIIlII)));
            Abort;
        End;
        If(And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 5)), >, 2), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 2))));
            Small Message(Event Player, Custom String("Item cannot be gifted (enchanted)"));
            Abort;
        End;
        If(And(Compare(Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 5)), >, 2), Value In Array((Event Player).IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 3))));
            Small Message(Event Player, Custom String("Item cannot be gifted (infused with Arcane Crystal Fragment)"));
            Abort;
        End;
        If(And(Compare((Event Player).IIIlIlIllIlllIllllIlIllIll, >, 99), Compare(((Event Player).IIIIlIIlIIlIlIIllIIlIIIIII).IIIlIlIllIlllIllllIlIllIll, <=, 99)));
            Small Message(Event Player, Custom String("Recipient needs to be level 100+"));
            Abort;
        End;
        If(Compare(((Event Player).IIIIlIIlIIlIlIIllIIlIIIIII).llIlIIIlIlIIlIIIllllIlllII, <, Subtract((Event Player).llIlIIIlIlIIlIIIllllIlllII, 15)));
            Small Message(Event Player, Custom String("Recipient's level is too low"));
            Abort;
        End;
        If(Compare((Event Player).IlllIlIIIIIlIlllIIIIlIllll, <, (Event Player).IIllIIllIIIIIlIlIIllIllllI));
            Call Subroutine(IlllIIIIlIIlIIIIllllllllIl);
            Abort;
        End;
        If(Compare(((Event Player).IIIIlIIlIIlIlIIllIIlIIIIII).lIlIIlIlIlIIIlIlllllIlIIII, >=, 5));
            Small Message(Event Player, Custom String("{0}'s Inventory is full", (Event Player).IIIIlIIlIIlIlIIllIIlIIIIII));
            Abort;
        End;
        If(Compare(((Event Player).IIIIlIIlIIlIlIIllIIlIIIIII).IllIlllllIIIlIllIllllllIII, >, Total Time Elapsed));
            Small Message(Event Player, Custom String("Player is not ready"));
            Abort;
        End;
        Call Subroutine(IIIllIlIIllIllllIIIlllIlIl);
        If(Not((Event Player).lIIIIIllIlIIlIlIIIlIlIIlII));
            For Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 11, 17, 1);
                Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, Global.IlllllIIlIIllIlIlIIIlIlIlI), 0);
            End;
            Set Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 17), 100);
        Else;
            Modify Player Variable At Index(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Add((Event Player).IlIllIIlllllllllIIIIllllll, 17), Add, 100);
        End;
        Modify Player Variable(Event Player, lIlIIlIlIlIIIlIlllllIlIIII, Subtract, 1);
        Modify Player Variable((Event Player).IIIIlIIlIIlIlIIllIIlIIIIII, IIlIlIlIIlIIIllIllIlIIllll, Append To Array, Array Slice((Event Player).IIlIlIlIIlIIIllIllIlIIllll, (Event Player).IlIllIIlllllllllIIIIllllll, 19));
        Set Global Variable(lIIlllIllllIlIIIIlIllIIIlI, (Event Player).IlIllIIlllllllllIIIIllllll);
        For Global Variable(IlllllIIlIIllIlIlIIIlIlIlI, 0, 19, 1);
            Modify Player Variable(Event Player, IIlIlIlIIlIIIllIllIlIIllll, Remove From Array By Index, Global.lIIlllIllllIlIIIIlIllIIIlI);
        End;
        Modify Player Variable(Event Player, lllllIIlllIlllllIIlIIlllII, Subtract, Multiply(Compare((Event Player).lllllIIlllIlllllIIlIIlllII, >=, (Event Player).IlIllIIlllllllllIIIIllllll), 19));
        If(Compare((Event Player).IlIlIIIlIIllIIIIllIlIIllll, >, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII));
            Set Player Variable(Event Player, IlIlIIIlIIllIIIIllIlIIllll, (Event Player).lIlIIlIlIlIIIlIlllllIlIIII);
        End;
        Call Subroutine(IllIIllIIIIIllIIIIllIIIlII);
        Small Message(Event Player, Custom String("Item gifted to {0}", (Event Player).IIIIlIIlIIlIlIIllIIlIIIIII));
        Set Player Variable At Index((Event Player).IIIIlIIlIIlIlIIllIIlIIIIII, lIlIIIIlIIlIIlIIlIIIllllII, 3, Custom String("Obtained a gift from {0}", Event Player));
        Set Player Variable((Event Player).IIIIlIIlIIlIlIIllIIlIIIIII, lllIlIlIlIIIIlIIllIIlIIIIl, True);
    }
}

rule ("llIIIllIIllIIlllllIlIllIIl") {
    event {
        Subroutine;
        lIlIllllllllIIIIllIlIlIIlI;
    }
    actions {
        Set Global Variable(llllIIIIllIIlIlIIllIIllIll, False);
        If(And(Compare(Distance Between(Event Player, Global.IlIlIIIlIIllllIllIlllllIll), <=, Global.IIIlIIlIIIIIlIlIIIlIllIlII), Not(Is Duplicating(Event Player))));
            Set Global Variable(IIIlIlllIllllIlllllllIIlII, First Of(Sorted Array(Array Slice(Global.IllIlIIIlIlIIIlIlllIIIllII, 2, 9), Distance Between(Current Array Element, Event Player))));
            If(Compare(Distance Between(Event Player, Global.IIIlIlllIllllIlllllllIIlII), <=, 1.75));
                Skip If(And(First Of((Event Player).lIlIlIIIlllIIIIlIIlIlllllI), Compare(First Of((Event Player).lIlIlIIIlllIIIIlIIlIlllllI), !=, Global.IIIlIlllIllllIlllllllIIlII)), 2);
                Set Global Variable(IlIIlIIIlllIIlIllIIIIIllIl, Index Of Array Value(Global.IllIlIIIlIlIIIlIlllIIIllII, Global.IIIlIlllIllllIlllllllIIlII));
                Call Subroutine(lIIlllIlllIIllIllllllIllII);
                //lbl_0:
                Set Global Variable(llllIIIIllIIlIlIIllIIllIll, True);
                Abort;
            End;
        End;
    }
}

rule ("IIIIlIIlllIllIIlllIIIIIlll") {
    event {
        Subroutine;
        IlIllIIIlIIIIIlIIlIlIIlIIl;
    }
    actions {
        Abort If(Not(Global.IlllllIIlIIllIlIlIIIlIlIlI));
        Skip(Multiply(2, Subtract(Global.IlllllIIlIIllIlIlIIIlIlIlI, 1)));
        Call Subroutine(IIIIlllllIIIlllIIlllIllllI);
        Abort;
        Call Subroutine(IllIIIIIllIlllllIlIllIlllI);
        Abort;
        Call Subroutine(IIlIIIIIIllIlIlllIllIIIlll);
        Abort;
        Call Subroutine(lllIIIlIlIllIIIlIIIIIlIIIl);
        Abort;
        Call Subroutine(IIlIIllIlIllIIIlllIlllllll);
        Abort;
        Call Subroutine(IlIlIlIIIIIlllllllllIlllIl);
        Abort;
        Call Subroutine(llIIlIIlIllIIlIllIIlIlIIII);
        Abort;
        Call Subroutine(lllIIIIIIllIlIIlIIlIIIIIII);
        Abort;
        Call Subroutine(lllllllIIIIIIIllIIllllIIlI);
    }
}

rule ("lIIlIlIlIllIIlIIIIIlIllIlI") {
    event {
        Subroutine;
        IIIIlllllIIIlllIIlllIllllI;
    }
    actions {
        Abort If(Compare((Event Player).IlllIllIlIlllIlIlIIlIllIlI, !=, 1));
        Set Player Variable(Event Player, lIlIlllIIlIlllIIIIllIIlIlI, First Of(Filtered Array(Value In Array((Event Player).IIlIllllIllIIllIlIIlIIlIll, 1), Is In View Angle(Event Player, Current Array Element, 2.4))));
        If((Event Player).lIlIlllIIlIlllIIIIllIIlIlI);
            Set Player Variable(Event Player, lIlIlllIIlIlllIIIIllIIlIlI, Add(Index Of Array Value(Value In Array((Event Player).IIlIllllIllIIllIlIIlIIlIll, 1), (Event Player).lIlIlllIIlIlllIIIIllIIlIlI), 1));
            If(Compare((Event Player).lIlIlllIIlIlllIIIIllIIlIlI, <=, 10));
                If(Compare((Event Player).IIllIlllIllIIIllIIIlllIIII, >, Total Time Elapsed));
                    Modify Player Variable(Event Player, IIIlIIIIlIlllllIllIlIIlllI, Add, 1);
                    Call Subroutine(lIllIlllIIIlIllIIIlIlIlIlI);
                End;
                Play Effect(Event Player, Buff Impact Sound, Null, Event Player, 10);
                Set Player Variable At Index(Event Player, llIIllllIIlIIIIIIIlIlIlllI, (Event Player).IIIlIIIIlIlllllIllIlIIlllI, (Event Player).lIlIlllIIlIlllIIIIllIIlIlI);
                Call Subroutine(llllIlIllIIIlIIIlllIIlIIIl);
                Set Player Variable(Event Player, IIllIlllIllIIIllIIIlllIIII, Add(Total Time Elapsed, 0.305));
                Wait(0.05, Restart When True);
                Set Player Variable(Event Player, lIlIlIIlIIIllIIIlIIlIllIIl, Add(Total Time Elapsed, 0.05));
                Wait(0.25, Restart When True);
                Modify Player Variable(Event Player, IIIlIIIIlIlllllIllIlIIlllI, Add, 1);
            Else;
                Play Effect(Event Player, Explosion Sound, Null, Event Player, 10);
                Modify Player Variable(Event Player, IIIlIIIIlIlllllIllIlIIlllI, Add, Multiply(Subtract(Multiply(2, (Event Player).lIlIlllIIlIlllIIIIllIIlIlI), 23), Add(1, Multiply(3, Is Button Held(Event Player, Button(Jump))))));
            End;
            Call Subroutine(lIllIlllIIIlIllIIIlIlIlIlI);
            Abort;
        End;
        Set Player Variable(Event Player, lIlIlllIIlIlllIIIIllIIlIlI, False);
        Play Effect(Event Player, Debuff Impact Sound, Null, Event Player, 10);
    }
}

rule ("lIIIIIlIlIIllllIlIllIllIIl") {
    event {
        Subroutine;
        IllIIIIIllIlllllIlIllIlllI;
    }
    actions {
        Abort If(Compare((Event Player).IlllIllIlIlllIlIlIIlIllIlI, !=, 1));
        Modify Player Variable At Index(Event Player, llIIllllIIlIIIIIIIlIlIlllI, (Event Player).IIIlIIIIlIlllllIllIlIIlllI, Add, Add(1, Is Button Held(Event Player, Button(Jump))));
        Call Subroutine(llllIlIllIIIlIIIlllIIlIIIl);
    }
}

rule ("IIlllIIIIIllIIlllIlIlIlIIl") {
    event {
        Subroutine;
        IIlIIIIIIllIlIlllIllIIIlll;
    }
    actions {
        Abort If(Compare((Event Player).IlllIllIlIlllIlIlIIlIllIlI, !=, 1));
        Modify Player Variable At Index(Event Player, llIIllllIIlIIIIIIIlIlIlllI, (Event Player).IIIlIIIIlIlllllIllIlIIlllI, Subtract, Add(1, Is Button Held(Event Player, Button(Jump))));
        Call Subroutine(llllIlIllIIIlIIIlllIIlIIIl);
    }
}

rule ("llIlIIlllIIIIIIllIIIlIIIII") {
    event {
        Subroutine;
        lllIIIlIlIllIIIlIIIIIlIIIl;
    }
    actions {
        If(Compare((Event Player).IlllIllIlIlllIlIlIIlIllIlI, ==, 2));
            Modify Player Variable(Event Player, lIIIlIIllIIIlllllIIIIllIlI, Add, 1);
            Call Subroutine(lIIlllIlIIlIIIllIllllIlllI);
            Abort;
        End;
        Modify Player Variable(Event Player, IIIlIIIIlIlllllIllIlIIlllI, Add, Add(1, Multiply(3, Is Button Held(Event Player, Button(Jump)))));
        Call Subroutine(lIllIlllIIIlIllIIIlIlIlIlI);
    }
}

rule ("llIllIIIllIIlIllllllIllIlI") {
    event {
        Subroutine;
        IIlIIllIlIllIIIlllIlllllll;
    }
    actions {
        If(Compare((Event Player).IlllIllIlIlllIlIlIIlIllIlI, ==, 2));
            Modify Player Variable(Event Player, lIIIlIIllIIIlllllIIIIllIlI, Subtract, 1);
            Call Subroutine(lIIlllIlIIlIIIllIllllIlllI);
            Abort;
        End;
        Modify Player Variable(Event Player, IIIlIIIIlIlllllIllIlIIlllI, Subtract, Add(1, Multiply(3, Is Button Held(Event Player, Button(Jump)))));
        Call Subroutine(lIllIlllIIIlIllIIIlIlIlIlI);
    }
}

rule ("lIllIllllIllllIIlIIIlIIlll") {
    event {
        Subroutine;
        IlIlIlIIIIIlllllllllIlllIl;
    }
    actions {
        Abort If(Compare((Event Player).IlllIllIlIlllIlIlIIlIllIlI, !=, 1));
        Abort If(Compare(Value In Array((Event Player).lllIIlllIIlIIlllIIIIlllIlI, 6), >, Total Time Elapsed));
        Call Subroutine(IllIIIlIIIIlllIllIlIlIlllI);
    }
}

rule ("IIlllIIIllllIlIlIIlIlIlIII") {
    event {
        Subroutine;
        llIIlIIlIllIIlIllIIlIlIIII;
    }
    actions {
        If(Compare((Event Player).IlllIllIlIlllIlIlIIlIllIlI, ==, 2));
            Call Subroutine(IlIllIllIllIlIlIIlIIIlllIl);
            Abort;
        End;
        If(Is Button Held(Event Player, Button(Reload)));
            Set Player Variable(Event Player, llIIllllIIlIIIIIIIlIlIlllI, Empty Array);
            For Global Variable(lIIlllIllllIlIIIIlIllIIIlI, 0, 4, 1);
                Set Player Variable At Index(Event Player, lllIIlllIIlIIlllIIIIlllIlI, Global.lIIlllIllllIlIIIIlIllIIIlI, 0);
            End;
            Set Player Variable At Index(Event Player, lllIIlllIIlIIlllIIIIlllIlI, 4, Custom String("^___"));
            Set Player Variable(Event Player, IIIlIIIIlIlllllIllIlIIlllI, False);
            Set Player Variable(Event Player, lIlIIIIIIlIIlIlIlIIlIIIIlI, False);
            Abort;
        End;
        Call Subroutine(IlIllIllIllIlIlIIlIIIlllIl);
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        Set Player Variable(Event Player, lllIIlllIIlIIlllIIIIlllIlI, Empty Array);
    }
}

rule ("llIlIIIIIIIIlIlllIllllIlII") {
    event {
        Subroutine;
        lllIIIIIIllIlIIlIIlIIIIIII;
    }
    actions {
        Abort If(Compare((Event Player).IlllIllIlIlllIlIlIIlIllIlI, !=, 1));
        Set Player Variable At Index(Event Player, IIlIllllIllIIllIlIIlIIlIll, 0, Divide(Absolute Value(Angle Difference(Global.IlIllllIIIIIIIIlllIIllIIII, Horizontal Angle From Direction(Facing Direction Of(Event Player)))), 9.388));
        Call Subroutine(IIIlIlllllIlIlllIIIllIIllI);
        Small Message(Event Player, Custom String("Field of View Adjusted"));
        Wait(1, Ignore Condition);
    }
}

rule ("IIIlIIlIllIIIlIlIIIIllIIII") {
    event {
        Subroutine;
        lllllllIIIIIIIllIIllllIIlI;
    }
    actions {
        Abort If(Not(Is Button Held(Event Player, Button(Reload))));
        Set Player Variable(Event Player, IIlIIIIIIllIIlIlIIIlllllIl, Not((Event Player).IIlIIIIIIllIIlIlIIIlllllIl));
        Call Subroutine(IllllllIlIlIIIlIlIIIlIIlII);
        If((Event Player).IIlIIIIIIllIIlIlIIIlllllIl);
            Small Message(Event Player, Custom String("Control Scheme: Legacy"));
        Else;
            Small Message(Event Player, Custom String("Control Scheme: Gamepad"));
        End;
        Wait(1, Ignore Condition);
    }
}

rule ("IllIIllIIlIlIlIIllllIllllI") {
    event {
        Subroutine;
        IIIlIlllllIlIlllIIIllIIllI;
    }
    actions {
        Set Player Variable At Index(Event Player, IIlIllllIllIIllIlIIlIIlIll, 1, Mapped Array(Array(Vector(5.345, -9.893, 0), Vector(0.412, -9.893, 0), Vector(-4.515, -9.893, 0), Vector(5.345, -4.636, 0), Vector(0.412, -4.636, 0), Vector(-4.515, -4.636, 0), Vector(5.345, 0.769, 0), Vector(0.412, 0.769, 0), Vector(-4.515, 0.769, 0), Vector(-9.388, 0.769, 0), Vector(-9.179, -9.893, 0), Vector(-9.091, -4.636, 0)), Add(Global.llIlIIIlllIlIllllllllllIII, Multiply(Direction From Angles(Add(Global.IlIllllIIIIIIIIlllIIllIIII, Multiply(X Component Of(Current Array Element), First Of((Event Player).IIlIllllIllIIllIlIIlIIlIll))), Multiply(Y Component Of(Current Array Element), First Of((Event Player).IIlIllllIllIIllIlIIlIIlIll))), 1000))));
    }
}

